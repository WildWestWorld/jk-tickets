server:
  port: 8002
#  context-path 项目API前缀 加了要放访问的话 必须要加上这个前缀
  servlet:
    context-path: "/business"



spring:
  datasource:
    username: train_business
    password: KEY!moling!6
    url: jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business?characterEncoding=UTF8&autoReconnect=true&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
  #  用于外键
  application:
    name: business-service
#    配置redis
  data:
    redis:
      host: r-bp1e8io6hj1e27e15lpd.redis.rds.aliyuncs.com
      port: 6379
      password: KEY!moling!6
  cache:
    type: redis
    redis:
#      设置键值前缀 用于区别类型 项目隔离
      use-key-prefix: true
#      设置键值前缀
      key-prefix: train_cache_
#      是否可以为null 用于缓存穿透
#      返回了null 就被缓存了，然后就不会继续执行数据库
      cache-null-values: true
#      缓存时间
      time-to-live: 60s

      #  设置sentinel
#  cloud:
#    sentinel:
#      transport:
##        port: 8719是固定的
#        port: 8719
##        dashboard :sentinel 在的端口
#        dashboard: localhost:18080
#        #      设置sentinel的Nacos
#      datasource:
#        nacos:
#          nacos:
#            server-addr: localhost:8848
#            namespace: train
#            group-id: TRAIN_GROUP
#            data-id: sentinel
##            rule-type: flow :流控，限流
#            rule-type: flow


#配置缓存类型为redis


mybatis:
  #让mybatis知道xml文件在哪
  mapper-locations: classpath:/mapper/**/*.xml
  #设置一级缓存是否开启
#  local-cache-scope有session/statement(sql)
#local-cache-scope 什么时候情况缓存，session 绘画结束后清空 ，statement执行完sql就会情况
#  什么时候是session，使用了Transactional 事务注释
  configuration:
    local-cache-scope: statement

# PageHelper 分页插件配置
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countsql


#log4j使用时候 打印sql信息
logging:
  level:
    com:
      jktickets:
        mapper:
          trace


