2023-08-13 11:35:35.197 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 11:35:35.208 INFO  org.hibernate.validator.internal.util.Version     :21   [32m                  [0;39m HV000001: Hibernate Validator 8.0.0.Final
2023-08-13 11:35:35.286 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 11:35:35.326 INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor :250  [32m                  [0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-13 11:35:35.630 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 11:35:35.638 INFO  com.alibaba.nacos.client.utils.ParamUtil          :87   [32m                  [0;39m [settings] [req-serv] nacos-server port:8848
2023-08-13 11:35:35.639 INFO  com.alibaba.nacos.client.utils.ParamUtil          :98   [32m                  [0;39m [settings] [http-client] connect timeout:1000
2023-08-13 11:35:35.641 INFO  com.alibaba.nacos.client.utils.ParamUtil          :105  [32m                  [0;39m PER_TASK_CONFIG_SIZE: 3000.0
2023-08-13 11:35:35.693 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 11:35:35.693 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 11:35:35.697 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :165  [32m                  [0;39m null No credential found
2023-08-13 11:35:36.589 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 11:35:36.612 INFO  c.a.n.client.config.impl.LocalConfigInfoProcessor :63   [32m                  [0;39m LOCAL_SNAPSHOT_PATH:C:\Users\Administrator\nacos\config
2023-08-13 11:35:36.619 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 81d2a817-991e-4aed-946a-389829b95643_config-0
2023-08-13 11:35:36.654 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$601/0x0000000800f98b38
2023-08-13 11:35:36.655 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$602/0x0000000800f98f58
2023-08-13 11:35:36.656 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 11:35:36.656 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 11:35:36.666 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 11:35:36.709 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 11:35:38.553 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691897738319_127.0.0.1_58666
2023-08-13 11:35:38.554 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Notify connected event to listeners.
2023-08-13 11:35:38.554 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Connected,notify listen context...
2023-08-13 11:35:38.554 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 11:35:38.555 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [81d2a817-991e-4aed-946a-389829b95643_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010dcaf8
2023-08-13 11:35:38.613 INFO  com.alibaba.nacos.client.config.impl.Limiter      :62   [32m                  [0;39m limitTime:5.0
2023-08-13 11:35:38.631 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service] & group[DEFAULT_GROUP]
2023-08-13 11:35:38.639 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service.properties] & group[DEFAULT_GROUP]
2023-08-13 11:35:38.645 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service-dev.properties] & group[DEFAULT_GROUP]
2023-08-13 11:35:38.646 INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration    :108  [32m                  [0;39m Located property source: [BootstrapPropertySource {name='bootstrapProperties-business-service-dev.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service,DEFAULT_GROUP'}]
2023-08-13 11:35:38.669 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 11:35:38.671 INFO  com.jktickets.BusinessApplication                 :636  [32m                  [0;39m The following 1 profile is active: "dev"
2023-08-13 11:35:40.775 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :294  [32m                  [0;39m Multiple Spring Data modules found, entering strict repository configuration mode
2023-08-13 11:35:40.779 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :138  [32m                  [0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-08-13 11:35:40.818 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :208  [32m                  [0;39m Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2023-08-13 11:35:41.220 INFO  o.springframework.cloud.context.scope.GenericScope:282  [32m                  [0;39m BeanFactory id=77b91a00-64d4-3369-b68d-daf695498ba4
2023-08-13 11:35:41.370 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'com.jktickets.feign.MemberFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.388 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.389 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.390 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.473 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.479 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.481 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.482 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$741/0x0000000801264870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.483 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.491 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.504 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 11:35:41.508 INFO  i.s.s.boot.autoconfigure.SeataAutoConfiguration   :63   [32m                  [0;39m Automatically configure Seata
2023-08-13 11:35:41.595 INFO  io.seata.config.ConfigurationFactory              :64   [32m                  [0;39m load Configuration from :Spring Configuration
2023-08-13 11:35:41.605 INFO  io.seata.config.nacos.NacosConfiguration          :233  [32m                  [0;39m Nacos check auth with userName/password.
2023-08-13 11:35:41.623 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 11:35:41.623 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 11:35:41.832 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0
2023-08-13 11:35:41.833 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$601/0x0000000800f98b38
2023-08-13 11:35:41.833 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$602/0x0000000800f98f58
2023-08-13 11:35:41.834 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 11:35:41.834 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 11:35:41.835 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 11:35:41.836 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 11:35:41.958 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691897741846_127.0.0.1_58672
2023-08-13 11:35:41.958 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 11:35:41.958 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Notify connected event to listeners.
2023-08-13 11:35:41.958 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Connected,notify listen context...
2023-08-13 11:35:41.958 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5f048bf3-b426-4fc8-b08d-676173e69c6c_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010dcaf8
2023-08-13 11:35:41.969 INFO  com.alibaba.nacos.client.config.utils.JvmUtil     :54   [32m                  [0;39m isMultiInstance:false
2023-08-13 11:35:41.978 INFO  com.alibaba.nacos.client.config.impl.CacheData    :67   [32m                  [0;39m nacos.cache.data.init.snapshot = true 
2023-08-13 11:35:41.980 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] seataServer.properties+SEATA_GROUP+train
2023-08-13 11:35:41.995 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=seataServer.properties, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:42.015 INFO  i.seata.spring.annotation.GlobalTransactionScanner:211  [32m                  [0;39m Initializing Global Transaction Clients ... 
2023-08-13 11:35:42.203 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableTmClientBatchSendRequest+SEATA_GROUP+train
2023-08-13 11:35:42.203 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:42.203 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-13 11:35:42.223 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-13 11:35:42.224 INFO  io.seata.discovery.registry.RegistryFactory       :50   [32m                  [0;39m use registry center type: nacos
2023-08-13 11:35:42.234 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.vgroupMapping.train-group+SEATA_GROUP+train
2023-08-13 11:35:42.235 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.vgroupMapping.train-group, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:42.242 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-13 11:35:42.254 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 11:35:42.254 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 11:35:42.354 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 2fb648ef-c246-41d1-9e63-f9f2c5cf650f
2023-08-13 11:35:42.356 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-13 11:35:42.357 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-13 11:35:42.358 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-13 11:35:42.359 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 11:35:42.359 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 11:35:42.476 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691897742366_127.0.0.1_58674
2023-08-13 11:35:42.476 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 11:35:42.476 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Notify connected event to listeners.
2023-08-13 11:35:42.476 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010dcaf8
2023-08-13 11:35:42.476 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-13 11:35:42.478 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-13 11:35:42.502 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"instanceIdGenerator":"simple","instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 11:35:42.505 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"instanceIdGenerator":"simple","instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 11:35:42.512 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-13 11:35:42.514 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-13 11:35:42.644 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:TMROLE,address:192.168.0.102:8091,msg:< RegisterTMRequest{version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='ak=null
digest=train-group,192.168.0.102,1691897742642
timestamp=1691897742642
authVersion=V4
vgroup=train-group
ip=192.168.0.102
'} >
2023-08-13 11:35:42.923 WARN  i.s.c.l.EnhancedServiceLoader$InnerEnhancedServiceLoader:545  [32m                  [0;39m Load [io.seata.serializer.hessian.HessianSerializer] class fail: com/caucho/hessian/io/AbstractHessianOutput
2023-08-13 11:35:42.951 INFO  io.seata.core.rpc.netty.TmNettyRemotingClient     :224  [32m                  [0;39m register TM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x80dec39f, L:/192.168.0.102:58675 - R:/192.168.0.102:8091]
2023-08-13 11:35:42.956 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 65 ms, version:1.6.1,role:TMROLE,channel:[id: 0x80dec39f, L:/192.168.0.102:58675 - R:/192.168.0.102:8091]
2023-08-13 11:35:42.957 INFO  i.seata.spring.annotation.GlobalTransactionScanner:225  [32m                  [0;39m Transaction Manager Client is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-13 11:35:42.970 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableRmClientBatchSendRequest+SEATA_GROUP+train
2023-08-13 11:35:42.971 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:42.971 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-13 11:35:42.995 INFO  io.seata.rm.datasource.AsyncWorker                :73   [32m                  [0;39m Async Commit Buffer Limit: 10000
2023-08-13 11:35:42.996 INFO  io.seata.rm.datasource.xa.ResourceManagerXA       :59   [32m                  [0;39m ResourceManagerXA init ...
2023-08-13 11:35:43.005 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-13 11:35:43.006 INFO  i.seata.spring.annotation.GlobalTransactionScanner:230  [32m                  [0;39m Resource Manager is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-13 11:35:43.006 INFO  i.seata.spring.annotation.GlobalTransactionScanner:234  [32m                  [0;39m Global Transaction Clients are initialized. 
2023-08-13 11:35:43.047 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Receive server push request, request = NotifySubscriberRequest, requestId = 2
2023-08-13 11:35:43.047 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"instanceIdGenerator":"simple","instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 11:35:43.047 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatInterval":5000,"instanceIdGenerator":"simple","instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 11:35:43.048 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [2fb648ef-c246-41d1-9e63-f9f2c5cf650f] Ack server push request, request = NotifySubscriberRequest, requestId = 2
2023-08-13 11:35:44.369 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :114  [32m                  [0;39m Tomcat initialized with port(s): 8002 (http)
2023-08-13 11:35:44.383 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Initializing ProtocolHandler ["http-nio-8002"]
2023-08-13 11:35:44.384 INFO  org.apache.catalina.core.StandardService          :173  [32m                  [0;39m Starting service [Tomcat]
2023-08-13 11:35:44.385 INFO  org.apache.catalina.core.StandardEngine           :173  [32m                  [0;39m Starting Servlet engine: [Apache Tomcat/10.1.1]
2023-08-13 11:35:44.483 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring embedded WebApplicationContext
2023-08-13 11:35:44.483 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext    :291  [32m                  [0;39m Root WebApplicationContext: initialization completed in 5791 ms
2023-08-13 11:35:44.975 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32m                  [0;39m HikariPool-1 - Starting...
2023-08-13 11:35:45.337 INFO  com.zaxxer.hikari.pool.HikariPool                 :565  [32m                  [0;39m HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3feb263c
2023-08-13 11:35:45.340 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32m                  [0;39m HikariPool-1 - Start completed.
2023-08-13 11:35:45.447 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-13 11:35:45.448 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :276  [32m                  [0;39m RM will register :jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-13 11:35:45.448 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:RMROLE,address:192.168.0.102:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='null'} >
2023-08-13 11:35:45.458 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :177  [32m                  [0;39m register RM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x0273e03d, L:/192.168.0.102:58678 - R:/192.168.0.102:8091]
2023-08-13 11:35:45.459 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 9 ms, version:1.6.1,role:RMROLE,channel:[id: 0x0273e03d, L:/192.168.0.102:58678 - R:/192.168.0.102:8091]
2023-08-13 11:35:45.472 INFO  i.s.s.a.datasource.SeataAutoDataSourceProxyCreator:101  [32m                  [0;39m Auto proxy data source 'dataSource' by 'AT' mode.
2023-08-13 11:35:46.375 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :62   [32m                  [0;39m Unable to start LiveReload server
2023-08-13 11:35:46.421 INFO  o.s.cloud.openfeign.FeignClientFactoryBean        :437  [32m                  [0;39m For 'member-service' URL not provided. Will try picking an instance via load-balancing.
2023-08-13 11:35:46.602 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] client.tm.degradeCheck+SEATA_GROUP+train
2023-08-13 11:35:46.602 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:46.603 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=2
2023-08-13 11:35:46.610 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.disableGlobalTransaction+SEATA_GROUP+train
2023-08-13 11:35:46.610 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=1
2023-08-13 11:35:46.610 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=2
2023-08-13 11:35:46.610 INFO  i.seata.spring.annotation.GlobalTransactionScanner:308  [32m                  [0;39m Bean [com.jktickets.service.impl.AfterConfirmOrderServiceImpl] with name [afterConfirmOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2023-08-13 11:35:46.634 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.redisson.spring.starter.RedissonAutoConfiguration
2023-08-13 11:35:46.761 INFO  org.redisson.Version                              :41   [32m                  [0;39m Redisson 3.21.0
2023-08-13 11:35:47.184 INFO  o.r.connection.pool.MasterPubSubConnectionPool    :158  [32m                  [0;39m 1 connections initialized for r-bp1e8io6hj1e27e15lpd.redis.rds.aliyuncs.com/47.110.123.191:6379
2023-08-13 11:35:47.960 INFO  org.redisson.connection.pool.MasterConnectionPool :158  [32m                  [0;39m 24 connections initialized for r-bp1e8io6hj1e27e15lpd.redis.rds.aliyuncs.com/47.110.123.191:6379
2023-08-13 11:35:48.901 INFO  c.alibaba.cloud.sentinel.SentinelWebMvcConfigurer :52   [32m                  [0;39m [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2023-08-13 11:35:50.001 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.github.pagehelper.autoconfigure.PageHelperStandardProperties
2023-08-13 11:35:51.594 INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver  :58   [32m                  [0;39m Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-13 11:35:51.675 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 11:35:51.676 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 11:35:51.682 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-localhost_8848] [subscribe] sentinel-business-flow+DEFAULT_GROUP+train
2023-08-13 11:35:51.682 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-localhost_8848] [add-listener] ok, tenant=train, dataId=sentinel-business-flow, group=DEFAULT_GROUP, cnt=1
2023-08-13 11:35:51.683 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 96d097bf-6926-4361-b5a2-15dd74075728_config-0
2023-08-13 11:35:51.683 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$601/0x0000000800f98b38
2023-08-13 11:35:51.683 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$602/0x0000000800f98f58
2023-08-13 11:35:51.683 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 11:35:51.683 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 11:35:51.684 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Try to connect to server on start up, server: {serverIp = 'localhost', server main port = 8848}
2023-08-13 11:35:51.684 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:localhost ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 11:35:51.800 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Success to connect to server [localhost:8848] on start up, connectionId = 1691897751690_127.0.0.1_58715
2023-08-13 11:35:51.800 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 11:35:51.800 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Notify connected event to listeners.
2023-08-13 11:35:51.800 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010dcaf8
2023-08-13 11:35:51.800 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [96d097bf-6926-4361-b5a2-15dd74075728_config-0] Connected,notify listen context...
2023-08-13 11:35:51.943 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Starting ProtocolHandler ["http-nio-8002"]
2023-08-13 11:35:51.961 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :226  [32m                  [0;39m Tomcat started on port(s): 8002 (http) with context path '/business'
2023-08-13 11:35:51.964 INFO  com.alibaba.nacos.client.naming                   :62   [32m                  [0;39m initializer namespace from ans.namespace attribute : null
2023-08-13 11:35:51.964 INFO  com.alibaba.nacos.client.naming                   :66   [32m                  [0;39m initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2023-08-13 11:35:51.964 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-13 11:35:51.965 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 11:35:51.965 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 11:35:51.966 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 17f959e8-07ea-48ee-8c1e-ae2772c324f1
2023-08-13 11:35:51.966 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-13 11:35:51.967 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-13 11:35:51.967 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-13 11:35:51.967 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 11:35:51.967 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 11:35:52.078 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691897751972_127.0.0.1_58716
2023-08-13 11:35:52.078 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Notify connected event to listeners.
2023-08-13 11:35:52.078 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 11:35:52.078 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-13 11:35:52.078 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [17f959e8-07ea-48ee-8c1e-ae2772c324f1] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010dcaf8
2023-08-13 11:35:52.079 INFO  com.alibaba.nacos.client.naming                   :121  [32m                  [0;39m [REGISTER-SERVICE] train registering service business-service with instance Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2023-08-13 11:35:52.089 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :76   [32m                  [0;39m nacos registry, DEFAULT_GROUP business-service 192.168.0.102:8002 register finished
2023-08-13 11:35:52.523 INFO  com.jktickets.BusinessApplication                 :57   [32m                  [0;39m Started BusinessApplication in 18.541 seconds (process running for 20.002)
2023-08-13 11:35:52.532 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service+DEFAULT_GROUP+train
2023-08-13 11:35:52.532 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service, group=DEFAULT_GROUP, cnt=1
2023-08-13 11:35:52.532 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service, group=DEFAULT_GROUP
2023-08-13 11:35:52.533 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service.properties+DEFAULT_GROUP+train
2023-08-13 11:35:52.533 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service.properties, group=DEFAULT_GROUP, cnt=1
2023-08-13 11:35:52.533 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service.properties, group=DEFAULT_GROUP
2023-08-13 11:35:52.533 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service-dev.properties+DEFAULT_GROUP+train
2023-08-13 11:35:52.534 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service-dev.properties, group=DEFAULT_GROUP, cnt=1
2023-08-13 11:35:52.534 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service-dev.properties, group=DEFAULT_GROUP
2023-08-13 11:35:52.536 INFO  com.jktickets.BusinessApplication                 :33   [32m                  [0;39m 启动成功！！
2023-08-13 11:35:52.536 INFO  com.jktickets.BusinessApplication                 :35   [32m                  [0;39m 测试地址: 	http://127.0.0.1:8002/business/hello
2023-08-13 11:35:52.824 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-13 11:35:52.825 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m                  [0;39m Initializing Servlet 'dispatcherServlet'
2023-08-13 11:35:52.828 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m                  [0;39m Completed initialization in 3 ms
2023-08-13 11:37:52.130 INFO  i.s.core.rpc.processor.client.RmUndoLogProcessor  :49   [32m                  [0;39m rm handle undo log process:UndoLogDeleteRequest{resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', saveDays=7, branchType=AT}
2023-08-13 11:42:46.829 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169189816671615i  [0;39m ------------- 开始 -------------
2023-08-13 11:42:46.830 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169189816671615i  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 11:42:46.830 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169189816671615i  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 11:42:46.831 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169189816671615i  [0;39m 远程地址: 192.168.0.102
2023-08-13 11:42:46.901 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169189816671615i  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 11:42:46.904 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169189816671615i  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:42:46.904 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169189816671615i  [0;39m 参数值: com.jktickets.domain.SkTokenExample@23136216
2023-08-13 11:42:47.052 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169189816671615i  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 11:42:47.073 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169189816671615i  [0;39m ==> Parameters: 
2023-08-13 11:42:47.126 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m169189816671615i  [0;39m <==    Columns: count(0)
2023-08-13 11:42:47.126 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m169189816671615i  [0;39m <==        Row: 0
2023-08-13 11:42:47.130 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169189816671615i  [0;39m <==      Total: 1
2023-08-13 11:42:47.133 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169189816671615i  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:42:47.137 INFO  com.jktickets.service.SkTokenService              :79   [32m169189816671615i  [0;39m 总行数：0
2023-08-13 11:42:47.138 INFO  com.jktickets.service.SkTokenService              :80   [32m169189816671615i  [0;39m 总页数：0
2023-08-13 11:42:47.158 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169189816671615i  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[],"total":0},"success":true}
2023-08-13 11:42:47.159 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169189816671615i  [0;39m ------------- 结束 耗时：331 ms -------------
2023-08-13 11:42:53.751 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691898173750xvr  [0;39m ------------- 开始 -------------
2023-08-13 11:42:53.752 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691898173750xvr  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 11:42:53.752 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691898173750xvr  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 11:42:53.752 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691898173750xvr  [0;39m 远程地址: 192.168.0.102
2023-08-13 11:42:53.753 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691898173750xvr  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 11:42:53.753 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691898173750xvr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:42:53.754 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691898173750xvr  [0;39m 参数值: com.jktickets.domain.SkTokenExample@5131623d
2023-08-13 11:42:53.771 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898173750xvr  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 11:42:53.772 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898173750xvr  [0;39m ==> Parameters: 
2023-08-13 11:42:53.787 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691898173750xvr  [0;39m <==    Columns: count(0)
2023-08-13 11:42:53.787 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691898173750xvr  [0;39m <==        Row: 0
2023-08-13 11:42:53.788 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898173750xvr  [0;39m <==      Total: 1
2023-08-13 11:42:53.788 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691898173750xvr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:42:53.789 INFO  com.jktickets.service.SkTokenService              :79   [32m1691898173750xvr  [0;39m 总行数：0
2023-08-13 11:42:53.789 INFO  com.jktickets.service.SkTokenService              :80   [32m1691898173750xvr  [0;39m 总页数：0
2023-08-13 11:42:53.789 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691898173750xvr  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[],"total":0},"success":true}
2023-08-13 11:42:53.790 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691898173750xvr  [0;39m ------------- 结束 耗时：39 ms -------------
2023-08-13 11:43:07.880 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691898187849vlk  [0;39m ------------- 开始 -------------
2023-08-13 11:43:07.881 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691898187849vlk  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/save POST
2023-08-13 11:43:07.881 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691898187849vlk  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.saveSkToken
2023-08-13 11:43:07.881 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691898187849vlk  [0;39m 远程地址: 192.168.0.102
2023-08-13 11:43:07.885 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691898187849vlk  [0;39m 请求参数: [{"count":111,"date":1691856000000,"trainCode":"123"}]
2023-08-13 11:43:07.942 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691898187849vlk  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.SkTokenMapper.insert(SkToken))
2023-08-13 11:43:07.947 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691898187849vlk  [0;39m 参数值: SkToken [Hash = 952261542, id=1690569647734263808, date=Sun Aug 13 00:00:00 CST 2023, trainCode=123, count=111, createTime=2023-08-13 11:43:07, updateTime=2023-08-13 11:43:07]
2023-08-13 11:43:07.962 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691898187849vlk  [0;39m ==>  Preparing: insert into sk_token (id, `date`, train_code, `count`, create_time, update_time ) values (?, ?, ?, ?, ?, ? )
2023-08-13 11:43:07.964 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691898187849vlk  [0;39m ==> Parameters: 1690569647734263808(Long), 2023-08-13(Date), 123(String), 111(Integer), 2023-08-13 11:43:07.887(Timestamp), 2023-08-13 11:43:07.887(Timestamp)
2023-08-13 11:43:08.001 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691898187849vlk  [0;39m <==    Updates: 1
2023-08-13 11:43:08.001 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691898187849vlk  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.SkTokenMapper.insert(SkToken))
2023-08-13 11:43:08.001 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691898187849vlk  [0;39m 返回结果: {"code":0,"message":"","result":"添加SkToken成功","success":true}
2023-08-13 11:43:08.002 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691898187849vlk  [0;39m ------------- 结束 耗时：122 ms -------------
2023-08-13 11:43:08.058 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691898188058msa  [0;39m ------------- 开始 -------------
2023-08-13 11:43:08.059 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691898188058msa  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 11:43:08.059 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691898188058msa  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 11:43:08.059 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691898188058msa  [0;39m 远程地址: 192.168.0.102
2023-08-13 11:43:08.059 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691898188058msa  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 11:43:08.059 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691898188058msa  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:43:08.060 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691898188058msa  [0;39m 参数值: com.jktickets.domain.SkTokenExample@4cd2b93f
2023-08-13 11:43:08.063 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898188058msa  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 11:43:08.063 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898188058msa  [0;39m ==> Parameters: 
2023-08-13 11:43:08.082 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691898188058msa  [0;39m <==    Columns: count(0)
2023-08-13 11:43:08.083 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691898188058msa  [0;39m <==        Row: 1
2023-08-13 11:43:08.083 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691898188058msa  [0;39m <==      Total: 1
2023-08-13 11:43:08.085 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691898188058msa  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 11:43:08.086 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691898188058msa  [0;39m ==> Parameters: 10(Integer)
2023-08-13 11:43:08.103 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691898188058msa  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 11:43:08.106 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691898188058msa  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 11:43:08.110 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691898188058msa  [0;39m <==      Total: 1
2023-08-13 11:43:08.110 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691898188058msa  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 11:43:08.111 INFO  com.jktickets.service.SkTokenService              :79   [32m1691898188058msa  [0;39m 总行数：1
2023-08-13 11:43:08.111 INFO  com.jktickets.service.SkTokenService              :80   [32m1691898188058msa  [0;39m 总页数：1
2023-08-13 11:43:08.121 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691898188058msa  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 11:43:08.121 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691898188058msa  [0;39m ------------- 结束 耗时：63 ms -------------
2023-08-13 14:06:05.614 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691906765574mrq  [0;39m ------------- 开始 -------------
2023-08-13 14:06:05.621 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691906765574mrq  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:06:05.621 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691906765574mrq  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:06:05.622 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691906765574mrq  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:06:05.623 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691906765574mrq  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:06:05.625 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691906765574mrq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:06:05.626 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691906765574mrq  [0;39m 参数值: com.jktickets.domain.SkTokenExample@50049a99
2023-08-13 14:06:05.652 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906765574mrq  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:06:05.655 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906765574mrq  [0;39m ==> Parameters: 
2023-08-13 14:06:05.670 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906765574mrq  [0;39m <==    Columns: count(0)
2023-08-13 14:06:05.671 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906765574mrq  [0;39m <==        Row: 1
2023-08-13 14:06:05.671 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906765574mrq  [0;39m <==      Total: 1
2023-08-13 14:06:05.673 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906765574mrq  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:06:05.673 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906765574mrq  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:06:05.690 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906765574mrq  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:06:05.692 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906765574mrq  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:06:05.693 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906765574mrq  [0;39m <==      Total: 1
2023-08-13 14:06:05.693 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691906765574mrq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:06:05.694 INFO  com.jktickets.service.SkTokenService              :79   [32m1691906765574mrq  [0;39m 总行数：1
2023-08-13 14:06:05.694 INFO  com.jktickets.service.SkTokenService              :80   [32m1691906765574mrq  [0;39m 总页数：1
2023-08-13 14:06:05.696 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691906765574mrq  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:06:05.696 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691906765574mrq  [0;39m ------------- 结束 耗时：82 ms -------------
2023-08-13 14:06:46.699 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16919068066989a4  [0;39m ------------- 开始 -------------
2023-08-13 14:06:46.699 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16919068066989a4  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:06:46.700 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16919068066989a4  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:06:46.700 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16919068066989a4  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:06:46.700 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16919068066989a4  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:06:46.700 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16919068066989a4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:06:46.701 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16919068066989a4  [0;39m 参数值: com.jktickets.domain.SkTokenExample@60949325
2023-08-13 14:06:46.716 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919068066989a4  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:06:46.717 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919068066989a4  [0;39m ==> Parameters: 
2023-08-13 14:06:46.732 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m16919068066989a4  [0;39m <==    Columns: count(0)
2023-08-13 14:06:46.733 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m16919068066989a4  [0;39m <==        Row: 1
2023-08-13 14:06:46.734 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919068066989a4  [0;39m <==      Total: 1
2023-08-13 14:06:46.734 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919068066989a4  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:06:46.735 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919068066989a4  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:06:46.752 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m16919068066989a4  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:06:46.753 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m16919068066989a4  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:06:46.756 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919068066989a4  [0;39m <==      Total: 1
2023-08-13 14:06:46.757 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16919068066989a4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:06:46.757 INFO  com.jktickets.service.SkTokenService              :79   [32m16919068066989a4  [0;39m 总行数：1
2023-08-13 14:06:46.757 INFO  com.jktickets.service.SkTokenService              :80   [32m16919068066989a4  [0;39m 总页数：1
2023-08-13 14:06:46.758 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16919068066989a4  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:06:46.758 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16919068066989a4  [0;39m ------------- 结束 耗时：59 ms -------------
2023-08-13 14:07:02.856 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691906822855dgx  [0;39m ------------- 开始 -------------
2023-08-13 14:07:02.856 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691906822855dgx  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:07:02.856 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691906822855dgx  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:07:02.856 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691906822855dgx  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:07:02.856 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691906822855dgx  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:07:02.857 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691906822855dgx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:02.857 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691906822855dgx  [0;39m 参数值: com.jktickets.domain.SkTokenExample@6ad47d4f
2023-08-13 14:07:02.882 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906822855dgx  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:07:02.882 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906822855dgx  [0;39m ==> Parameters: 
2023-08-13 14:07:02.898 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906822855dgx  [0;39m <==    Columns: count(0)
2023-08-13 14:07:02.898 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906822855dgx  [0;39m <==        Row: 1
2023-08-13 14:07:02.899 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906822855dgx  [0;39m <==      Total: 1
2023-08-13 14:07:02.900 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906822855dgx  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:07:02.900 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906822855dgx  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:07:02.914 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906822855dgx  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:07:02.914 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906822855dgx  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:07:02.915 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906822855dgx  [0;39m <==      Total: 1
2023-08-13 14:07:02.915 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691906822855dgx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:02.916 INFO  com.jktickets.service.SkTokenService              :79   [32m1691906822855dgx  [0;39m 总行数：1
2023-08-13 14:07:02.916 INFO  com.jktickets.service.SkTokenService              :80   [32m1691906822855dgx  [0;39m 总页数：1
2023-08-13 14:07:02.916 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691906822855dgx  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:07:02.916 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691906822855dgx  [0;39m ------------- 结束 耗时：60 ms -------------
2023-08-13 14:07:11.110 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691906831109n37  [0;39m ------------- 开始 -------------
2023-08-13 14:07:11.110 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691906831109n37  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:07:11.110 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691906831109n37  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:07:11.110 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691906831109n37  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:07:11.110 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691906831109n37  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:07:11.111 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691906831109n37  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:11.111 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691906831109n37  [0;39m 参数值: com.jktickets.domain.SkTokenExample@1ab26b82
2023-08-13 14:07:11.129 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906831109n37  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:07:11.130 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906831109n37  [0;39m ==> Parameters: 
2023-08-13 14:07:11.143 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906831109n37  [0;39m <==    Columns: count(0)
2023-08-13 14:07:11.143 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906831109n37  [0;39m <==        Row: 1
2023-08-13 14:07:11.143 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906831109n37  [0;39m <==      Total: 1
2023-08-13 14:07:11.144 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906831109n37  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:07:11.144 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906831109n37  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:07:11.157 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906831109n37  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:07:11.158 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906831109n37  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:07:11.159 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906831109n37  [0;39m <==      Total: 1
2023-08-13 14:07:11.159 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691906831109n37  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:11.160 INFO  com.jktickets.service.SkTokenService              :79   [32m1691906831109n37  [0;39m 总行数：1
2023-08-13 14:07:11.160 INFO  com.jktickets.service.SkTokenService              :80   [32m1691906831109n37  [0;39m 总页数：1
2023-08-13 14:07:11.161 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691906831109n37  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:07:11.161 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691906831109n37  [0;39m ------------- 结束 耗时：51 ms -------------
2023-08-13 14:07:25.964 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691906845963dto  [0;39m ------------- 开始 -------------
2023-08-13 14:07:25.965 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691906845963dto  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:07:25.965 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691906845963dto  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:07:25.965 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691906845963dto  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:07:25.965 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691906845963dto  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:07:25.967 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691906845963dto  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:25.968 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691906845963dto  [0;39m 参数值: com.jktickets.domain.SkTokenExample@5a60678d
2023-08-13 14:07:25.982 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906845963dto  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:07:25.983 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906845963dto  [0;39m ==> Parameters: 
2023-08-13 14:07:25.995 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906845963dto  [0;39m <==    Columns: count(0)
2023-08-13 14:07:25.995 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906845963dto  [0;39m <==        Row: 1
2023-08-13 14:07:25.996 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906845963dto  [0;39m <==      Total: 1
2023-08-13 14:07:25.999 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906845963dto  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:07:25.999 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906845963dto  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:07:26.016 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906845963dto  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:07:26.017 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906845963dto  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:07:26.017 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906845963dto  [0;39m <==      Total: 1
2023-08-13 14:07:26.018 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691906845963dto  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:26.018 INFO  com.jktickets.service.SkTokenService              :79   [32m1691906845963dto  [0;39m 总行数：1
2023-08-13 14:07:26.018 INFO  com.jktickets.service.SkTokenService              :80   [32m1691906845963dto  [0;39m 总页数：1
2023-08-13 14:07:26.019 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691906845963dto  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:07:26.019 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691906845963dto  [0;39m ------------- 结束 耗时：55 ms -------------
2023-08-13 14:07:30.083 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691906850082v8l  [0;39m ------------- 开始 -------------
2023-08-13 14:07:30.083 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691906850082v8l  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 14:07:30.084 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691906850082v8l  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 14:07:30.084 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691906850082v8l  [0;39m 远程地址: 192.168.0.102
2023-08-13 14:07:30.084 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691906850082v8l  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 14:07:30.084 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691906850082v8l  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:30.085 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691906850082v8l  [0;39m 参数值: com.jktickets.domain.SkTokenExample@41669339
2023-08-13 14:07:30.101 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906850082v8l  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 14:07:30.102 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906850082v8l  [0;39m ==> Parameters: 
2023-08-13 14:07:30.118 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906850082v8l  [0;39m <==    Columns: count(0)
2023-08-13 14:07:30.118 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691906850082v8l  [0;39m <==        Row: 1
2023-08-13 14:07:30.119 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691906850082v8l  [0;39m <==      Total: 1
2023-08-13 14:07:30.124 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906850082v8l  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 14:07:30.125 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906850082v8l  [0;39m ==> Parameters: 10(Integer)
2023-08-13 14:07:30.142 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906850082v8l  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 14:07:30.144 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691906850082v8l  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 14:07:30.147 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691906850082v8l  [0;39m <==      Total: 1
2023-08-13 14:07:30.150 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691906850082v8l  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 14:07:30.151 INFO  com.jktickets.service.SkTokenService              :79   [32m1691906850082v8l  [0;39m 总行数：1
2023-08-13 14:07:30.151 INFO  com.jktickets.service.SkTokenService              :80   [32m1691906850082v8l  [0;39m 总页数：1
2023-08-13 14:07:30.152 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691906850082v8l  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 14:07:30.152 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691906850082v8l  [0;39m ------------- 结束 耗时：69 ms -------------
2023-08-13 15:38:59.997 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912339960za0  [0;39m ------------- 开始 -------------
2023-08-13 15:39:00.001 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912339960za0  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/confirmOrder/queryList GET
2023-08-13 15:39:00.001 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912339960za0  [0;39m 类名方法: com.jktickets.controller.admin.ConfirmOrderAdminController.queryDailyTrainList
2023-08-13 15:39:00.002 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912339960za0  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:00.013 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912339960za0  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:39:00.063 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912339960za0  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.ConfirmOrderMapper.selectByExample(ConfirmOrderExample))
2023-08-13 15:39:00.063 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912339960za0  [0;39m 参数值: com.jktickets.domain.ConfirmOrderExample@71056d1e
2023-08-13 15:39:00.117 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m1691912339960za0  [0;39m ==>  Preparing: SELECT count(0) FROM confirm_order
2023-08-13 15:39:00.120 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m1691912339960za0  [0;39m ==> Parameters: 
2023-08-13 15:39:00.135 TRACE c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :143  [32m1691912339960za0  [0;39m <==    Columns: count(0)
2023-08-13 15:39:00.136 TRACE c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :143  [32m1691912339960za0  [0;39m <==        Row: 959
2023-08-13 15:39:00.136 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m1691912339960za0  [0;39m <==      Total: 1
2023-08-13 15:39:00.138 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m1691912339960za0  [0;39m ==>  Preparing: select id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time from confirm_order order by date desc LIMIT ?
2023-08-13 15:39:00.139 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m1691912339960za0  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:39:00.151 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==    Columns: id, member_id, date, train_code, start, end, daily_train_ticket_id, status, create_time, update_time
2023-08-13 15:39:00.154 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689287929857445888, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:50:02.587, 2023-08-09 22:50:03.552
2023-08-13 15:39:00.156 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689287898135924736, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:49:55.024, 2023-08-09 22:49:56.080
2023-08-13 15:39:00.157 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689282463601397760, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:28:19.330, 2023-08-09 22:28:20.788
2023-08-13 15:39:00.159 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689277216262852608, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:07:28.267, 2023-08-09 22:07:29.209
2023-08-13 15:39:00.161 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689277147790839808, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:07:11.937, 2023-08-09 22:07:13.830
2023-08-13 15:39:00.162 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689276079220592640, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:02:57.174, 2023-08-09 22:02:58.084
2023-08-13 15:39:00.163 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689276043694837760, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:02:48.705, 2023-08-09 22:02:49.724
2023-08-13 15:39:00.164 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689275673673338880, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:01:20.485, 2023-08-09 22:01:21.448
2023-08-13 15:39:00.164 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689274900658917376, 1680932902797447168, 2023-08-09, 01, 上海, 温州, 1689272456600227840, S, 2023-08-09 21:58:16.176, 2023-08-09 21:58:17.978
2023-08-13 15:39:00.166 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m1691912339960za0  [0;39m <==        Row: 1689272830358851584, 1680932902797447168, 2023-08-09, 01, 上海, 温州, 1689272456600227840, I, 2023-08-09 21:50:02.580, 2023-08-09 21:50:02.580
2023-08-13 15:39:00.167 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m1691912339960za0  [0;39m <==      Total: 10
2023-08-13 15:39:00.168 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912339960za0  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.ConfirmOrderMapper.selectByExample(ConfirmOrderExample))
2023-08-13 15:39:00.169 INFO  com.jktickets.service.ConfirmOrderService         :128  [32m1691912339960za0  [0;39m 总行数：959
2023-08-13 15:39:00.169 INFO  com.jktickets.service.ConfirmOrderService         :129  [32m1691912339960za0  [0;39m 总页数：96
2023-08-13 15:39:00.193 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912339960za0  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691592602587,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689287929857445888,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691592603552},{"createTime":1691592595024,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689287898135924736,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691592596080},{"createTime":1691591299330,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689282463601397760,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691591300788},{"createTime":1691590048267,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689277216262852608,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691590049209},{"createTime":1691590031937,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689277147790839808,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691590033830},{"createTime":1691589777174,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689276079220592640,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589778084},{"createTime":1691589768705,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689276043694837760,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589769724},{"createTime":1691589680485,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689275673673338880,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589681448},{"createTime":1691589496176,"dailyTrainTicketId":1689272456600227840,"date":1691510400000,"end":"温州","id":1689274900658917376,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589497978},{"createTime":1691589002580,"dailyTrainTicketId":1689272456600227840,"date":1691510400000,"end":"温州","id":1689272830358851584,"memberId":1680932902797447168,"start":"上海","status":"I","trainCode":"01","updateTime":1691589002580}],"total":959},"success":true}
2023-08-13 15:39:00.194 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912339960za0  [0;39m ------------- 结束 耗时：197 ms -------------
2023-08-13 15:39:05.291 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912345290xzi  [0;39m ------------- 开始 -------------
2023-08-13 15:39:05.292 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912345290xzi  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/train/queryAll GET
2023-08-13 15:39:05.292 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912345290xzi  [0;39m 类名方法: com.jktickets.controller.admin.TrainAdminController.queryAllTrainList
2023-08-13 15:39:05.292 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912345290xzi  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:05.293 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912345290xzi  [0;39m 请求参数: []
2023-08-13 15:39:05.296 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912345290xzi  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:05.297 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912345290xzi  [0;39m 参数值: com.jktickets.domain.TrainExample@1f97e122
2023-08-13 15:39:05.297 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169191234529689c  [0;39m ------------- 开始 -------------
2023-08-13 15:39:05.298 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169191234529689c  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/station/queryAll GET
2023-08-13 15:39:05.298 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169191234529689c  [0;39m 类名方法: com.jktickets.controller.admin.StationAdminController.queryAllStationList
2023-08-13 15:39:05.298 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169191234529689c  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:05.298 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169191234529689c  [0;39m 请求参数: []
2023-08-13 15:39:05.301 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191234529689c  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:39:05.301 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191234529689c  [0;39m 参数值: com.jktickets.domain.StationExample@73a5faf3
2023-08-13 15:39:05.341 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912345290xzi  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:39:05.341 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912345290xzi  [0;39m ==> Parameters: 
2023-08-13 15:39:05.357 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912345290xzi  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:39:05.358 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912345290xzi  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:39:05.359 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912345290xzi  [0;39m <==      Total: 1
2023-08-13 15:39:05.359 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912345290xzi  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:05.362 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912345297cdd  [0;39m ------------- 开始 -------------
2023-08-13 15:39:05.362 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912345297cdd  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrainTicket/queryList GET
2023-08-13 15:39:05.362 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912345297cdd  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainTicketAdminController.queryDailyTrainTicketList
2023-08-13 15:39:05.363 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912345297cdd  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:05.363 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169191234529689c  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-13 15:39:05.364 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169191234529689c  [0;39m ==> Parameters: 
2023-08-13 15:39:05.367 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912345297cdd  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:39:05.380 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912345290xzi  [0;39m 返回结果: {"code":0,"message":"","result":[{"code":"01","createTime":1689430563000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680219682084360192,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689430645462}],"success":true}
2023-08-13 15:39:05.380 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912345290xzi  [0;39m ------------- 结束 耗时：89 ms -------------
2023-08-13 15:39:05.380 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169191234529689c  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-13 15:39:05.381 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169191234529689c  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-13 15:39:05.382 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169191234529689c  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-13 15:39:05.384 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169191234529689c  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-13 15:39:05.385 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169191234529689c  [0;39m <==      Total: 3
2023-08-13 15:39:05.386 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191234529689c  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:39:05.400 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169191234529689c  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-13 15:39:05.401 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169191234529689c  [0;39m ------------- 结束 耗时：104 ms -------------
2023-08-13 15:39:05.412 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16919123454129q8  [0;39m ------------- 开始 -------------
2023-08-13 15:39:05.412 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16919123454129q8  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/station/queryAll GET
2023-08-13 15:39:05.412 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16919123454129q8  [0;39m 类名方法: com.jktickets.controller.admin.StationAdminController.queryAllStationList
2023-08-13 15:39:05.412 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16919123454129q8  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:05.412 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16919123454129q8  [0;39m 请求参数: []
2023-08-13 15:39:05.413 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16919123454129q8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:39:05.413 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16919123454129q8  [0;39m 参数值: com.jktickets.domain.StationExample@1b777894
2023-08-13 15:39:05.414 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16919123454129q8  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-13 15:39:05.414 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16919123454129q8  [0;39m ==> Parameters: 
2023-08-13 15:39:05.428 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16919123454129q8  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-13 15:39:05.429 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16919123454129q8  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-13 15:39:05.430 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16919123454129q8  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-13 15:39:05.432 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16919123454129q8  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-13 15:39:05.432 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16919123454129q8  [0;39m <==      Total: 3
2023-08-13 15:39:05.432 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16919123454129q8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:39:05.434 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16919123454129q8  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-13 15:39:05.435 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16919123454129q8  [0;39m ------------- 结束 耗时：23 ms -------------
2023-08-13 15:39:05.564 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912345297cdd  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-13 15:39:05.564 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912345297cdd  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@791f2a20
2023-08-13 15:39:05.571 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912345297cdd  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket
2023-08-13 15:39:05.572 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912345297cdd  [0;39m ==> Parameters: 
2023-08-13 15:39:05.584 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691912345297cdd  [0;39m <==    Columns: count(0)
2023-08-13 15:39:05.585 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691912345297cdd  [0;39m <==        Row: 22
2023-08-13 15:39:05.585 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912345297cdd  [0;39m <==      Total: 1
2023-08-13 15:39:05.586 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912345297cdd  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket order by id desc LIMIT ?
2023-08-13 15:39:05.587 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912345297cdd  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:39:05.600 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-13 15:39:05.614 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1689272457594277888, 2023-08-09, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 24, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:39:05.617 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1689272457040629760, 2023-08-09, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 23, 5.76, 25, 4.32, -1, 8.64, -1, 7.20, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:39:05.619 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1689272456600227840, 2023-08-09, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 23, 0.48, 25, 0.36, -1, 0.72, -1, 0.60, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:39:05.620 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688913100071374848, 2023-08-08, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 0, 5.28, 0, 3.96, -1, 7.92, -1, 6.60, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:39:05.621 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688913099521921024, 2023-08-08, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 0, 5.76, 0, 4.32, -1, 8.64, -1, 7.20, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:39:05.622 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688913099110879232, 2023-08-08, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 0, 0.48, 0, 0.36, -1, 0.72, -1, 0.60, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:39:05.623 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688105548702158848, 2023-08-06, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 23, 5.28, 0, 3.96, -1, 7.92, -1, 6.60, 2023-08-06 16:31:40.773, 2023-08-06 16:31:40.773
2023-08-13 15:39:05.624 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688105548349837312, 2023-08-06, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 23, 5.76, 0, 4.32, -1, 8.64, -1, 7.20, 2023-08-06 16:31:40.773, 2023-08-06 16:31:40.773
2023-08-13 15:39:05.625 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1688105547951378432, 2023-08-06, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 23, 0.48, 0, 0.36, -1, 0.72, -1, 0.60, 2023-08-06 16:31:40.773, 2023-08-06 16:31:40.773
2023-08-13 15:39:05.626 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912345297cdd  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-13 15:39:05.627 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912345297cdd  [0;39m <==      Total: 10
2023-08-13 15:39:05.627 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912345297cdd  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-13 15:39:05.628 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691912345297cdd  [0;39m 总行数：22
2023-08-13 15:39:05.628 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691912345297cdd  [0;39m 总页数：3
2023-08-13 15:39:05.701 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912345297cdd  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1689272457594277888,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691588913475,"ydz":24,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1689272457040629760,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691588913475,"ydz":23,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1689272456600227840,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691588913475,"ydz":23,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688913100071374848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688913099521921024,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1688913099110879232,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691310700773,"date":1691251200000,"edz":0,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688105548702158848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691310700773,"ydz":23,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691310700773,"date":1691251200000,"edz":0,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688105548349837312,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691310700773,"ydz":23,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691310700773,"date":1691251200000,"edz":0,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1688105547951378432,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691310700773,"ydz":23,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691244425455,"date":1691164800000,"edz":-6,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":-1,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":22},"success":true}
2023-08-13 15:39:05.701 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912345297cdd  [0;39m ------------- 结束 耗时：339 ms -------------
2023-08-13 15:39:06.631 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912346630lxq  [0;39m ------------- 开始 -------------
2023-08-13 15:39:06.632 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912346630lxq  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/train/queryAll GET
2023-08-13 15:39:06.632 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912346630lxq  [0;39m 类名方法: com.jktickets.controller.admin.TrainAdminController.queryAllTrainList
2023-08-13 15:39:06.632 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912346630lxq  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:06.633 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912346630lxq  [0;39m 请求参数: []
2023-08-13 15:39:06.633 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912346630lxq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:06.633 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912346630lxq  [0;39m 参数值: com.jktickets.domain.TrainExample@74e2b1a1
2023-08-13 15:39:06.637 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16919123466315st  [0;39m ------------- 开始 -------------
2023-08-13 15:39:06.638 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16919123466315st  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-13 15:39:06.638 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16919123466315st  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-13 15:39:06.638 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16919123466315st  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:06.643 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16919123466315st  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:39:06.650 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912346630lxq  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:39:06.651 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912346630lxq  [0;39m ==> Parameters: 
2023-08-13 15:39:06.660 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16919123466315st  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:39:06.661 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16919123466315st  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@360b4e3
2023-08-13 15:39:06.671 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912346630lxq  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:39:06.671 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912346630lxq  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:39:06.672 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912346630lxq  [0;39m <==      Total: 1
2023-08-13 15:39:06.674 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912346630lxq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:06.675 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912346630lxq  [0;39m 返回结果: {"code":0,"message":"","result":[{"code":"01","createTime":1689430563000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680219682084360192,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689430645462}],"success":true}
2023-08-13 15:39:06.675 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912346630lxq  [0;39m ------------- 结束 耗时：44 ms -------------
2023-08-13 15:39:06.680 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16919123466315st  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-13 15:39:06.681 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16919123466315st  [0;39m ==> Parameters: 
2023-08-13 15:39:06.692 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m16919123466315st  [0;39m <==    Columns: count(0)
2023-08-13 15:39:06.693 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m16919123466315st  [0;39m <==        Row: 8
2023-08-13 15:39:06.693 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16919123466315st  [0;39m <==      Total: 1
2023-08-13 15:39:06.694 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16919123466315st  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-13 15:39:06.694 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16919123466315st  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:39:06.706 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:39:06.707 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1689272446911385600, 2023-08-09, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-09 21:48:31.164, 2023-08-09 21:48:31.164
2023-08-13 15:39:06.708 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1688913089266847744, 2023-08-08, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-08 22:00:33.578, 2023-08-08 22:00:33.578
2023-08-13 15:39:06.710 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1688105537453035520, 2023-08-06, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-06 16:31:38.270, 2023-08-06 16:31:38.270
2023-08-13 15:39:06.711 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1687827556604186624, 2023-08-05, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-05 22:07:02.461, 2023-08-05 22:07:02.461
2023-08-13 15:39:06.712 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-13 15:39:06.713 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-13 15:39:06.714 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-13 15:39:06.716 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16919123466315st  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-13 15:39:06.717 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16919123466315st  [0;39m <==      Total: 8
2023-08-13 15:39:06.718 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16919123466315st  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:39:06.718 INFO  com.jktickets.service.DailyTrainService           :104  [32m16919123466315st  [0;39m 总行数：8
2023-08-13 15:39:06.718 INFO  com.jktickets.service.DailyTrainService           :105  [32m16919123466315st  [0;39m 总页数：1
2023-08-13 15:39:06.740 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16919123466315st  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1691588911164,"date":1691510400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1689272446911385600,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691588911164},{"code":"01","createTime":1691503233578,"date":1691424000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688913089266847744,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691503233578},{"code":"01","createTime":1691310698270,"date":1691251200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688105537453035520,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691310698270},{"code":"01","createTime":1691244422461,"date":1691164800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1687827556604186624,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691244422461},{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":8},"success":true}
2023-08-13 15:39:06.741 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16919123466315st  [0;39m ------------- 结束 耗时：104 ms -------------
2023-08-13 15:39:18.937 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169191235892915g  [0;39m ------------- 开始 -------------
2023-08-13 15:39:18.937 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169191235892915g  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/genDaily/2023-08-13 GET
2023-08-13 15:39:18.937 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169191235892915g  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.genDailyByDate
2023-08-13 15:39:18.937 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169191235892915g  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:18.938 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169191235892915g  [0;39m 请求参数: [1691856000000]
2023-08-13 15:39:18.938 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:18.938 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainExample@4c80cdbe
2023-08-13 15:39:18.950 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m169191235892915g  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:39:18.950 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m169191235892915g  [0;39m ==> Parameters: 
2023-08-13 15:39:18.962 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m169191235892915g  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:39:18.963 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m169191235892915g  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:39:18.964 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:18.964 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:39:19.168 INFO  com.jktickets.service.DailyTrainService           :146  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的信息开始
2023-08-13 15:39:19.175 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-13 15:39:19.176 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@60121704
2023-08-13 15:39:19.182 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m169191235892915g  [0;39m ==>  Preparing: delete from daily_train WHERE ( `date` = ? and code = ? )
2023-08-13 15:39:19.183 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:39:19.210 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m169191235892915g  [0;39m <==    Updates: 0
2023-08-13 15:39:19.210 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-13 15:39:19.212 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-13 15:39:19.213 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrain [Hash = 149270038, id=1690629086348709888, date=Sun Aug 13 00:00:00 CST 2023, code=01, type=G, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 01:00:02 CST 1970, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 02:00:00 CST 1970, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.214 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train (id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.216 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629086348709888(Long), 2023-08-13(Date), 01(String), G(String), 上海(String), shanghai(String), 01:00:02(Time), 温州(String), wenzhou(String), 02:00:00(Time), 2023-08-13 15:39:19.211(Timestamp), 2023-08-13 15:39:19.211(Timestamp)
2023-08-13 15:39:19.247 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.247 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-13 15:39:19.247 INFO  com.jktickets.service.DailyTrainStationService    :110  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的车站信息开始
2023-08-13 15:39:19.277 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-13 15:39:19.278 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainStationExample@67f2b9b8
2023-08-13 15:39:19.281 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m169191235892915g  [0;39m ==>  Preparing: delete from daily_train_station WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:39:19.282 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:39:19.306 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m169191235892915g  [0;39m <==    Updates: 0
2023-08-13 15:39:19.306 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-13 15:39:19.330 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:19.330 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainStationExample@16d68018
2023-08-13 15:39:19.332 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:39:19.333 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==> Parameters: 01(String)
2023-08-13 15:39:19.356 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:39:19.357 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:39:19.357 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:39:19.358 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:39:19.358 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m <==      Total: 3
2023-08-13 15:39:19.358 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:19.359 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.359 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainStation [Hash = 1698742563, id=1690629086965272576, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=0, name=上海, namePinyin=shanghai, inTime=Thu Jan 01 00:00:00 CST 1970, outTime=Thu Jan 01 00:02:00 CST 1970, stopTime=Thu Jan 01 00:02:00 CST 1970, km=12.00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.360 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.361 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629086965272576(Long), 2023-08-13(Date), 01(String), 0(Integer), 上海(String), shanghai(String), 00:00:00(Time), 00:02:00(Time), 00:02:00(Time), 12.00(BigDecimal), 2023-08-13 15:39:19.359(Timestamp), 2023-08-13 15:39:19.359(Timestamp)
2023-08-13 15:39:19.387 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.388 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.397 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.398 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainStation [Hash = 1708711532, id=1690629087124656128, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=1, name=温州, namePinyin=wenzhou, inTime=Thu Jan 01 22:14:58 CST 1970, outTime=Thu Jan 01 22:15:03 CST 1970, stopTime=Thu Jan 01 00:00:05 CST 1970, km=1.00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.398 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.399 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629087124656128(Long), 2023-08-13(Date), 01(String), 1(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 22:15:03(Time), 00:00:05(Time), 1.00(BigDecimal), 2023-08-13 15:39:19.397(Timestamp), 2023-08-13 15:39:19.397(Timestamp)
2023-08-13 15:39:19.423 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.423 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.424 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.424 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainStation [Hash = 625840689, id=1690629087237902336, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=2, name=杭州, namePinyin=hangzhou, inTime=Thu Jan 01 15:00:00 CST 1970, outTime=Thu Jan 01 16:01:00 CST 1970, stopTime=Thu Jan 01 01:01:00 CST 1970, km=11.00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.424 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.425 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629087237902336(Long), 2023-08-13(Date), 01(String), 2(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 16:01:00(Time), 01:01:00(Time), 11.00(BigDecimal), 2023-08-13 15:39:19.423(Timestamp), 2023-08-13 15:39:19.423(Timestamp)
2023-08-13 15:39:19.451 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.452 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:39:19.452 INFO  com.jktickets.service.DailyTrainStationService    :136  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的车站信息结束
2023-08-13 15:39:19.497 INFO  com.jktickets.service.DailyTrainCarriageService   :122  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的车厢信息开始
2023-08-13 15:39:19.516 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-13 15:39:19.517 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@34a5a2ce
2023-08-13 15:39:19.520 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: delete from daily_train_carriage WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:39:19.521 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:39:19.552 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m169191235892915g  [0;39m <==    Updates: 0
2023-08-13 15:39:19.552 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-13 15:39:19.572 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-13 15:39:19.572 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainCarriageExample@45db8f99
2023-08-13 15:39:19.574 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select id, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from train_carriage WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:39:19.574 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 01(String)
2023-08-13 15:39:19.592 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m169191235892915g  [0;39m <==    Columns: id, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-13 15:39:19.592 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m169191235892915g  [0;39m <==        Row: 1680419230580871168, 01, 1, 1, 32, 8, 4, 2023-07-16 11:28:59, 2023-07-25 21:20:17.749
2023-08-13 15:39:19.593 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m169191235892915g  [0;39m <==        Row: 1680491830979989504, 01, 2, 2, 25, 5, 5, 2023-07-16 16:17:29.155, 2023-07-16 16:17:29.155
2023-08-13 15:39:19.593 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m169191235892915g  [0;39m <==      Total: 2
2023-08-13 15:39:19.594 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-13 15:39:19.595 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:39:19.596 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainCarriage [Hash = 532811062, id=1690629087955128320, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=1, seatType=1, seatCount=32, rowCount=8, colCount=4, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.596 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.597 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m ==> Parameters: 1690629087955128320(Long), 2023-08-13(Date), 01(String), 1(Integer), 1(String), 32(Integer), 8(Integer), 4(Integer), 2023-08-13 15:39:19.594(Timestamp), 2023-08-13 15:39:19.594(Timestamp)
2023-08-13 15:39:19.620 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.620 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:39:19.621 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:39:19.621 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainCarriage [Hash = 902291893, id=1690629088064180224, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=2, seatType=2, seatCount=25, rowCount=5, colCount=5, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.622 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.622 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m ==> Parameters: 1690629088064180224(Long), 2023-08-13(Date), 01(String), 2(Integer), 2(String), 25(Integer), 5(Integer), 5(Integer), 2023-08-13 15:39:19.621(Timestamp), 2023-08-13 15:39:19.621(Timestamp)
2023-08-13 15:39:19.646 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.646 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:39:19.646 INFO  com.jktickets.service.DailyTrainCarriageService   :147  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的车厢信息结束
2023-08-13 15:39:19.721 INFO  com.jktickets.service.DailyTrainSeatService       :112  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的座位信息开始
2023-08-13 15:39:19.743 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-13 15:39:19.743 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1b2bd400
2023-08-13 15:39:19.748 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m169191235892915g  [0;39m ==>  Preparing: delete from daily_train_seat WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:39:19.749 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:39:19.774 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m169191235892915g  [0;39m <==    Updates: 0
2023-08-13 15:39:19.775 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-13 15:39:19.775 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:19.776 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainStationExample@3d50fce5
2023-08-13 15:39:19.777 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:39:19.778 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==> Parameters: 01(String)
2023-08-13 15:39:19.791 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:39:19.792 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:39:19.794 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:39:19.797 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:39:19.798 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m <==      Total: 3
2023-08-13 15:39:19.798 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:19.815 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-13 15:39:19.815 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainSeatExample@4d3ddcfa
2023-08-13 15:39:19.819 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m169191235892915g  [0;39m ==>  Preparing: select id, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, create_time, update_time from train_seat WHERE ( train_code = ? ) order by `id` asc
2023-08-13 15:39:19.820 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m169191235892915g  [0;39m ==> Parameters: 01(String)
2023-08-13 15:39:19.834 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==    Columns: id, train_code, carriage_index, row, col, seat_type, carriage_seat_index, create_time, update_time
2023-08-13 15:39:19.835 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917643452223488, 01, 1, 01, A, 1, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.836 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917643703881728, 01, 1, 01, C, 1, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.837 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917643808739328, 01, 1, 01, D, 1, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.837 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917643913596928, 01, 1, 01, F, 1, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.838 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644010065920, 01, 1, 02, A, 1, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.839 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644119117824, 01, 1, 02, C, 1, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.840 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644215586816, 01, 1, 02, D, 1, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.841 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644316250112, 01, 1, 02, F, 1, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.842 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644458856448, 01, 1, 03, A, 1, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.842 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644551131136, 01, 1, 03, C, 1, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.843 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644647600128, 01, 1, 03, D, 1, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.845 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644752457728, 01, 1, 03, F, 1, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.847 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644844732416, 01, 1, 04, A, 1, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.849 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917644957978624, 01, 1, 04, C, 1, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.850 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645088002048, 01, 1, 04, D, 1, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.852 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645184471040, 01, 1, 04, F, 1, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.856 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645280940032, 01, 1, 05, A, 1, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.858 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645385797632, 01, 1, 05, C, 1, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.859 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645486460928, 01, 1, 05, D, 1, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.860 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645582929920, 01, 1, 05, F, 1, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.861 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645679398912, 01, 1, 06, A, 1, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.863 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645780062208, 01, 1, 06, C, 1, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.864 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917645897502720, 01, 1, 06, D, 1, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.865 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646002360320, 01, 1, 06, F, 1, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.865 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646132383744, 01, 1, 07, A, 1, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.866 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646300155904, 01, 1, 07, C, 1, 26, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.867 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646396624896, 01, 1, 07, D, 1, 27, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.867 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646526648320, 01, 1, 07, F, 1, 28, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.868 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646623117312, 01, 1, 08, A, 1, 29, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.869 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646732169216, 01, 1, 08, C, 1, 30, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.869 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646824443904, 01, 1, 08, D, 1, 31, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.870 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917646941884416, 01, 1, 08, F, 1, 32, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.871 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647038353408, 01, 2, 01, A, 2, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.871 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647189348352, 01, 2, 01, B, 2, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.873 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647327760384, 01, 2, 01, C, 2, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.874 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647420035072, 01, 2, 01, D, 2, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.875 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647524892672, 01, 2, 01, F, 2, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.876 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647621361664, 01, 2, 02, A, 2, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.877 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647763968000, 01, 2, 02, B, 2, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.878 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647860436992, 01, 2, 02, C, 2, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.880 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917647986266112, 01, 2, 02, D, 2, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.881 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648082735104, 01, 2, 02, F, 2, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.882 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648187592704, 01, 2, 03, A, 2, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.883 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648435056640, 01, 2, 03, B, 2, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.883 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648548302848, 01, 2, 03, C, 2, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.884 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648695103488, 01, 2, 03, D, 2, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.885 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648787378176, 01, 2, 03, F, 2, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.886 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648888041472, 01, 2, 04, A, 2, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.887 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917648984510464, 01, 2, 04, B, 2, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.888 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649089368064, 01, 2, 04, C, 2, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.889 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649181642752, 01, 2, 04, D, 2, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.889 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649282306048, 01, 2, 04, F, 2, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.890 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649424912384, 01, 2, 05, A, 2, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.891 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649554935808, 01, 2, 05, B, 2, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.891 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649814982656, 01, 2, 05, C, 2, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.892 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917649919840256, 01, 2, 05, D, 2, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.892 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m169191235892915g  [0;39m <==        Row: 1684917650012114944, 01, 2, 05, F, 2, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:39:19.893 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m169191235892915g  [0;39m <==      Total: 57
2023-08-13 15:39:19.893 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-13 15:39:19.895 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.896 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 531782981, id=1690629089213419520, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=A, seatType=1, carriageSeatIndex=1, sell=00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.897 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.899 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089213419520(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), A(String), 1(String), 1(Integer), 00(String), 2023-08-13 15:39:19.894(Timestamp), 2023-08-13 15:39:19.894(Timestamp)
2023-08-13 15:39:19.929 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.929 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.930 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.931 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 983891885, id=1690629089360220160, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.931 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.932 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089360220160(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), C(String), 1(String), 2(Integer), 00(String), 2023-08-13 15:39:19.93(Timestamp), 2023-08-13 15:39:19.93(Timestamp)
2023-08-13 15:39:19.957 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.957 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.958 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.958 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1092023188, id=1690629089477660672, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.958 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.959 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089477660672(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), D(String), 1(String), 3(Integer), 00(String), 2023-08-13 15:39:19.958(Timestamp), 2023-08-13 15:39:19.958(Timestamp)
2023-08-13 15:39:19.981 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:19.981 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.982 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:19.982 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1698247852, id=1690629089578323968, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=00, createTime=2023-08-13 15:39:19, updateTime=2023-08-13 15:39:19]
2023-08-13 15:39:19.982 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:19.983 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089578323968(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), F(String), 1(String), 4(Integer), 00(String), 2023-08-13 15:39:19.982(Timestamp), 2023-08-13 15:39:19.982(Timestamp)
2023-08-13 15:39:20.016 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.017 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.017 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.017 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 102672299, id=1690629089725124608, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.018 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.019 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089725124608(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), A(String), 1(String), 5(Integer), 00(String), 2023-08-13 15:39:20.017(Timestamp), 2023-08-13 15:39:20.017(Timestamp)
2023-08-13 15:39:20.041 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.041 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.042 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.042 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 133627584, id=1690629089829982208, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.042 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.043 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089829982208(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), C(String), 1(String), 6(Integer), 00(String), 2023-08-13 15:39:20.042(Timestamp), 2023-08-13 15:39:20.042(Timestamp)
2023-08-13 15:39:20.080 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.080 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.081 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.081 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1919880221, id=1690629089993560064, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.081 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.082 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629089993560064(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), D(String), 1(String), 7(Integer), 00(String), 2023-08-13 15:39:20.08(Timestamp), 2023-08-13 15:39:20.08(Timestamp)
2023-08-13 15:39:20.104 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.104 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.105 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.105 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1198980813, id=1690629090094223360, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=F, seatType=1, carriageSeatIndex=8, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.106 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.106 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090094223360(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), F(String), 1(String), 8(Integer), 00(String), 2023-08-13 15:39:20.105(Timestamp), 2023-08-13 15:39:20.105(Timestamp)
2023-08-13 15:39:20.130 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.131 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.131 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.132 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 970761820, id=1690629090203275264, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=A, seatType=1, carriageSeatIndex=9, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.132 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.133 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090203275264(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), A(String), 1(String), 9(Integer), 00(String), 2023-08-13 15:39:20.131(Timestamp), 2023-08-13 15:39:20.131(Timestamp)
2023-08-13 15:39:20.156 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.156 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.156 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.157 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1532822533, id=1690629090308132864, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=C, seatType=1, carriageSeatIndex=10, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.157 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.158 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090308132864(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), C(String), 1(String), 10(Integer), 00(String), 2023-08-13 15:39:20.156(Timestamp), 2023-08-13 15:39:20.156(Timestamp)
2023-08-13 15:39:20.184 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.185 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.185 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.185 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 303159985, id=1690629090429767680, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=D, seatType=1, carriageSeatIndex=11, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.186 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.186 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090429767680(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), D(String), 1(String), 11(Integer), 00(String), 2023-08-13 15:39:20.185(Timestamp), 2023-08-13 15:39:20.185(Timestamp)
2023-08-13 15:39:20.209 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.210 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.210 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.211 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 894672443, id=1690629090534625280, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=F, seatType=1, carriageSeatIndex=12, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.211 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.212 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090534625280(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), F(String), 1(String), 12(Integer), 00(String), 2023-08-13 15:39:20.21(Timestamp), 2023-08-13 15:39:20.21(Timestamp)
2023-08-13 15:39:20.234 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.234 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.235 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.235 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1801300462, id=1690629090639482880, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=A, seatType=1, carriageSeatIndex=13, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.235 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.236 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090639482880(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), A(String), 1(String), 13(Integer), 00(String), 2023-08-13 15:39:20.235(Timestamp), 2023-08-13 15:39:20.235(Timestamp)
2023-08-13 15:39:20.259 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.260 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.261 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.262 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 719156244, id=1690629090748534784, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=C, seatType=1, carriageSeatIndex=14, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.263 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.264 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090748534784(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), C(String), 1(String), 14(Integer), 00(String), 2023-08-13 15:39:20.26(Timestamp), 2023-08-13 15:39:20.26(Timestamp)
2023-08-13 15:39:20.288 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.289 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.289 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.290 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1914529741, id=1690629090865975296, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=D, seatType=1, carriageSeatIndex=15, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.290 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.291 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090865975296(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), D(String), 1(String), 15(Integer), 00(String), 2023-08-13 15:39:20.289(Timestamp), 2023-08-13 15:39:20.289(Timestamp)
2023-08-13 15:39:20.314 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.314 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.317 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.317 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 2006183282, id=1690629090983415808, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=F, seatType=1, carriageSeatIndex=16, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.318 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.320 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629090983415808(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), F(String), 1(String), 16(Integer), 00(String), 2023-08-13 15:39:20.314(Timestamp), 2023-08-13 15:39:20.314(Timestamp)
2023-08-13 15:39:20.347 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.347 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.347 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.348 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1301140055, id=1690629091109244928, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=A, seatType=1, carriageSeatIndex=17, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.348 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.349 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091109244928(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), A(String), 1(String), 17(Integer), 00(String), 2023-08-13 15:39:20.347(Timestamp), 2023-08-13 15:39:20.347(Timestamp)
2023-08-13 15:39:20.372 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.372 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.372 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.373 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 682221407, id=1690629091214102528, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=C, seatType=1, carriageSeatIndex=18, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.373 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.373 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091214102528(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), C(String), 1(String), 18(Integer), 00(String), 2023-08-13 15:39:20.372(Timestamp), 2023-08-13 15:39:20.372(Timestamp)
2023-08-13 15:39:20.395 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.396 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.396 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.396 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1644852141, id=1690629091314765824, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=D, seatType=1, carriageSeatIndex=19, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.397 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.397 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091314765824(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), D(String), 1(String), 19(Integer), 00(String), 2023-08-13 15:39:20.396(Timestamp), 2023-08-13 15:39:20.396(Timestamp)
2023-08-13 15:39:20.421 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.421 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.422 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.422 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1724741506, id=1690629091423817728, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=F, seatType=1, carriageSeatIndex=20, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.423 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.423 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091423817728(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), F(String), 1(String), 20(Integer), 00(String), 2023-08-13 15:39:20.422(Timestamp), 2023-08-13 15:39:20.422(Timestamp)
2023-08-13 15:39:20.447 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.448 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.449 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.450 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 651761674, id=1690629091537063936, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=A, seatType=1, carriageSeatIndex=21, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.451 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.452 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091537063936(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), A(String), 1(String), 21(Integer), 00(String), 2023-08-13 15:39:20.449(Timestamp), 2023-08-13 15:39:20.449(Timestamp)
2023-08-13 15:39:20.476 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.477 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.479 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.480 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1803737637, id=1690629091662893056, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=C, seatType=1, carriageSeatIndex=22, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.481 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.483 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091662893056(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), C(String), 1(String), 22(Integer), 00(String), 2023-08-13 15:39:20.478(Timestamp), 2023-08-13 15:39:20.478(Timestamp)
2023-08-13 15:39:20.506 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.506 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.507 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.508 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1859376462, id=1690629091780333568, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=D, seatType=1, carriageSeatIndex=23, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.508 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.509 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091780333568(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), D(String), 1(String), 23(Integer), 00(String), 2023-08-13 15:39:20.507(Timestamp), 2023-08-13 15:39:20.507(Timestamp)
2023-08-13 15:39:20.532 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.533 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.533 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.534 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 60006579, id=1690629091889385472, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=F, seatType=1, carriageSeatIndex=24, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.534 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.535 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091889385472(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), F(String), 1(String), 24(Integer), 00(String), 2023-08-13 15:39:20.533(Timestamp), 2023-08-13 15:39:20.533(Timestamp)
2023-08-13 15:39:20.557 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.558 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.558 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.559 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1471854736, id=1690629091994243072, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=A, seatType=1, carriageSeatIndex=25, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.559 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.560 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629091994243072(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), A(String), 1(String), 25(Integer), 00(String), 2023-08-13 15:39:20.558(Timestamp), 2023-08-13 15:39:20.558(Timestamp)
2023-08-13 15:39:20.587 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.588 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.588 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.588 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1600969445, id=1690629092120072192, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=C, seatType=1, carriageSeatIndex=26, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.589 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.589 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092120072192(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), C(String), 1(String), 26(Integer), 00(String), 2023-08-13 15:39:20.588(Timestamp), 2023-08-13 15:39:20.588(Timestamp)
2023-08-13 15:39:20.614 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.614 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.615 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.615 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1629205721, id=1690629092233318400, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=D, seatType=1, carriageSeatIndex=27, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.615 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.616 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092233318400(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), D(String), 1(String), 27(Integer), 00(String), 2023-08-13 15:39:20.615(Timestamp), 2023-08-13 15:39:20.615(Timestamp)
2023-08-13 15:39:20.646 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.647 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.647 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.647 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 989666108, id=1690629092367536128, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=F, seatType=1, carriageSeatIndex=28, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.647 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.648 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092367536128(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), F(String), 1(String), 28(Integer), 00(String), 2023-08-13 15:39:20.647(Timestamp), 2023-08-13 15:39:20.647(Timestamp)
2023-08-13 15:39:20.672 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.672 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.673 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.673 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1513574539, id=1690629092476588032, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=A, seatType=1, carriageSeatIndex=29, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.673 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.674 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092476588032(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), A(String), 1(String), 29(Integer), 00(String), 2023-08-13 15:39:20.673(Timestamp), 2023-08-13 15:39:20.673(Timestamp)
2023-08-13 15:39:20.701 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.701 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.702 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.702 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1901432648, id=1690629092598222848, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=C, seatType=1, carriageSeatIndex=30, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.702 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.703 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092598222848(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), C(String), 1(String), 30(Integer), 00(String), 2023-08-13 15:39:20.701(Timestamp), 2023-08-13 15:39:20.701(Timestamp)
2023-08-13 15:39:20.728 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.729 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.730 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.730 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1124969007, id=1690629092715663360, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=D, seatType=1, carriageSeatIndex=31, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.731 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.731 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092715663360(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), D(String), 1(String), 31(Integer), 00(String), 2023-08-13 15:39:20.73(Timestamp), 2023-08-13 15:39:20.73(Timestamp)
2023-08-13 15:39:20.754 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.754 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.755 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.755 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 667043176, id=1690629092820520960, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=F, seatType=1, carriageSeatIndex=32, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.755 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.756 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092820520960(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), F(String), 1(String), 32(Integer), 00(String), 2023-08-13 15:39:20.754(Timestamp), 2023-08-13 15:39:20.754(Timestamp)
2023-08-13 15:39:20.781 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.782 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.782 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.782 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1519619211, id=1690629092933767168, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=A, seatType=2, carriageSeatIndex=1, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.782 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.783 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629092933767168(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), A(String), 2(String), 1(Integer), 00(String), 2023-08-13 15:39:20.782(Timestamp), 2023-08-13 15:39:20.782(Timestamp)
2023-08-13 15:39:20.807 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.807 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.808 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.808 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 274069726, id=1690629093042819072, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.808 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.809 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093042819072(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), B(String), 2(String), 2(Integer), 00(String), 2023-08-13 15:39:20.807(Timestamp), 2023-08-13 15:39:20.807(Timestamp)
2023-08-13 15:39:20.832 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.832 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.832 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.833 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 715001384, id=1690629093143482368, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=C, seatType=2, carriageSeatIndex=3, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.833 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.833 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093143482368(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), C(String), 2(String), 3(Integer), 00(String), 2023-08-13 15:39:20.832(Timestamp), 2023-08-13 15:39:20.832(Timestamp)
2023-08-13 15:39:20.856 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.856 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.857 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.857 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 2027327824, id=1690629093248339968, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.857 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.858 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093248339968(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), D(String), 2(String), 4(Integer), 00(String), 2023-08-13 15:39:20.857(Timestamp), 2023-08-13 15:39:20.857(Timestamp)
2023-08-13 15:39:20.884 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.884 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.884 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.885 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 937339603, id=1690629093361586176, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.885 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.885 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093361586176(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), F(String), 2(String), 5(Integer), 00(String), 2023-08-13 15:39:20.884(Timestamp), 2023-08-13 15:39:20.884(Timestamp)
2023-08-13 15:39:20.912 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.913 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.914 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.915 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1823528654, id=1690629093487415296, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.915 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.916 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093487415296(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), A(String), 2(String), 6(Integer), 00(String), 2023-08-13 15:39:20.914(Timestamp), 2023-08-13 15:39:20.914(Timestamp)
2023-08-13 15:39:20.939 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.940 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.940 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.941 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 454326220, id=1690629093596467200, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.941 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.941 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093596467200(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), B(String), 2(String), 7(Integer), 00(String), 2023-08-13 15:39:20.94(Timestamp), 2023-08-13 15:39:20.94(Timestamp)
2023-08-13 15:39:20.964 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.964 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.965 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.965 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1426082023, id=1690629093701324800, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.965 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.966 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093701324800(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), C(String), 2(String), 8(Integer), 00(String), 2023-08-13 15:39:20.964(Timestamp), 2023-08-13 15:39:20.964(Timestamp)
2023-08-13 15:39:20.996 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:20.997 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.997 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:20.997 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1112766516, id=1690629093835542528, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=D, seatType=2, carriageSeatIndex=9, sell=00, createTime=2023-08-13 15:39:20, updateTime=2023-08-13 15:39:20]
2023-08-13 15:39:20.998 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:20.998 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093835542528(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), D(String), 2(String), 9(Integer), 00(String), 2023-08-13 15:39:20.997(Timestamp), 2023-08-13 15:39:20.997(Timestamp)
2023-08-13 15:39:21.024 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.025 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.025 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.025 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1292676151, id=1690629093952983040, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.026 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.026 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629093952983040(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), F(String), 2(String), 10(Integer), 00(String), 2023-08-13 15:39:21.025(Timestamp), 2023-08-13 15:39:21.025(Timestamp)
2023-08-13 15:39:21.050 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.050 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.051 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.051 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1613205138, id=1690629094062034944, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.051 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.052 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094062034944(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), A(String), 2(String), 11(Integer), 00(String), 2023-08-13 15:39:21.05(Timestamp), 2023-08-13 15:39:21.05(Timestamp)
2023-08-13 15:39:21.083 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.084 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.084 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.085 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 919024390, id=1690629094200446976, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=B, seatType=2, carriageSeatIndex=12, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.085 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.086 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094200446976(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), B(String), 2(String), 12(Integer), 00(String), 2023-08-13 15:39:21.084(Timestamp), 2023-08-13 15:39:21.084(Timestamp)
2023-08-13 15:39:21.111 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.112 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.113 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.113 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 895572199, id=1690629094317887488, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.113 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.114 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094317887488(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), C(String), 2(String), 13(Integer), 00(String), 2023-08-13 15:39:21.112(Timestamp), 2023-08-13 15:39:21.112(Timestamp)
2023-08-13 15:39:21.167 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.168 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.168 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.169 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 921709038, id=1690629094552768512, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.169 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.169 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094552768512(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), D(String), 2(String), 14(Integer), 00(String), 2023-08-13 15:39:21.168(Timestamp), 2023-08-13 15:39:21.168(Timestamp)
2023-08-13 15:39:21.204 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.204 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.205 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.205 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 274524193, id=1690629094707957760, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=F, seatType=2, carriageSeatIndex=15, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.205 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.206 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094707957760(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), F(String), 2(String), 15(Integer), 00(String), 2023-08-13 15:39:21.205(Timestamp), 2023-08-13 15:39:21.205(Timestamp)
2023-08-13 15:39:21.228 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.228 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.229 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.229 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 500708626, id=1690629094808621056, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=A, seatType=2, carriageSeatIndex=16, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.229 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.230 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094808621056(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), A(String), 2(String), 16(Integer), 00(String), 2023-08-13 15:39:21.229(Timestamp), 2023-08-13 15:39:21.229(Timestamp)
2023-08-13 15:39:21.252 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.252 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.253 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.253 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1814760469, id=1690629094909284352, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=B, seatType=2, carriageSeatIndex=17, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.253 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.254 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629094909284352(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), B(String), 2(String), 17(Integer), 00(String), 2023-08-13 15:39:21.253(Timestamp), 2023-08-13 15:39:21.253(Timestamp)
2023-08-13 15:39:21.277 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.278 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.278 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.279 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 474744314, id=1690629095014141952, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=C, seatType=2, carriageSeatIndex=18, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.279 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.279 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095014141952(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), C(String), 2(String), 18(Integer), 00(String), 2023-08-13 15:39:21.278(Timestamp), 2023-08-13 15:39:21.278(Timestamp)
2023-08-13 15:39:21.304 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.305 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.305 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.306 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1014214381, id=1690629095127388160, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=D, seatType=2, carriageSeatIndex=19, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.306 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.307 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095127388160(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), D(String), 2(String), 19(Integer), 00(String), 2023-08-13 15:39:21.305(Timestamp), 2023-08-13 15:39:21.305(Timestamp)
2023-08-13 15:39:21.330 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.330 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.331 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.331 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 109601295, id=1690629095236440064, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=F, seatType=2, carriageSeatIndex=20, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.331 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.332 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095236440064(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), F(String), 2(String), 20(Integer), 00(String), 2023-08-13 15:39:21.33(Timestamp), 2023-08-13 15:39:21.33(Timestamp)
2023-08-13 15:39:21.361 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.362 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.363 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.363 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1296632733, id=1690629095370657792, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=A, seatType=2, carriageSeatIndex=21, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.363 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.364 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095370657792(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), A(String), 2(String), 21(Integer), 00(String), 2023-08-13 15:39:21.362(Timestamp), 2023-08-13 15:39:21.362(Timestamp)
2023-08-13 15:39:21.388 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.389 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.389 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.390 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1276941984, id=1690629095479709696, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=B, seatType=2, carriageSeatIndex=22, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.390 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.391 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095479709696(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), B(String), 2(String), 22(Integer), 00(String), 2023-08-13 15:39:21.389(Timestamp), 2023-08-13 15:39:21.389(Timestamp)
2023-08-13 15:39:21.414 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.414 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.414 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.415 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1137422369, id=1690629095584567296, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=C, seatType=2, carriageSeatIndex=23, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.415 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.415 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095584567296(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), C(String), 2(String), 23(Integer), 00(String), 2023-08-13 15:39:21.414(Timestamp), 2023-08-13 15:39:21.414(Timestamp)
2023-08-13 15:39:21.437 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.437 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.438 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.438 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1780883290, id=1690629095685230592, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=D, seatType=2, carriageSeatIndex=24, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.438 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.439 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095685230592(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), D(String), 2(String), 24(Integer), 00(String), 2023-08-13 15:39:21.438(Timestamp), 2023-08-13 15:39:21.438(Timestamp)
2023-08-13 15:39:21.462 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.462 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.463 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.463 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainSeat [Hash = 1757527999, id=1690629095790088192, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=F, seatType=2, carriageSeatIndex=25, sell=00, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.463 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.464 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629095790088192(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), F(String), 2(String), 25(Integer), 00(String), 2023-08-13 15:39:21.463(Timestamp), 2023-08-13 15:39:21.463(Timestamp)
2023-08-13 15:39:21.486 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.487 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:39:21.487 INFO  com.jktickets.service.DailyTrainSeatService       :142  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的座位信息结束
2023-08-13 15:39:21.522 INFO  com.jktickets.service.DailyTrainTicketService     :154  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的余票信息开始
2023-08-13 15:39:21.565 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-13 15:39:21.565 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@150c4da5
2023-08-13 15:39:21.566 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m169191235892915g  [0;39m ==>  Preparing: delete from daily_train_ticket WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:39:21.567 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:39:21.591 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m169191235892915g  [0;39m <==    Updates: 0
2023-08-13 15:39:21.591 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-13 15:39:21.591 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:21.591 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.TrainStationExample@1a36d2aa
2023-08-13 15:39:21.592 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:39:21.593 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m ==> Parameters: 01(String)
2023-08-13 15:39:21.607 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:39:21.608 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:39:21.609 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:39:21.610 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m169191235892915g  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:39:21.610 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m169191235892915g  [0;39m <==      Total: 3
2023-08-13 15:39:21.611 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:39:21.620 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.621 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@76fdf189
2023-08-13 15:39:21.622 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.622 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:39:21.635 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.635 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 32
2023-08-13 15:39:21.635 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.636 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.636 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.636 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@311079b9
2023-08-13 15:39:21.637 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.637 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:39:21.651 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.652 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 25
2023-08-13 15:39:21.652 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.652 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.652 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.652 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4769aca5
2023-08-13 15:39:21.653 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.653 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:39:21.669 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.669 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.669 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.670 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.670 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.670 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@66e358f2
2023-08-13 15:39:21.671 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.671 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:39:21.683 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.684 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.684 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.684 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.719 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.719 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainTicket [Hash = 850567592, id=1690629096415039488, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 22:14:58 CST 1970, endIndex=1, ydz=32, ydzPrice=0.48, edz=25, edzPrice=0.36, rw=-1, rwPrice=0.72, yw=-1, ywPrice=0.60, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.719 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.721 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629096415039488(Long), 2023-08-13(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 1(Integer), 32(Integer), 0.48(BigDecimal), 25(Integer), 0.36(BigDecimal), -1(Integer), 0.72(BigDecimal), -1(Integer), 0.60(BigDecimal), 2023-08-13 15:39:21.612(Timestamp), 2023-08-13 15:39:21.612(Timestamp)
2023-08-13 15:39:21.743 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.744 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.745 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.745 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@60df7e1
2023-08-13 15:39:21.747 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.748 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:39:21.760 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.761 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 32
2023-08-13 15:39:21.762 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.762 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.762 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.763 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@470f55cd
2023-08-13 15:39:21.764 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.764 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:39:21.777 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.778 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 25
2023-08-13 15:39:21.778 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.779 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.779 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.779 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4fd10b00
2023-08-13 15:39:21.780 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.781 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:39:21.795 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.796 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.796 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.797 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.797 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.797 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@31b796b2
2023-08-13 15:39:21.798 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.798 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:39:21.811 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.812 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.812 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.812 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.813 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.813 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainTicket [Hash = 2072834103, id=1690629096972881920, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.76, edz=25, edzPrice=4.32, rw=-1, rwPrice=8.64, yw=-1, ywPrice=7.20, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.813 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.814 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629096972881920(Long), 2023-08-13(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.76(BigDecimal), 25(Integer), 4.32(BigDecimal), -1(Integer), 8.64(BigDecimal), -1(Integer), 7.20(BigDecimal), 2023-08-13 15:39:21.612(Timestamp), 2023-08-13 15:39:21.612(Timestamp)
2023-08-13 15:39:21.837 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.838 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.838 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.838 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2222b8f3
2023-08-13 15:39:21.839 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.839 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:39:21.854 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.854 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 32
2023-08-13 15:39:21.854 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.854 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.854 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.855 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@11734285
2023-08-13 15:39:21.855 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.856 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:39:21.868 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.868 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 25
2023-08-13 15:39:21.868 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.868 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.869 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.869 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6403c689
2023-08-13 15:39:21.869 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.870 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:39:21.882 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.882 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.882 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.883 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.883 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.883 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@72a22e2f
2023-08-13 15:39:21.884 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:39:21.884 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:39:21.896 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==    Columns: count(*)
2023-08-13 15:39:21.896 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m169191235892915g  [0;39m <==        Row: 0
2023-08-13 15:39:21.896 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m169191235892915g  [0;39m <==      Total: 1
2023-08-13 15:39:21.896 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:39:21.897 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191235892915g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.897 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191235892915g  [0;39m 参数值: DailyTrainTicket [Hash = 1403788777, id=1690629097362952192, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=2023-08-13 15:39:21, updateTime=2023-08-13 15:39:21]
2023-08-13 15:39:21.897 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:39:21.898 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m ==> Parameters: 1690629097362952192(Long), 2023-08-13(Date), 01(String), 温州(String), wenzhou(String), 22:15:03(Time), 1(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.28(BigDecimal), 25(Integer), 3.96(BigDecimal), -1(Integer), 7.92(BigDecimal), -1(Integer), 6.60(BigDecimal), 2023-08-13 15:39:21.612(Timestamp), 2023-08-13 15:39:21.612(Timestamp)
2023-08-13 15:39:21.921 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m169191235892915g  [0;39m <==    Updates: 1
2023-08-13 15:39:21.922 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191235892915g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:39:21.922 INFO  com.jktickets.service.DailyTrainTicketService     :222  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的余票信息结束
2023-08-13 15:39:21.950 INFO  com.jktickets.service.DailyTrainService           :182  [32m169191235892915g  [0;39m 生成日期【2023-08-13】车次【01】的信息结束
2023-08-13 15:39:21.950 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169191235892915g  [0;39m 返回结果: {"code":0,"message":"","result":"生成每日火车成功","success":true}
2023-08-13 15:39:21.950 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169191235892915g  [0;39m ------------- 结束 耗时：3013 ms -------------
2023-08-13 15:39:22.069 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912362069god  [0;39m ------------- 开始 -------------
2023-08-13 15:39:22.070 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912362069god  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-13 15:39:22.070 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912362069god  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-13 15:39:22.070 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912362069god  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:39:22.070 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912362069god  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:39:22.071 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912362069god  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:39:22.071 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912362069god  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@36d7bb75
2023-08-13 15:39:22.073 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912362069god  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-13 15:39:22.074 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912362069god  [0;39m ==> Parameters: 
2023-08-13 15:39:22.086 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912362069god  [0;39m <==    Columns: count(0)
2023-08-13 15:39:22.087 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912362069god  [0;39m <==        Row: 9
2023-08-13 15:39:22.087 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912362069god  [0;39m <==      Total: 1
2023-08-13 15:39:22.088 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912362069god  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-13 15:39:22.088 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912362069god  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:39:22.100 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:39:22.101 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1690629086348709888, 2023-08-13, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-13 15:39:19.211, 2023-08-13 15:39:19.211
2023-08-13 15:39:22.103 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1689272446911385600, 2023-08-09, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-09 21:48:31.164, 2023-08-09 21:48:31.164
2023-08-13 15:39:22.104 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1688913089266847744, 2023-08-08, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-08 22:00:33.578, 2023-08-08 22:00:33.578
2023-08-13 15:39:22.105 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1688105537453035520, 2023-08-06, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-06 16:31:38.270, 2023-08-06 16:31:38.270
2023-08-13 15:39:22.106 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1687827556604186624, 2023-08-05, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-05 22:07:02.461, 2023-08-05 22:07:02.461
2023-08-13 15:39:22.106 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-13 15:39:22.107 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-13 15:39:22.111 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-13 15:39:22.114 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912362069god  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-13 15:39:22.115 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912362069god  [0;39m <==      Total: 9
2023-08-13 15:39:22.115 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912362069god  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:39:22.116 INFO  com.jktickets.service.DailyTrainService           :104  [32m1691912362069god  [0;39m 总行数：9
2023-08-13 15:39:22.116 INFO  com.jktickets.service.DailyTrainService           :105  [32m1691912362069god  [0;39m 总页数：1
2023-08-13 15:39:22.122 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912362069god  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1691912359211,"date":1691856000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1690629086348709888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691912359211},{"code":"01","createTime":1691588911164,"date":1691510400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1689272446911385600,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691588911164},{"code":"01","createTime":1691503233578,"date":1691424000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688913089266847744,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691503233578},{"code":"01","createTime":1691310698270,"date":1691251200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688105537453035520,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691310698270},{"code":"01","createTime":1691244422461,"date":1691164800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1687827556604186624,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691244422461},{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":9},"success":true}
2023-08-13 15:39:22.123 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912362069god  [0;39m ------------- 结束 耗时：54 ms -------------
2023-08-13 15:40:19.178 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912419174jf5  [0;39m ------------- 开始 -------------
2023-08-13 15:40:19.178 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912419174jf5  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:40:19.178 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912419174jf5  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:40:19.179 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912419174jf5  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:40:19.179 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912419174jf5  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:40:19.179 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912419174jf5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:19.179 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912419174jf5  [0;39m 参数值: com.jktickets.domain.SkTokenExample@4e8b4779
2023-08-13 15:40:19.195 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912419174jf5  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:40:19.195 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912419174jf5  [0;39m ==> Parameters: 
2023-08-13 15:40:19.207 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912419174jf5  [0;39m <==    Columns: count(0)
2023-08-13 15:40:19.208 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912419174jf5  [0;39m <==        Row: 1
2023-08-13 15:40:19.208 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912419174jf5  [0;39m <==      Total: 1
2023-08-13 15:40:19.209 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912419174jf5  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:40:19.209 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912419174jf5  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:40:19.222 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912419174jf5  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:40:19.223 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912419174jf5  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 15:40:19.224 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912419174jf5  [0;39m <==      Total: 1
2023-08-13 15:40:19.224 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912419174jf5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:19.225 INFO  com.jktickets.service.SkTokenService              :79   [32m1691912419174jf5  [0;39m 总行数：1
2023-08-13 15:40:19.226 INFO  com.jktickets.service.SkTokenService              :80   [32m1691912419174jf5  [0;39m 总页数：1
2023-08-13 15:40:19.227 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912419174jf5  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 15:40:19.227 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912419174jf5  [0;39m ------------- 结束 耗时：49 ms -------------
2023-08-13 15:40:25.365 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16919124253658zb  [0;39m ------------- 开始 -------------
2023-08-13 15:40:25.366 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16919124253658zb  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:40:25.366 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16919124253658zb  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:40:25.366 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16919124253658zb  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:40:25.366 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16919124253658zb  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:40:25.366 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16919124253658zb  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:25.367 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16919124253658zb  [0;39m 参数值: com.jktickets.domain.SkTokenExample@469a0efb
2023-08-13 15:40:25.379 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919124253658zb  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:40:25.380 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919124253658zb  [0;39m ==> Parameters: 
2023-08-13 15:40:25.391 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m16919124253658zb  [0;39m <==    Columns: count(0)
2023-08-13 15:40:25.392 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m16919124253658zb  [0;39m <==        Row: 1
2023-08-13 15:40:25.393 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m16919124253658zb  [0;39m <==      Total: 1
2023-08-13 15:40:25.393 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919124253658zb  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:40:25.394 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919124253658zb  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:40:25.408 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m16919124253658zb  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:40:25.409 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m16919124253658zb  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 15:40:25.410 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m16919124253658zb  [0;39m <==      Total: 1
2023-08-13 15:40:25.411 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16919124253658zb  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:25.412 INFO  com.jktickets.service.SkTokenService              :79   [32m16919124253658zb  [0;39m 总行数：1
2023-08-13 15:40:25.412 INFO  com.jktickets.service.SkTokenService              :80   [32m16919124253658zb  [0;39m 总页数：1
2023-08-13 15:40:25.412 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16919124253658zb  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 15:40:25.412 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16919124253658zb  [0;39m ------------- 结束 耗时：47 ms -------------
2023-08-13 15:40:26.092 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912426091thh  [0;39m ------------- 开始 -------------
2023-08-13 15:40:26.092 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912426091thh  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:40:26.093 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912426091thh  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:40:26.093 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912426091thh  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:40:26.093 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912426091thh  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:40:26.093 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912426091thh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:26.094 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912426091thh  [0;39m 参数值: com.jktickets.domain.SkTokenExample@5e578bd6
2023-08-13 15:40:26.110 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912426091thh  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:40:26.111 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912426091thh  [0;39m ==> Parameters: 
2023-08-13 15:40:26.124 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912426091thh  [0;39m <==    Columns: count(0)
2023-08-13 15:40:26.124 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912426091thh  [0;39m <==        Row: 1
2023-08-13 15:40:26.124 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912426091thh  [0;39m <==      Total: 1
2023-08-13 15:40:26.125 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912426091thh  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:40:26.125 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912426091thh  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:40:26.142 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912426091thh  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:40:26.143 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912426091thh  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 15:40:26.144 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912426091thh  [0;39m <==      Total: 1
2023-08-13 15:40:26.144 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912426091thh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:40:26.144 INFO  com.jktickets.service.SkTokenService              :79   [32m1691912426091thh  [0;39m 总行数：1
2023-08-13 15:40:26.144 INFO  com.jktickets.service.SkTokenService              :80   [32m1691912426091thh  [0;39m 总页数：1
2023-08-13 15:40:26.145 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912426091thh  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887}],"total":1},"success":true}
2023-08-13 15:40:26.145 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912426091thh  [0;39m ------------- 结束 耗时：53 ms -------------
2023-08-13 15:42:08.649 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :136  [32m                  [0;39m [NotifyCenter] Start destroying Publisher
2023-08-13 15:42:08.650 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :102  [32m                  [0;39m [HttpClientBeanHolder] Start destroying common HttpClient
2023-08-13 15:42:08.650 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :153  [32m                  [0;39m [NotifyCenter] Destruction of the end
2023-08-13 15:42:08.665 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :111  [32m                  [0;39m [HttpClientBeanHolder] Destruction of the end
2023-08-13 15:42:08.769 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :95   [32m                  [0;39m De-registering from Nacos Server now...
2023-08-13 15:42:08.770 INFO  com.alibaba.nacos.client.naming                   :217  [32m                  [0;39m [DEREGISTER-SERVICE] train deregistering service business-service with instance: Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2023-08-13 15:42:08.790 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :115  [32m                  [0;39m De-registration finished.
2023-08-13 15:42:08.793 INFO  com.alibaba.nacos.client.naming                   :256  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2023-08-13 15:42:08.793 INFO  com.alibaba.nacos.client.naming                   :136  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2023-08-13 15:42:08.793 INFO  com.alibaba.nacos.client.naming                   :138  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2023-08-13 15:42:08.794 INFO  com.alibaba.nacos.client.naming                   :258  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2023-08-13 15:42:08.794 INFO  com.alibaba.nacos.client.naming                   :204  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2023-08-13 15:42:08.794 INFO  com.alibaba.nacos.client.naming                   :143  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2023-08-13 15:42:08.794 INFO  com.alibaba.nacos.client.naming                   :145  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2023-08-13 15:42:08.795 INFO  com.alibaba.nacos.client.naming                   :194  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2023-08-13 15:42:08.795 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-13 15:42:08.795 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-13 15:42:08.795 INFO  com.alibaba.nacos.client.naming                   :199  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2023-08-13 15:42:08.795 INFO  com.alibaba.nacos.client.naming                   :484  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2023-08-13 15:42:08.796 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-13 15:42:08.796 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-13 15:42:08.796 INFO  com.alibaba.nacos.client.naming                   :486  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2023-08-13 15:42:08.796 INFO  com.alibaba.nacos.common.remote.client            :429  [32m                  [0;39m Shutdown rpc client, set status to shutdown
2023-08-13 15:42:08.796 INFO  com.alibaba.nacos.common.remote.client            :431  [32m                  [0;39m Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@6bd65524[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2023-08-13 15:42:08.796 INFO  com.alibaba.nacos.common.remote.client            :584  [32m                  [0;39m Close current connection 1691897751972_127.0.0.1_58716
2023-08-13 15:42:08.821 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :63   [32m                  [0;39m [1691897751972_127.0.0.1_58716]Ignore complete event,isRunning:false,isAbandon=false
2023-08-13 15:42:08.875 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :159  [32m                  [0;39m Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@491cc635[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 2964]
2023-08-13 15:42:08.875 INFO  com.alibaba.nacos.client.naming                   :318  [32m                  [0;39m Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@3355a7cb[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 4920]
2023-08-13 15:42:08.876 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :106  [32m                  [0;39m [null] CredentialWatcher is stopped
2023-08-13 15:42:08.876 INFO  c.a.n.client.auth.ram.identify.CredentialService  :100  [32m                  [0;39m [null] CredentialService is freed
2023-08-13 15:42:08.876 INFO  com.alibaba.nacos.client.naming                   :211  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2023-08-13 15:42:08.975 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m                  [0;39m HikariPool-1 - Shutdown initiated...
2023-08-13 15:42:08.980 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m                  [0;39m HikariPool-1 - Shutdown completed.
2023-08-13 15:42:08.982 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.983 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.984 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.984 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.985 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.985 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.985 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.985 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]) will closed
2023-08-13 15:42:08.985 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]
2023-08-13 15:42:08.986 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x80dec39f, L:/192.168.0.102:58675 ! R:/192.168.0.102:8091]) will closed
2023-08-13 15:42:08.986 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]) will closed
2023-08-13 15:42:08.986 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0273e03d, L:/192.168.0.102:58678 ! R:/192.168.0.102:8091]) will closed
2023-08-13 15:42:24.790 INFO  org.hibernate.validator.internal.util.Version     :21   [32m                  [0;39m HV000001: Hibernate Validator 8.0.0.Final
2023-08-13 15:42:24.795 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 15:42:24.865 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 15:42:24.900 INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor :250  [32m                  [0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-13 15:42:25.173 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 15:42:25.196 INFO  com.alibaba.nacos.client.utils.ParamUtil          :87   [32m                  [0;39m [settings] [req-serv] nacos-server port:8848
2023-08-13 15:42:25.197 INFO  com.alibaba.nacos.client.utils.ParamUtil          :98   [32m                  [0;39m [settings] [http-client] connect timeout:1000
2023-08-13 15:42:25.198 INFO  com.alibaba.nacos.client.utils.ParamUtil          :105  [32m                  [0;39m PER_TASK_CONFIG_SIZE: 3000.0
2023-08-13 15:42:25.453 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 15:42:25.454 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 15:42:25.472 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :165  [32m                  [0;39m null No credential found
2023-08-13 15:42:26.078 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 15:42:26.114 INFO  c.a.n.client.config.impl.LocalConfigInfoProcessor :63   [32m                  [0;39m LOCAL_SNAPSHOT_PATH:C:\Users\Administrator\nacos\config
2023-08-13 15:42:26.120 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0
2023-08-13 15:42:26.224 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$589/0x0000000800f6fa10
2023-08-13 15:42:26.224 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$590/0x0000000800f70000
2023-08-13 15:42:26.226 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 15:42:26.227 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 15:42:26.246 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 15:42:26.297 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 15:42:28.819 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691912548509_127.0.0.1_53071
2023-08-13 15:42:28.820 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Notify connected event to listeners.
2023-08-13 15:42:28.821 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Connected,notify listen context...
2023-08-13 15:42:28.821 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 15:42:28.822 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4379a2b2-c195-4f2a-9d3f-307064b72f51_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-13 15:42:28.950 INFO  com.alibaba.nacos.client.config.impl.Limiter      :62   [32m                  [0;39m limitTime:5.0
2023-08-13 15:42:28.967 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service] & group[DEFAULT_GROUP]
2023-08-13 15:42:28.974 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service.properties] & group[DEFAULT_GROUP]
2023-08-13 15:42:28.981 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service-dev.properties] & group[DEFAULT_GROUP]
2023-08-13 15:42:28.982 INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration    :108  [32m                  [0;39m Located property source: [BootstrapPropertySource {name='bootstrapProperties-business-service-dev.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service,DEFAULT_GROUP'}]
2023-08-13 15:42:29.005 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-13 15:42:29.007 INFO  com.jktickets.BusinessApplication                 :636  [32m                  [0;39m The following 1 profile is active: "dev"
2023-08-13 15:42:31.094 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :294  [32m                  [0;39m Multiple Spring Data modules found, entering strict repository configuration mode
2023-08-13 15:42:31.097 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :138  [32m                  [0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-08-13 15:42:31.133 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :208  [32m                  [0;39m Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2023-08-13 15:42:31.497 INFO  o.springframework.cloud.context.scope.GenericScope:282  [32m                  [0;39m BeanFactory id=77b91a00-64d4-3369-b68d-daf695498ba4
2023-08-13 15:42:31.578 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'com.jktickets.feign.MemberFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.590 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.590 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.591 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.657 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.660 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.663 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.664 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$729/0x0000000801263880] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.665 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.669 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.673 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-13 15:42:31.675 INFO  i.s.s.boot.autoconfigure.SeataAutoConfiguration   :63   [32m                  [0;39m Automatically configure Seata
2023-08-13 15:42:31.751 INFO  io.seata.config.ConfigurationFactory              :64   [32m                  [0;39m load Configuration from :Spring Configuration
2023-08-13 15:42:31.758 INFO  io.seata.config.nacos.NacosConfiguration          :233  [32m                  [0;39m Nacos check auth with userName/password.
2023-08-13 15:42:31.769 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 15:42:31.770 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 15:42:31.951 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0
2023-08-13 15:42:31.951 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$589/0x0000000800f6fa10
2023-08-13 15:42:31.951 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$590/0x0000000800f70000
2023-08-13 15:42:31.952 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 15:42:31.952 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 15:42:31.952 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 15:42:31.953 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 15:42:32.070 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691912551960_127.0.0.1_53075
2023-08-13 15:42:32.070 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 15:42:32.070 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Notify connected event to listeners.
2023-08-13 15:42:32.071 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-13 15:42:32.071 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [4d2b13ff-a2ab-4234-be28-3ab3a68c72d5_config-0] Connected,notify listen context...
2023-08-13 15:42:32.082 INFO  com.alibaba.nacos.client.config.utils.JvmUtil     :54   [32m                  [0;39m isMultiInstance:false
2023-08-13 15:42:32.090 INFO  com.alibaba.nacos.client.config.impl.CacheData    :67   [32m                  [0;39m nacos.cache.data.init.snapshot = true 
2023-08-13 15:42:32.091 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] seataServer.properties+SEATA_GROUP+train
2023-08-13 15:42:32.100 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=seataServer.properties, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:32.114 INFO  i.seata.spring.annotation.GlobalTransactionScanner:211  [32m                  [0;39m Initializing Global Transaction Clients ... 
2023-08-13 15:42:32.332 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableTmClientBatchSendRequest+SEATA_GROUP+train
2023-08-13 15:42:32.332 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:32.333 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-13 15:42:32.350 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-13 15:42:32.352 INFO  io.seata.discovery.registry.RegistryFactory       :50   [32m                  [0;39m use registry center type: nacos
2023-08-13 15:42:32.359 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.vgroupMapping.train-group+SEATA_GROUP+train
2023-08-13 15:42:32.360 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.vgroupMapping.train-group, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:32.367 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-13 15:42:32.375 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 15:42:32.376 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 15:42:32.474 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 704dde5a-debd-4bb9-ad23-eedcd5663589
2023-08-13 15:42:32.477 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-13 15:42:32.478 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-13 15:42:32.478 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-13 15:42:32.479 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 15:42:32.479 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 15:42:32.600 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691912552483_127.0.0.1_53077
2023-08-13 15:42:32.600 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Notify connected event to listeners.
2023-08-13 15:42:32.600 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 15:42:32.601 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-13 15:42:32.601 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-13 15:42:32.603 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-13 15:42:32.625 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 15:42:32.627 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 15:42:32.679 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-13 15:42:32.681 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-13 15:42:32.817 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:TMROLE,address:192.168.0.102:8091,msg:< RegisterTMRequest{version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='ak=null
digest=train-group,192.168.0.102,1691912552806
timestamp=1691912552806
authVersion=V4
vgroup=train-group
ip=192.168.0.102
'} >
2023-08-13 15:42:33.090 WARN  i.s.c.l.EnhancedServiceLoader$InnerEnhancedServiceLoader:545  [32m                  [0;39m Load [io.seata.serializer.hessian.HessianSerializer] class fail: com/caucho/hessian/io/AbstractHessianOutput
2023-08-13 15:42:33.125 INFO  io.seata.core.rpc.netty.TmNettyRemotingClient     :224  [32m                  [0;39m register TM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x53a495fc, L:/192.168.0.102:53078 - R:/192.168.0.102:8091]
2023-08-13 15:42:33.130 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 75 ms, version:1.6.1,role:TMROLE,channel:[id: 0x53a495fc, L:/192.168.0.102:53078 - R:/192.168.0.102:8091]
2023-08-13 15:42:33.131 INFO  i.seata.spring.annotation.GlobalTransactionScanner:225  [32m                  [0;39m Transaction Manager Client is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-13 15:42:33.136 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Receive server push request, request = NotifySubscriberRequest, requestId = 5
2023-08-13 15:42:33.136 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 15:42:33.137 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2023-08-13 15:42:33.139 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [704dde5a-debd-4bb9-ad23-eedcd5663589] Ack server push request, request = NotifySubscriberRequest, requestId = 5
2023-08-13 15:42:33.143 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableRmClientBatchSendRequest+SEATA_GROUP+train
2023-08-13 15:42:33.143 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:33.144 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-13 15:42:33.202 INFO  io.seata.rm.datasource.AsyncWorker                :73   [32m                  [0;39m Async Commit Buffer Limit: 10000
2023-08-13 15:42:33.203 INFO  io.seata.rm.datasource.xa.ResourceManagerXA       :59   [32m                  [0;39m ResourceManagerXA init ...
2023-08-13 15:42:33.210 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-13 15:42:33.210 INFO  i.seata.spring.annotation.GlobalTransactionScanner:230  [32m                  [0;39m Resource Manager is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-13 15:42:33.210 INFO  i.seata.spring.annotation.GlobalTransactionScanner:234  [32m                  [0;39m Global Transaction Clients are initialized. 
2023-08-13 15:42:35.175 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :114  [32m                  [0;39m Tomcat initialized with port(s): 8002 (http)
2023-08-13 15:42:35.229 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Initializing ProtocolHandler ["http-nio-8002"]
2023-08-13 15:42:35.232 INFO  org.apache.catalina.core.StandardService          :173  [32m                  [0;39m Starting service [Tomcat]
2023-08-13 15:42:35.233 INFO  org.apache.catalina.core.StandardEngine           :173  [32m                  [0;39m Starting Servlet engine: [Apache Tomcat/10.1.1]
2023-08-13 15:42:35.418 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring embedded WebApplicationContext
2023-08-13 15:42:35.420 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext    :291  [32m                  [0;39m Root WebApplicationContext: initialization completed in 6385 ms
2023-08-13 15:42:35.910 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32m                  [0;39m HikariPool-1 - Starting...
2023-08-13 15:42:36.486 INFO  com.zaxxer.hikari.pool.HikariPool                 :565  [32m                  [0;39m HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41055ab8
2023-08-13 15:42:36.488 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32m                  [0;39m HikariPool-1 - Start completed.
2023-08-13 15:42:36.715 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-13 15:42:36.716 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :276  [32m                  [0;39m RM will register :jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-13 15:42:36.717 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:RMROLE,address:192.168.0.102:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='null'} >
2023-08-13 15:42:36.731 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :177  [32m                  [0;39m register RM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x87650c2e, L:/192.168.0.102:53082 - R:/192.168.0.102:8091]
2023-08-13 15:42:36.731 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 10 ms, version:1.6.1,role:RMROLE,channel:[id: 0x87650c2e, L:/192.168.0.102:53082 - R:/192.168.0.102:8091]
2023-08-13 15:42:36.745 INFO  i.s.s.a.datasource.SeataAutoDataSourceProxyCreator:101  [32m                  [0;39m Auto proxy data source 'dataSource' by 'AT' mode.
2023-08-13 15:42:37.808 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :62   [32m                  [0;39m Unable to start LiveReload server
2023-08-13 15:42:37.847 INFO  o.s.cloud.openfeign.FeignClientFactoryBean        :437  [32m                  [0;39m For 'member-service' URL not provided. Will try picking an instance via load-balancing.
2023-08-13 15:42:38.138 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] client.tm.degradeCheck+SEATA_GROUP+train
2023-08-13 15:42:38.139 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:38.140 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=2
2023-08-13 15:42:38.144 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.disableGlobalTransaction+SEATA_GROUP+train
2023-08-13 15:42:38.145 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=1
2023-08-13 15:42:38.145 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=2
2023-08-13 15:42:38.145 INFO  i.seata.spring.annotation.GlobalTransactionScanner:308  [32m                  [0;39m Bean [com.jktickets.service.impl.AfterConfirmOrderServiceImpl] with name [afterConfirmOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2023-08-13 15:42:38.164 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.redisson.spring.starter.RedissonAutoConfiguration
2023-08-13 15:42:38.404 INFO  org.redisson.Version                              :41   [32m                  [0;39m Redisson 3.21.0
2023-08-13 15:42:38.754 INFO  o.r.connection.pool.MasterPubSubConnectionPool    :158  [32m                  [0;39m 1 connections initialized for r-bp1e8io6hj1e27e15lpd.redis.rds.aliyuncs.com/47.110.123.191:6379
2023-08-13 15:42:39.693 INFO  org.redisson.connection.pool.MasterConnectionPool :158  [32m                  [0;39m 24 connections initialized for r-bp1e8io6hj1e27e15lpd.redis.rds.aliyuncs.com/47.110.123.191:6379
2023-08-13 15:42:40.590 INFO  c.alibaba.cloud.sentinel.SentinelWebMvcConfigurer :52   [32m                  [0;39m [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2023-08-13 15:42:41.789 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.github.pagehelper.autoconfigure.PageHelperStandardProperties
2023-08-13 15:42:43.255 INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver  :58   [32m                  [0;39m Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-13 15:42:43.330 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 15:42:43.331 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 15:42:43.333 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-localhost_8848] [subscribe] sentinel-business-flow+DEFAULT_GROUP+train
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-localhost_8848] [add-listener] ok, tenant=train, dataId=sentinel-business-flow, group=DEFAULT_GROUP, cnt=1
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$589/0x0000000800f6fa10
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$590/0x0000000800f70000
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-13 15:42:43.334 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-13 15:42:43.335 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Try to connect to server on start up, server: {serverIp = 'localhost', server main port = 8848}
2023-08-13 15:42:43.335 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:localhost ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 15:42:43.447 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Success to connect to server [localhost:8848] on start up, connectionId = 1691912563340_127.0.0.1_53124
2023-08-13 15:42:43.447 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 15:42:43.448 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Notify connected event to listeners.
2023-08-13 15:42:43.449 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Connected,notify listen context...
2023-08-13 15:42:43.448 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [6d57c8c4-550b-4471-89fe-212bcfce03cb_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-13 15:42:43.643 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Starting ProtocolHandler ["http-nio-8002"]
2023-08-13 15:42:43.676 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :226  [32m                  [0;39m Tomcat started on port(s): 8002 (http) with context path '/business'
2023-08-13 15:42:43.678 INFO  com.alibaba.nacos.client.naming                   :62   [32m                  [0;39m initializer namespace from ans.namespace attribute : null
2023-08-13 15:42:43.679 INFO  com.alibaba.nacos.client.naming                   :66   [32m                  [0;39m initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2023-08-13 15:42:43.679 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-13 15:42:43.679 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-13 15:42:43.679 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-13 15:42:43.680 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 3dbf19b6-f296-4119-8df3-b59c94d8b96d
2023-08-13 15:42:43.681 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-13 15:42:43.681 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-13 15:42:43.681 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-13 15:42:43.682 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-13 15:42:43.682 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-13 15:42:43.792 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691912563686_127.0.0.1_53126
2023-08-13 15:42:43.792 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Notify connected event to listeners.
2023-08-13 15:42:43.792 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-13 15:42:43.793 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-13 15:42:43.793 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [3dbf19b6-f296-4119-8df3-b59c94d8b96d] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-13 15:42:43.793 INFO  com.alibaba.nacos.client.naming                   :121  [32m                  [0;39m [REGISTER-SERVICE] train registering service business-service with instance Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2023-08-13 15:42:43.804 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :76   [32m                  [0;39m nacos registry, DEFAULT_GROUP business-service 192.168.0.102:8002 register finished
2023-08-13 15:42:44.190 INFO  com.jktickets.BusinessApplication                 :57   [32m                  [0;39m Started BusinessApplication in 21.582 seconds (process running for 24.513)
2023-08-13 15:42:44.199 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service+DEFAULT_GROUP+train
2023-08-13 15:42:44.199 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service, group=DEFAULT_GROUP, cnt=1
2023-08-13 15:42:44.200 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service, group=DEFAULT_GROUP
2023-08-13 15:42:44.201 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service.properties+DEFAULT_GROUP+train
2023-08-13 15:42:44.201 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service.properties, group=DEFAULT_GROUP, cnt=1
2023-08-13 15:42:44.201 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service.properties, group=DEFAULT_GROUP
2023-08-13 15:42:44.201 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service-dev.properties+DEFAULT_GROUP+train
2023-08-13 15:42:44.202 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service-dev.properties, group=DEFAULT_GROUP, cnt=1
2023-08-13 15:42:44.202 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service-dev.properties, group=DEFAULT_GROUP
2023-08-13 15:42:44.203 INFO  com.jktickets.BusinessApplication                 :33   [32m                  [0;39m 启动成功！！
2023-08-13 15:42:44.204 INFO  com.jktickets.BusinessApplication                 :35   [32m                  [0;39m 测试地址: 	http://127.0.0.1:8002/business/hello
2023-08-13 15:43:08.964 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-13 15:43:08.964 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m                  [0;39m Initializing Servlet 'dispatcherServlet'
2023-08-13 15:43:08.968 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m                  [0;39m Completed initialization in 4 ms
2023-08-13 15:43:09.283 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16919125891561gu  [0;39m ------------- 开始 -------------
2023-08-13 15:43:09.284 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16919125891561gu  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/confirmOrder/queryList GET
2023-08-13 15:43:09.285 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16919125891561gu  [0;39m 类名方法: com.jktickets.controller.admin.ConfirmOrderAdminController.queryDailyTrainList
2023-08-13 15:43:09.285 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16919125891561gu  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:09.387 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16919125891561gu  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:43:09.391 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16919125891561gu  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.ConfirmOrderMapper.selectByExample(ConfirmOrderExample))
2023-08-13 15:43:09.392 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16919125891561gu  [0;39m 参数值: com.jktickets.domain.ConfirmOrderExample@28f704ea
2023-08-13 15:43:09.580 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m16919125891561gu  [0;39m ==>  Preparing: SELECT count(0) FROM confirm_order
2023-08-13 15:43:09.582 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912589582pvf  [0;39m ------------- 开始 -------------
2023-08-13 15:43:09.583 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912589582pvf  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/station/queryAll GET
2023-08-13 15:43:09.584 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912589583ecg  [0;39m ------------- 开始 -------------
2023-08-13 15:43:09.584 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912589582pvf  [0;39m 类名方法: com.jktickets.controller.admin.StationAdminController.queryAllStationList
2023-08-13 15:43:09.584 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912589583ecg  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/train/queryAll GET
2023-08-13 15:43:09.584 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912589582pvf  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:09.584 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912589583ecg  [0;39m 类名方法: com.jktickets.controller.admin.TrainAdminController.queryAllTrainList
2023-08-13 15:43:09.585 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912589583ecg  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:09.585 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912589582pvf  [0;39m 请求参数: []
2023-08-13 15:43:09.585 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912589583ecg  [0;39m 请求参数: []
2023-08-13 15:43:09.586 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912589583ecg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:09.586 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912589582pvf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:43:09.586 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912589583ecg  [0;39m 参数值: com.jktickets.domain.TrainExample@69f5ff70
2023-08-13 15:43:09.586 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912589582pvf  [0;39m 参数值: com.jktickets.domain.StationExample@71b4214f
2023-08-13 15:43:09.599 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912589585fnq  [0;39m ------------- 开始 -------------
2023-08-13 15:43:09.599 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912589585fnq  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrainTicket/queryList GET
2023-08-13 15:43:09.600 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912589585fnq  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainTicketAdminController.queryDailyTrainTicketList
2023-08-13 15:43:09.600 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912589585fnq  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:09.602 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m16919125891561gu  [0;39m ==> Parameters: 
2023-08-13 15:43:09.606 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589582pvf  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-13 15:43:09.606 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912589583ecg  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:43:09.606 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589582pvf  [0;39m ==> Parameters: 
2023-08-13 15:43:09.606 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912589583ecg  [0;39m ==> Parameters: 
2023-08-13 15:43:09.611 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912589585fnq  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:43:09.638 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912589583ecg  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:43:09.638 TRACE c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :143  [32m16919125891561gu  [0;39m <==    Columns: count(0)
2023-08-13 15:43:09.638 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589582pvf  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-13 15:43:09.638 TRACE c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :143  [32m16919125891561gu  [0;39m <==        Row: 959
2023-08-13 15:43:09.641 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912589583ecg  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:43:09.641 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589582pvf  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-13 15:43:09.641 DEBUG c.j.m.ConfirmOrderMapper.selectByExample_COUNT    :137  [32m16919125891561gu  [0;39m <==      Total: 1
2023-08-13 15:43:09.643 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912589583ecg  [0;39m <==      Total: 1
2023-08-13 15:43:09.643 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589582pvf  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-13 15:43:09.645 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912589583ecg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:09.646 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589582pvf  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-13 15:43:09.646 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m16919125891561gu  [0;39m ==>  Preparing: select id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time from confirm_order order by date desc LIMIT ?
2023-08-13 15:43:09.648 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589582pvf  [0;39m <==      Total: 3
2023-08-13 15:43:09.648 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m16919125891561gu  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:43:09.649 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912589582pvf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:43:09.664 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==    Columns: id, member_id, date, train_code, start, end, daily_train_ticket_id, status, create_time, update_time
2023-08-13 15:43:09.666 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689287929857445888, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:50:02.587, 2023-08-09 22:50:03.552
2023-08-13 15:43:09.670 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689287898135924736, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:49:55.024, 2023-08-09 22:49:56.080
2023-08-13 15:43:09.672 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689282463601397760, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:28:19.330, 2023-08-09 22:28:20.788
2023-08-13 15:43:09.674 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689277216262852608, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:07:28.267, 2023-08-09 22:07:29.209
2023-08-13 15:43:09.677 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689277147790839808, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:07:11.937, 2023-08-09 22:07:13.830
2023-08-13 15:43:09.678 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689276079220592640, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:02:57.174, 2023-08-09 22:02:58.084
2023-08-13 15:43:09.680 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912589585fnq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-13 15:43:09.680 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689276043694837760, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:02:48.705, 2023-08-09 22:02:49.724
2023-08-13 15:43:09.681 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912589585fnq  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@13e5eb5a
2023-08-13 15:43:09.682 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689275673673338880, 1680932902797447168, 2023-08-09, 01, 上海, 杭州, 1689272457040629760, S, 2023-08-09 22:01:20.485, 2023-08-09 22:01:21.448
2023-08-13 15:43:09.684 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689274900658917376, 1680932902797447168, 2023-08-09, 01, 上海, 温州, 1689272456600227840, S, 2023-08-09 21:58:16.176, 2023-08-09 21:58:17.978
2023-08-13 15:43:09.687 TRACE c.j.mapper.ConfirmOrderMapper.selectByExample     :143  [32m16919125891561gu  [0;39m <==        Row: 1689272830358851584, 1680932902797447168, 2023-08-09, 01, 上海, 温州, 1689272456600227840, I, 2023-08-09 21:50:02.580, 2023-08-09 21:50:02.580
2023-08-13 15:43:09.688 DEBUG c.j.mapper.ConfirmOrderMapper.selectByExample     :137  [32m16919125891561gu  [0;39m <==      Total: 10
2023-08-13 15:43:09.689 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16919125891561gu  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.ConfirmOrderMapper.selectByExample(ConfirmOrderExample))
2023-08-13 15:43:09.690 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912589585fnq  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket
2023-08-13 15:43:09.691 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912589585fnq  [0;39m ==> Parameters: 
2023-08-13 15:43:09.692 INFO  com.jktickets.service.ConfirmOrderService         :128  [32m16919125891561gu  [0;39m 总行数：959
2023-08-13 15:43:09.692 INFO  com.jktickets.service.ConfirmOrderService         :129  [32m16919125891561gu  [0;39m 总页数：96
2023-08-13 15:43:09.705 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691912589585fnq  [0;39m <==    Columns: count(0)
2023-08-13 15:43:09.705 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691912589585fnq  [0;39m <==        Row: 25
2023-08-13 15:43:09.705 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691912589585fnq  [0;39m <==      Total: 1
2023-08-13 15:43:09.706 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912589585fnq  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket order by id desc LIMIT ?
2023-08-13 15:43:09.707 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912589585fnq  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:43:09.743 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912589582pvf  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-13 15:43:09.744 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912589583ecg  [0;39m 返回结果: {"code":0,"message":"","result":[{"code":"01","createTime":1689430563000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680219682084360192,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689430645462}],"success":true}
2023-08-13 15:43:09.744 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912589582pvf  [0;39m ------------- 结束 耗时：162 ms -------------
2023-08-13 15:43:09.744 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912589583ecg  [0;39m ------------- 结束 耗时：161 ms -------------
2023-08-13 15:43:09.748 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16919125891561gu  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691592602587,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689287929857445888,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691592603552},{"createTime":1691592595024,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689287898135924736,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691592596080},{"createTime":1691591299330,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689282463601397760,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691591300788},{"createTime":1691590048267,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689277216262852608,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691590049209},{"createTime":1691590031937,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689277147790839808,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691590033830},{"createTime":1691589777174,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689276079220592640,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589778084},{"createTime":1691589768705,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689276043694837760,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589769724},{"createTime":1691589680485,"dailyTrainTicketId":1689272457040629760,"date":1691510400000,"end":"杭州","id":1689275673673338880,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589681448},{"createTime":1691589496176,"dailyTrainTicketId":1689272456600227840,"date":1691510400000,"end":"温州","id":1689274900658917376,"memberId":1680932902797447168,"start":"上海","status":"S","trainCode":"01","updateTime":1691589497978},{"createTime":1691589002580,"dailyTrainTicketId":1689272456600227840,"date":1691510400000,"end":"温州","id":1689272830358851584,"memberId":1680932902797447168,"start":"上海","status":"I","trainCode":"01","updateTime":1691589002580}],"total":959},"success":true}
2023-08-13 15:43:09.749 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16919125891561gu  [0;39m ------------- 结束 耗时：468 ms -------------
2023-08-13 15:43:09.760 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-13 15:43:09.790 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1690629097362952192, 2023-08-13, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 32, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-13 15:39:21.612, 2023-08-13 15:39:21.612
2023-08-13 15:43:09.796 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1690629096972881920, 2023-08-13, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 32, 5.76, 25, 4.32, -1, 8.64, -1, 7.20, 2023-08-13 15:39:21.612, 2023-08-13 15:39:21.612
2023-08-13 15:43:09.798 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1690629096415039488, 2023-08-13, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 32, 0.48, 25, 0.36, -1, 0.72, -1, 0.60, 2023-08-13 15:39:21.612, 2023-08-13 15:39:21.612
2023-08-13 15:43:09.801 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1689272457594277888, 2023-08-09, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 24, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:43:09.803 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1689272457040629760, 2023-08-09, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 23, 5.76, 25, 4.32, -1, 8.64, -1, 7.20, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:43:09.805 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1689272456600227840, 2023-08-09, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 23, 0.48, 25, 0.36, -1, 0.72, -1, 0.60, 2023-08-09 21:48:33.475, 2023-08-09 21:48:33.475
2023-08-13 15:43:09.808 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1688913100071374848, 2023-08-08, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 0, 5.28, 0, 3.96, -1, 7.92, -1, 6.60, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:43:09.810 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1688913099521921024, 2023-08-08, 01, 上海, shanghai, 00:02:00, 0, 杭州, hangzhou, 15:00:00, 2, 0, 5.76, 0, 4.32, -1, 8.64, -1, 7.20, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:43:09.811 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1688913099110879232, 2023-08-08, 01, 上海, shanghai, 00:02:00, 0, 温州, wenzhou, 22:14:58, 1, 0, 0.48, 0, 0.36, -1, 0.72, -1, 0.60, 2023-08-08 22:00:35.973, 2023-08-08 22:00:35.973
2023-08-13 15:43:09.813 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691912589585fnq  [0;39m <==        Row: 1688105548702158848, 2023-08-06, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 23, 5.28, 0, 3.96, -1, 7.92, -1, 6.60, 2023-08-06 16:31:40.773, 2023-08-06 16:31:40.773
2023-08-13 15:43:09.814 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691912589585fnq  [0;39m <==      Total: 10
2023-08-13 15:43:09.814 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912589585fnq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-13 15:43:09.815 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691912589585fnq  [0;39m 总行数：25
2023-08-13 15:43:09.815 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691912589585fnq  [0;39m 总页数：3
2023-08-13 15:43:09.853 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912589852s17  [0;39m ------------- 开始 -------------
2023-08-13 15:43:09.853 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912589852s17  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/station/queryAll GET
2023-08-13 15:43:09.853 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912589852s17  [0;39m 类名方法: com.jktickets.controller.admin.StationAdminController.queryAllStationList
2023-08-13 15:43:09.854 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912589852s17  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:09.854 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912589852s17  [0;39m 请求参数: []
2023-08-13 15:43:09.854 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912589852s17  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:43:09.855 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912589852s17  [0;39m 参数值: com.jktickets.domain.StationExample@46690412
2023-08-13 15:43:09.856 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589852s17  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-13 15:43:09.857 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589852s17  [0;39m ==> Parameters: 
2023-08-13 15:43:09.870 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589852s17  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-13 15:43:09.871 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589852s17  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-13 15:43:09.872 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589852s17  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-13 15:43:09.873 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691912589852s17  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-13 15:43:09.874 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691912589852s17  [0;39m <==      Total: 3
2023-08-13 15:43:09.875 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912589852s17  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-13 15:43:09.876 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912589852s17  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-13 15:43:09.877 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912589852s17  [0;39m ------------- 结束 耗时：24 ms -------------
2023-08-13 15:43:09.900 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912589585fnq  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691912361612,"date":1691856000000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1690629097362952192,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691912361612,"ydz":32,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691912361612,"date":1691856000000,"edz":25,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1690629096972881920,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691912361612,"ydz":32,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691912361612,"date":1691856000000,"edz":25,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1690629096415039488,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691912361612,"ydz":32,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1689272457594277888,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691588913475,"ydz":24,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1689272457040629760,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691588913475,"ydz":23,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691588913475,"date":1691510400000,"edz":25,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1689272456600227840,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691588913475,"ydz":23,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688913100071374848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":4.32,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688913099521921024,"rw":-1,"rwPrice":8.64,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":5.76,"yw":-1,"ywPrice":7.20},{"createTime":1691503235973,"date":1691424000000,"edz":0,"edzPrice":0.36,"end":"温州","endIndex":1,"endPinyin":"wenzhou","endTime":51298000,"id":1688913099110879232,"rw":-1,"rwPrice":0.72,"start":"上海","startIndex":0,"startPinyin":"shanghai","startTime":-28680000,"trainCode":"01","updateTime":1691503235973,"ydz":0,"ydzPrice":0.48,"yw":-1,"ywPrice":0.60},{"createTime":1691310700773,"date":1691251200000,"edz":0,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1688105548702158848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691310700773,"ydz":23,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":25},"success":true}
2023-08-13 15:43:09.901 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912589585fnq  [0;39m ------------- 结束 耗时：302 ms -------------
2023-08-13 15:43:11.476 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912591476myj  [0;39m ------------- 开始 -------------
2023-08-13 15:43:11.477 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912591476myj  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/train/queryAll GET
2023-08-13 15:43:11.477 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912591476myj  [0;39m 类名方法: com.jktickets.controller.admin.TrainAdminController.queryAllTrainList
2023-08-13 15:43:11.477 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912591476myj  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:11.478 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912591476myj  [0;39m 请求参数: []
2023-08-13 15:43:11.478 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912591476myj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:11.478 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912591476myj  [0;39m 参数值: com.jktickets.domain.TrainExample@c4e16fa
2023-08-13 15:43:11.484 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912591479bdz  [0;39m ------------- 开始 -------------
2023-08-13 15:43:11.484 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912591479bdz  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-13 15:43:11.484 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912591479bdz  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-13 15:43:11.485 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912591479bdz  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:11.488 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912591479bdz  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:43:11.490 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912591476myj  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:43:11.491 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912591476myj  [0;39m ==> Parameters: 
2023-08-13 15:43:11.493 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912591479bdz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:43:11.494 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912591479bdz  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@3ada6b22
2023-08-13 15:43:11.543 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912591479bdz  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-13 15:43:11.543 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912591476myj  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:43:11.544 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912591479bdz  [0;39m ==> Parameters: 
2023-08-13 15:43:11.544 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912591476myj  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:43:11.545 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912591476myj  [0;39m <==      Total: 1
2023-08-13 15:43:11.545 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912591476myj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:11.546 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912591476myj  [0;39m 返回结果: {"code":0,"message":"","result":[{"code":"01","createTime":1689430563000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680219682084360192,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689430645462}],"success":true}
2023-08-13 15:43:11.546 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912591476myj  [0;39m ------------- 结束 耗时：70 ms -------------
2023-08-13 15:43:11.557 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912591479bdz  [0;39m <==    Columns: count(0)
2023-08-13 15:43:11.558 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912591479bdz  [0;39m <==        Row: 9
2023-08-13 15:43:11.558 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912591479bdz  [0;39m <==      Total: 1
2023-08-13 15:43:11.559 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912591479bdz  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-13 15:43:11.560 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912591479bdz  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:43:11.581 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:43:11.583 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1690629086348709888, 2023-08-13, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-13 15:39:19.211, 2023-08-13 15:39:19.211
2023-08-13 15:43:11.585 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1689272446911385600, 2023-08-09, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-09 21:48:31.164, 2023-08-09 21:48:31.164
2023-08-13 15:43:11.587 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1688913089266847744, 2023-08-08, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-08 22:00:33.578, 2023-08-08 22:00:33.578
2023-08-13 15:43:11.589 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1688105537453035520, 2023-08-06, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-06 16:31:38.270, 2023-08-06 16:31:38.270
2023-08-13 15:43:11.591 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1687827556604186624, 2023-08-05, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-05 22:07:02.461, 2023-08-05 22:07:02.461
2023-08-13 15:43:11.592 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-13 15:43:11.593 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-13 15:43:11.595 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-13 15:43:11.596 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912591479bdz  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-13 15:43:11.597 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912591479bdz  [0;39m <==      Total: 9
2023-08-13 15:43:11.597 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912591479bdz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:43:11.598 INFO  com.jktickets.service.DailyTrainService           :105  [32m1691912591479bdz  [0;39m 总行数：9
2023-08-13 15:43:11.598 INFO  com.jktickets.service.DailyTrainService           :106  [32m1691912591479bdz  [0;39m 总页数：1
2023-08-13 15:43:11.608 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912591479bdz  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1691912359211,"date":1691856000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1690629086348709888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691912359211},{"code":"01","createTime":1691588911164,"date":1691510400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1689272446911385600,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691588911164},{"code":"01","createTime":1691503233578,"date":1691424000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688913089266847744,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691503233578},{"code":"01","createTime":1691310698270,"date":1691251200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688105537453035520,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691310698270},{"code":"01","createTime":1691244422461,"date":1691164800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1687827556604186624,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691244422461},{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":9},"success":true}
2023-08-13 15:43:11.609 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912591479bdz  [0;39m ------------- 结束 耗时：125 ms -------------
2023-08-13 15:43:18.998 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912598994xle  [0;39m ------------- 开始 -------------
2023-08-13 15:43:18.999 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912598994xle  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/genDaily/2023-08-13 GET
2023-08-13 15:43:18.999 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912598994xle  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.genDailyByDate
2023-08-13 15:43:18.999 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912598994xle  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:18.999 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912598994xle  [0;39m 请求参数: [1691856000000]
2023-08-13 15:43:19.000 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:19.000 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainExample@4608b3eb
2023-08-13 15:43:19.013 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-13 15:43:19.014 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912598994xle  [0;39m ==> Parameters: 
2023-08-13 15:43:19.027 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912598994xle  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:43:19.028 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691912598994xle  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-13 15:43:19.028 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:19.029 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-13 15:43:19.112 INFO  com.jktickets.service.DailyTrainService           :147  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的信息开始
2023-08-13 15:43:19.114 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-13 15:43:19.114 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@2a253b7e
2023-08-13 15:43:19.118 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from daily_train WHERE ( `date` = ? and code = ? )
2023-08-13 15:43:19.119 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:19.144 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.145 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-13 15:43:19.154 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-13 15:43:19.155 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrain [Hash = 554060422, id=1690630092738400256, date=Sun Aug 13 00:00:00 CST 2023, code=01, type=G, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 01:00:02 CST 1970, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 02:00:00 CST 1970, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.155 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train (id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.156 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630092738400256(Long), 2023-08-13(Date), 01(String), G(String), 上海(String), shanghai(String), 01:00:02(Time), 温州(String), wenzhou(String), 02:00:00(Time), 2023-08-13 15:43:19.146(Timestamp), 2023-08-13 15:43:19.146(Timestamp)
2023-08-13 15:43:19.198 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.199 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-13 15:43:19.199 INFO  com.jktickets.service.DailyTrainStationService    :110  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的车站信息开始
2023-08-13 15:43:19.203 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-13 15:43:19.204 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainStationExample@12bc05a5
2023-08-13 15:43:19.205 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from daily_train_station WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:19.206 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:19.231 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691912598994xle  [0;39m <==    Updates: 3
2023-08-13 15:43:19.232 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-13 15:43:19.235 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:19.235 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainStationExample@4000f24
2023-08-13 15:43:19.239 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:43:19.239 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:19.251 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:43:19.252 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:43:19.253 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:43:19.254 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:43:19.254 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m <==      Total: 3
2023-08-13 15:43:19.254 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:19.255 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.256 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainStation [Hash = 218026029, id=1690630093162024960, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=0, name=上海, namePinyin=shanghai, inTime=Thu Jan 01 00:00:00 CST 1970, outTime=Thu Jan 01 00:02:00 CST 1970, stopTime=Thu Jan 01 00:02:00 CST 1970, km=12.00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.256 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.258 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630093162024960(Long), 2023-08-13(Date), 01(String), 0(Integer), 上海(String), shanghai(String), 00:00:00(Time), 00:02:00(Time), 00:02:00(Time), 12.00(BigDecimal), 2023-08-13 15:43:19.255(Timestamp), 2023-08-13 15:43:19.255(Timestamp)
2023-08-13 15:43:19.297 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.298 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.298 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.299 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainStation [Hash = 988825164, id=1690630093342380032, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=1, name=温州, namePinyin=wenzhou, inTime=Thu Jan 01 22:14:58 CST 1970, outTime=Thu Jan 01 22:15:03 CST 1970, stopTime=Thu Jan 01 00:00:05 CST 1970, km=1.00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.299 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.300 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630093342380032(Long), 2023-08-13(Date), 01(String), 1(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 22:15:03(Time), 00:00:05(Time), 1.00(BigDecimal), 2023-08-13 15:43:19.298(Timestamp), 2023-08-13 15:43:19.298(Timestamp)
2023-08-13 15:43:19.325 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.326 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.326 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.327 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainStation [Hash = 2045818293, id=1690630093459820544, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=2, name=杭州, namePinyin=hangzhou, inTime=Thu Jan 01 15:00:00 CST 1970, outTime=Thu Jan 01 16:01:00 CST 1970, stopTime=Thu Jan 01 01:01:00 CST 1970, km=11.00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.327 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.328 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630093459820544(Long), 2023-08-13(Date), 01(String), 2(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 16:01:00(Time), 01:01:00(Time), 11.00(BigDecimal), 2023-08-13 15:43:19.326(Timestamp), 2023-08-13 15:43:19.326(Timestamp)
2023-08-13 15:43:19.359 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.359 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-13 15:43:19.359 INFO  com.jktickets.service.DailyTrainStationService    :136  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的车站信息结束
2023-08-13 15:43:19.378 INFO  com.jktickets.service.DailyTrainCarriageService   :122  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的车厢信息开始
2023-08-13 15:43:19.382 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-13 15:43:19.383 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5bd9463f
2023-08-13 15:43:19.387 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from daily_train_carriage WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:19.387 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:19.411 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691912598994xle  [0;39m <==    Updates: 2
2023-08-13 15:43:19.413 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-13 15:43:19.420 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-13 15:43:19.420 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainCarriageExample@2fb48967
2023-08-13 15:43:19.425 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from train_carriage WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:43:19.426 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:19.439 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: id, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-13 15:43:19.440 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 1680419230580871168, 01, 1, 1, 32, 8, 4, 2023-07-16 11:28:59, 2023-07-25 21:20:17.749
2023-08-13 15:43:19.442 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 1680491830979989504, 01, 2, 2, 25, 5, 5, 2023-07-16 16:17:29.155, 2023-07-16 16:17:29.155
2023-08-13 15:43:19.442 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 2
2023-08-13 15:43:19.443 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-13 15:43:19.445 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:43:19.445 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainCarriage [Hash = 687867672, id=1690630093954748416, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=1, seatType=1, seatCount=32, rowCount=8, colCount=4, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.446 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.448 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630093954748416(Long), 2023-08-13(Date), 01(String), 1(Integer), 1(String), 32(Integer), 8(Integer), 4(Integer), 2023-08-13 15:43:19.443(Timestamp), 2023-08-13 15:43:19.443(Timestamp)
2023-08-13 15:43:19.481 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.481 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:43:19.482 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:43:19.483 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainCarriage [Hash = 497966025, id=1690630094114131968, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, index=2, seatType=2, seatCount=25, rowCount=5, colCount=5, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.483 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.484 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630094114131968(Long), 2023-08-13(Date), 01(String), 2(Integer), 2(String), 25(Integer), 5(Integer), 5(Integer), 2023-08-13 15:43:19.482(Timestamp), 2023-08-13 15:43:19.482(Timestamp)
2023-08-13 15:43:19.511 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.511 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-13 15:43:19.511 INFO  com.jktickets.service.DailyTrainCarriageService   :147  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的车厢信息结束
2023-08-13 15:43:19.551 INFO  com.jktickets.service.DailyTrainSeatService       :112  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的座位信息开始
2023-08-13 15:43:19.554 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-13 15:43:19.555 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@29768c2a
2023-08-13 15:43:19.556 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from daily_train_seat WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:19.557 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:19.581 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691912598994xle  [0;39m <==    Updates: 57
2023-08-13 15:43:19.581 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-13 15:43:19.582 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:19.582 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainStationExample@63e908bb
2023-08-13 15:43:19.583 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:43:19.584 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:19.596 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:43:19.597 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:43:19.598 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:43:19.599 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:43:19.599 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m <==      Total: 3
2023-08-13 15:43:19.600 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:19.604 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-13 15:43:19.604 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainSeatExample@473c738e
2023-08-13 15:43:19.605 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, create_time, update_time from train_seat WHERE ( train_code = ? ) order by `id` asc
2023-08-13 15:43:19.606 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:19.619 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==    Columns: id, train_code, carriage_index, row, col, seat_type, carriage_seat_index, create_time, update_time
2023-08-13 15:43:19.619 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917643452223488, 01, 1, 01, A, 1, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.620 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917643703881728, 01, 1, 01, C, 1, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.621 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917643808739328, 01, 1, 01, D, 1, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.622 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917643913596928, 01, 1, 01, F, 1, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.622 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644010065920, 01, 1, 02, A, 1, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.623 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644119117824, 01, 1, 02, C, 1, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.623 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644215586816, 01, 1, 02, D, 1, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.624 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644316250112, 01, 1, 02, F, 1, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.625 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644458856448, 01, 1, 03, A, 1, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.626 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644551131136, 01, 1, 03, C, 1, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.627 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644647600128, 01, 1, 03, D, 1, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.627 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644752457728, 01, 1, 03, F, 1, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.628 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644844732416, 01, 1, 04, A, 1, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.628 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917644957978624, 01, 1, 04, C, 1, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.629 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645088002048, 01, 1, 04, D, 1, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.630 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645184471040, 01, 1, 04, F, 1, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.634 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645280940032, 01, 1, 05, A, 1, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.635 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645385797632, 01, 1, 05, C, 1, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.635 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645486460928, 01, 1, 05, D, 1, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.636 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645582929920, 01, 1, 05, F, 1, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.637 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645679398912, 01, 1, 06, A, 1, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.638 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645780062208, 01, 1, 06, C, 1, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.638 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917645897502720, 01, 1, 06, D, 1, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.639 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646002360320, 01, 1, 06, F, 1, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.639 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646132383744, 01, 1, 07, A, 1, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.640 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646300155904, 01, 1, 07, C, 1, 26, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.641 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646396624896, 01, 1, 07, D, 1, 27, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.642 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646526648320, 01, 1, 07, F, 1, 28, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.642 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646623117312, 01, 1, 08, A, 1, 29, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.642 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646732169216, 01, 1, 08, C, 1, 30, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.643 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646824443904, 01, 1, 08, D, 1, 31, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.644 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917646941884416, 01, 1, 08, F, 1, 32, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.644 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647038353408, 01, 2, 01, A, 2, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.645 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647189348352, 01, 2, 01, B, 2, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.646 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647327760384, 01, 2, 01, C, 2, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.647 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647420035072, 01, 2, 01, D, 2, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.648 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647524892672, 01, 2, 01, F, 2, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.648 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647621361664, 01, 2, 02, A, 2, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.649 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647763968000, 01, 2, 02, B, 2, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.649 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647860436992, 01, 2, 02, C, 2, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.650 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917647986266112, 01, 2, 02, D, 2, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.651 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648082735104, 01, 2, 02, F, 2, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.651 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648187592704, 01, 2, 03, A, 2, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.651 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648435056640, 01, 2, 03, B, 2, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.652 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648548302848, 01, 2, 03, C, 2, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.652 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648695103488, 01, 2, 03, D, 2, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.653 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648787378176, 01, 2, 03, F, 2, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.653 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648888041472, 01, 2, 04, A, 2, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.654 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917648984510464, 01, 2, 04, B, 2, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.654 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649089368064, 01, 2, 04, C, 2, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.655 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649181642752, 01, 2, 04, D, 2, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.655 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649282306048, 01, 2, 04, F, 2, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.656 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649424912384, 01, 2, 05, A, 2, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.656 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649554935808, 01, 2, 05, B, 2, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.657 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649814982656, 01, 2, 05, C, 2, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.657 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917649919840256, 01, 2, 05, D, 2, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.658 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691912598994xle  [0;39m <==        Row: 1684917650012114944, 01, 2, 05, F, 2, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-13 15:43:19.658 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691912598994xle  [0;39m <==      Total: 57
2023-08-13 15:43:19.658 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-13 15:43:19.659 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.659 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1973139476, id=1690630094856523776, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=A, seatType=1, carriageSeatIndex=1, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.660 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.661 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630094856523776(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), A(String), 1(String), 1(Integer), 00(String), 2023-08-13 15:43:19.658(Timestamp), 2023-08-13 15:43:19.658(Timestamp)
2023-08-13 15:43:19.688 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.689 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.689 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.689 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 2072571015, id=1690630094982352896, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.690 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.691 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630094982352896(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), C(String), 1(String), 2(Integer), 00(String), 2023-08-13 15:43:19.689(Timestamp), 2023-08-13 15:43:19.689(Timestamp)
2023-08-13 15:43:19.714 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.714 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.715 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.715 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 182494814, id=1690630095091404800, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.715 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.716 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095091404800(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), D(String), 1(String), 3(Integer), 00(String), 2023-08-13 15:43:19.715(Timestamp), 2023-08-13 15:43:19.715(Timestamp)
2023-08-13 15:43:19.743 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.743 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.744 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.744 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1782197032, id=1690630095213039616, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.744 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.745 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095213039616(Long), 2023-08-13(Date), 01(String), 1(Integer), 01(String), F(String), 1(String), 4(Integer), 00(String), 2023-08-13 15:43:19.743(Timestamp), 2023-08-13 15:43:19.743(Timestamp)
2023-08-13 15:43:19.774 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.774 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.774 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.775 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1470336867, id=1690630095338868736, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.775 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.776 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095338868736(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), A(String), 1(String), 5(Integer), 00(String), 2023-08-13 15:43:19.774(Timestamp), 2023-08-13 15:43:19.774(Timestamp)
2023-08-13 15:43:19.799 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.800 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.800 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.800 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 912107090, id=1690630095447920640, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.801 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.802 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095447920640(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), C(String), 1(String), 6(Integer), 00(String), 2023-08-13 15:43:19.8(Timestamp), 2023-08-13 15:43:19.8(Timestamp)
2023-08-13 15:43:19.826 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.826 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.827 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.827 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 2136260199, id=1690630095561166848, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.828 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.829 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095561166848(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), D(String), 1(String), 7(Integer), 00(String), 2023-08-13 15:43:19.827(Timestamp), 2023-08-13 15:43:19.827(Timestamp)
2023-08-13 15:43:19.854 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.855 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.856 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.856 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 111611613, id=1690630095678607360, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=F, seatType=1, carriageSeatIndex=8, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.856 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.857 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095678607360(Long), 2023-08-13(Date), 01(String), 1(Integer), 02(String), F(String), 1(String), 8(Integer), 00(String), 2023-08-13 15:43:19.855(Timestamp), 2023-08-13 15:43:19.855(Timestamp)
2023-08-13 15:43:19.885 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.886 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.886 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.887 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1829483628, id=1690630095808630784, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=A, seatType=1, carriageSeatIndex=9, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.887 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.888 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095808630784(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), A(String), 1(String), 9(Integer), 00(String), 2023-08-13 15:43:19.886(Timestamp), 2023-08-13 15:43:19.886(Timestamp)
2023-08-13 15:43:19.912 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.913 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.913 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.914 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 473313113, id=1690630095921876992, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=C, seatType=1, carriageSeatIndex=10, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.915 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.916 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630095921876992(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), C(String), 1(String), 10(Integer), 00(String), 2023-08-13 15:43:19.913(Timestamp), 2023-08-13 15:43:19.913(Timestamp)
2023-08-13 15:43:19.941 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.941 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.941 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.941 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 467821043, id=1690630096039317504, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=D, seatType=1, carriageSeatIndex=11, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.942 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.943 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096039317504(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), D(String), 1(String), 11(Integer), 00(String), 2023-08-13 15:43:19.941(Timestamp), 2023-08-13 15:43:19.941(Timestamp)
2023-08-13 15:43:19.967 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:19.967 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.968 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:19.968 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 993739096, id=1690630096152563712, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=F, seatType=1, carriageSeatIndex=12, sell=00, createTime=2023-08-13 15:43:19, updateTime=2023-08-13 15:43:19]
2023-08-13 15:43:19.968 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:19.970 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096152563712(Long), 2023-08-13(Date), 01(String), 1(Integer), 03(String), F(String), 1(String), 12(Integer), 00(String), 2023-08-13 15:43:19.967(Timestamp), 2023-08-13 15:43:19.967(Timestamp)
2023-08-13 15:43:20.011 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.012 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.013 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.013 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 507356149, id=1690630096337113088, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=A, seatType=1, carriageSeatIndex=13, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.014 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.015 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096337113088(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), A(String), 1(String), 13(Integer), 00(String), 2023-08-13 15:43:20.012(Timestamp), 2023-08-13 15:43:20.012(Timestamp)
2023-08-13 15:43:20.037 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.038 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.039 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.039 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 301654099, id=1690630096450359296, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=C, seatType=1, carriageSeatIndex=14, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.040 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.041 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096450359296(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), C(String), 1(String), 14(Integer), 00(String), 2023-08-13 15:43:20.038(Timestamp), 2023-08-13 15:43:20.038(Timestamp)
2023-08-13 15:43:20.066 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.067 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.067 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.068 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 831076328, id=1690630096567799808, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=D, seatType=1, carriageSeatIndex=15, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.068 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.069 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096567799808(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), D(String), 1(String), 15(Integer), 00(String), 2023-08-13 15:43:20.067(Timestamp), 2023-08-13 15:43:20.067(Timestamp)
2023-08-13 15:43:20.095 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.096 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.100 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.101 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 654698487, id=1690630096706211840, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=F, seatType=1, carriageSeatIndex=16, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.101 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.106 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096706211840(Long), 2023-08-13(Date), 01(String), 1(Integer), 04(String), F(String), 1(String), 16(Integer), 00(String), 2023-08-13 15:43:20.096(Timestamp), 2023-08-13 15:43:20.096(Timestamp)
2023-08-13 15:43:20.132 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.133 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.133 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.134 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1919720182, id=1690630096844623872, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=A, seatType=1, carriageSeatIndex=17, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.134 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.135 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096844623872(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), A(String), 1(String), 17(Integer), 00(String), 2023-08-13 15:43:20.133(Timestamp), 2023-08-13 15:43:20.133(Timestamp)
2023-08-13 15:43:20.162 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.163 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.164 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.164 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1009905500, id=1690630096974647296, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=C, seatType=1, carriageSeatIndex=18, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.164 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.165 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630096974647296(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), C(String), 1(String), 18(Integer), 00(String), 2023-08-13 15:43:20.163(Timestamp), 2023-08-13 15:43:20.163(Timestamp)
2023-08-13 15:43:20.204 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.205 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.205 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.206 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1877834563, id=1690630097146613760, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=D, seatType=1, carriageSeatIndex=19, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.206 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.207 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097146613760(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), D(String), 1(String), 19(Integer), 00(String), 2023-08-13 15:43:20.205(Timestamp), 2023-08-13 15:43:20.205(Timestamp)
2023-08-13 15:43:20.236 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.236 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.237 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.237 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1055026220, id=1690630097280831488, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=F, seatType=1, carriageSeatIndex=20, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.237 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.238 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097280831488(Long), 2023-08-13(Date), 01(String), 1(Integer), 05(String), F(String), 1(String), 20(Integer), 00(String), 2023-08-13 15:43:20.236(Timestamp), 2023-08-13 15:43:20.236(Timestamp)
2023-08-13 15:43:20.264 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.265 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.265 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.266 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1145210804, id=1690630097398272000, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=A, seatType=1, carriageSeatIndex=21, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.266 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.267 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097398272000(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), A(String), 1(String), 21(Integer), 00(String), 2023-08-13 15:43:20.265(Timestamp), 2023-08-13 15:43:20.265(Timestamp)
2023-08-13 15:43:20.291 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.292 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.292 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.293 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 895749760, id=1690630097511518208, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=C, seatType=1, carriageSeatIndex=22, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.293 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.294 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097511518208(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), C(String), 1(String), 22(Integer), 00(String), 2023-08-13 15:43:20.292(Timestamp), 2023-08-13 15:43:20.292(Timestamp)
2023-08-13 15:43:20.325 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.326 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.326 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.327 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 724101454, id=1690630097654124544, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=D, seatType=1, carriageSeatIndex=23, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.327 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.328 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097654124544(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), D(String), 1(String), 23(Integer), 00(String), 2023-08-13 15:43:20.326(Timestamp), 2023-08-13 15:43:20.326(Timestamp)
2023-08-13 15:43:20.405 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.405 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.406 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.406 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1925081889, id=1690630097989668864, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=F, seatType=1, carriageSeatIndex=24, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.406 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.407 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630097989668864(Long), 2023-08-13(Date), 01(String), 1(Integer), 06(String), F(String), 1(String), 24(Integer), 00(String), 2023-08-13 15:43:20.405(Timestamp), 2023-08-13 15:43:20.405(Timestamp)
2023-08-13 15:43:20.430 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.431 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.432 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.432 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1476672715, id=1690630098094526464, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=A, seatType=1, carriageSeatIndex=25, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.432 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.433 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098094526464(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), A(String), 1(String), 25(Integer), 00(String), 2023-08-13 15:43:20.431(Timestamp), 2023-08-13 15:43:20.431(Timestamp)
2023-08-13 15:43:20.459 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.460 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.460 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.460 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1705994097, id=1690630098216161280, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=C, seatType=1, carriageSeatIndex=26, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.461 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.462 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098216161280(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), C(String), 1(String), 26(Integer), 00(String), 2023-08-13 15:43:20.46(Timestamp), 2023-08-13 15:43:20.46(Timestamp)
2023-08-13 15:43:20.502 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.502 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.503 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.503 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 2127577654, id=1690630098396516352, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=D, seatType=1, carriageSeatIndex=27, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.504 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.504 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098396516352(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), D(String), 1(String), 27(Integer), 00(String), 2023-08-13 15:43:20.503(Timestamp), 2023-08-13 15:43:20.503(Timestamp)
2023-08-13 15:43:20.529 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.530 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.530 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.531 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1262827342, id=1690630098509762560, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=F, seatType=1, carriageSeatIndex=28, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.531 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.532 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098509762560(Long), 2023-08-13(Date), 01(String), 1(Integer), 07(String), F(String), 1(String), 28(Integer), 00(String), 2023-08-13 15:43:20.53(Timestamp), 2023-08-13 15:43:20.53(Timestamp)
2023-08-13 15:43:20.555 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.555 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.556 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.556 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1858708232, id=1690630098618814464, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=A, seatType=1, carriageSeatIndex=29, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.556 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.558 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098618814464(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), A(String), 1(String), 29(Integer), 00(String), 2023-08-13 15:43:20.556(Timestamp), 2023-08-13 15:43:20.556(Timestamp)
2023-08-13 15:43:20.583 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.583 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.584 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.584 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 596110492, id=1690630098736254976, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=C, seatType=1, carriageSeatIndex=30, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.585 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.585 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098736254976(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), C(String), 1(String), 30(Integer), 00(String), 2023-08-13 15:43:20.583(Timestamp), 2023-08-13 15:43:20.583(Timestamp)
2023-08-13 15:43:20.610 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.611 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.611 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.612 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 916662829, id=1690630098849501184, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=D, seatType=1, carriageSeatIndex=31, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.612 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.613 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098849501184(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), D(String), 1(String), 31(Integer), 00(String), 2023-08-13 15:43:20.611(Timestamp), 2023-08-13 15:43:20.611(Timestamp)
2023-08-13 15:43:20.641 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.641 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.642 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.642 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 959497354, id=1690630098979524608, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=F, seatType=1, carriageSeatIndex=32, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.642 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.643 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630098979524608(Long), 2023-08-13(Date), 01(String), 1(Integer), 08(String), F(String), 1(String), 32(Integer), 00(String), 2023-08-13 15:43:20.641(Timestamp), 2023-08-13 15:43:20.641(Timestamp)
2023-08-13 15:43:20.673 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.673 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.674 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.674 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 200449872, id=1690630099113742336, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=A, seatType=2, carriageSeatIndex=1, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.674 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.675 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099113742336(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), A(String), 2(String), 1(Integer), 00(String), 2023-08-13 15:43:20.674(Timestamp), 2023-08-13 15:43:20.674(Timestamp)
2023-08-13 15:43:20.701 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.701 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.702 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.702 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1748439383, id=1690630099231182848, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.702 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.703 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099231182848(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), B(String), 2(String), 2(Integer), 00(String), 2023-08-13 15:43:20.701(Timestamp), 2023-08-13 15:43:20.701(Timestamp)
2023-08-13 15:43:20.767 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.767 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.768 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.768 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 714048764, id=1690630099508006912, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=C, seatType=2, carriageSeatIndex=3, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.768 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.769 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099508006912(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), C(String), 2(String), 3(Integer), 00(String), 2023-08-13 15:43:20.767(Timestamp), 2023-08-13 15:43:20.767(Timestamp)
2023-08-13 15:43:20.797 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.798 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.798 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.798 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1225788445, id=1690630099633836032, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.798 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.799 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099633836032(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), D(String), 2(String), 4(Integer), 00(String), 2023-08-13 15:43:20.798(Timestamp), 2023-08-13 15:43:20.798(Timestamp)
2023-08-13 15:43:20.833 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.833 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.834 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.834 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1857027000, id=1690630099784830976, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.834 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.835 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099784830976(Long), 2023-08-13(Date), 01(String), 2(Integer), 01(String), F(String), 2(String), 5(Integer), 00(String), 2023-08-13 15:43:20.833(Timestamp), 2023-08-13 15:43:20.833(Timestamp)
2023-08-13 15:43:20.861 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.862 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.862 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.862 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1455728988, id=1690630099902271488, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.863 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.863 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630099902271488(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), A(String), 2(String), 6(Integer), 00(String), 2023-08-13 15:43:20.862(Timestamp), 2023-08-13 15:43:20.862(Timestamp)
2023-08-13 15:43:20.886 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.886 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.887 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.887 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1992705721, id=1690630100007129088, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.887 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.888 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100007129088(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), B(String), 2(String), 7(Integer), 00(String), 2023-08-13 15:43:20.886(Timestamp), 2023-08-13 15:43:20.886(Timestamp)
2023-08-13 15:43:20.911 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.912 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.912 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.912 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1933770327, id=1690630100111986688, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.913 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.913 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100111986688(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), C(String), 2(String), 8(Integer), 00(String), 2023-08-13 15:43:20.912(Timestamp), 2023-08-13 15:43:20.912(Timestamp)
2023-08-13 15:43:20.939 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.940 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.940 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.940 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 2021769779, id=1690630100229427200, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=D, seatType=2, carriageSeatIndex=9, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.941 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.941 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100229427200(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), D(String), 2(String), 9(Integer), 00(String), 2023-08-13 15:43:20.94(Timestamp), 2023-08-13 15:43:20.94(Timestamp)
2023-08-13 15:43:20.964 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.965 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.965 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.965 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1700351943, id=1690630100334284800, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.966 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.966 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100334284800(Long), 2023-08-13(Date), 01(String), 2(Integer), 02(String), F(String), 2(String), 10(Integer), 00(String), 2023-08-13 15:43:20.965(Timestamp), 2023-08-13 15:43:20.965(Timestamp)
2023-08-13 15:43:20.990 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:20.990 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.990 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:20.991 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 449105451, id=1690630100439142400, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=00, createTime=2023-08-13 15:43:20, updateTime=2023-08-13 15:43:20]
2023-08-13 15:43:20.991 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:20.991 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100439142400(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), A(String), 2(String), 11(Integer), 00(String), 2023-08-13 15:43:20.99(Timestamp), 2023-08-13 15:43:20.99(Timestamp)
2023-08-13 15:43:21.019 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.019 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.019 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.020 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1508036840, id=1690630100560777216, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=B, seatType=2, carriageSeatIndex=12, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.020 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.020 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100560777216(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), B(String), 2(String), 12(Integer), 00(String), 2023-08-13 15:43:21.019(Timestamp), 2023-08-13 15:43:21.019(Timestamp)
2023-08-13 15:43:21.046 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.047 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.047 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.048 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 435890616, id=1690630100678217728, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.048 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.048 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100678217728(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), C(String), 2(String), 13(Integer), 00(String), 2023-08-13 15:43:21.047(Timestamp), 2023-08-13 15:43:21.047(Timestamp)
2023-08-13 15:43:21.072 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.072 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.073 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.073 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1961713700, id=1690630100787269632, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.074 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.074 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100787269632(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), D(String), 2(String), 14(Integer), 00(String), 2023-08-13 15:43:21.072(Timestamp), 2023-08-13 15:43:21.072(Timestamp)
2023-08-13 15:43:21.096 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.096 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.097 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.097 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 27916334, id=1690630100887932928, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=F, seatType=2, carriageSeatIndex=15, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.097 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.098 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630100887932928(Long), 2023-08-13(Date), 01(String), 2(Integer), 03(String), F(String), 2(String), 15(Integer), 00(String), 2023-08-13 15:43:21.097(Timestamp), 2023-08-13 15:43:21.097(Timestamp)
2023-08-13 15:43:21.127 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.127 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.128 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.129 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 420196406, id=1690630101017956352, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=A, seatType=2, carriageSeatIndex=16, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.129 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.130 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101017956352(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), A(String), 2(String), 16(Integer), 00(String), 2023-08-13 15:43:21.128(Timestamp), 2023-08-13 15:43:21.128(Timestamp)
2023-08-13 15:43:21.156 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.156 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.157 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.157 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1806986584, id=1690630101139591168, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=B, seatType=2, carriageSeatIndex=17, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.157 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.158 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101139591168(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), B(String), 2(String), 17(Integer), 00(String), 2023-08-13 15:43:21.156(Timestamp), 2023-08-13 15:43:21.156(Timestamp)
2023-08-13 15:43:21.181 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.181 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.181 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.182 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1772132172, id=1690630101240254464, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=C, seatType=2, carriageSeatIndex=18, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.182 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.183 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101240254464(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), C(String), 2(String), 18(Integer), 00(String), 2023-08-13 15:43:21.181(Timestamp), 2023-08-13 15:43:21.181(Timestamp)
2023-08-13 15:43:21.207 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.208 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.208 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.208 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 274678561, id=1690630101353500672, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=D, seatType=2, carriageSeatIndex=19, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.209 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.210 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101353500672(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), D(String), 2(String), 19(Integer), 00(String), 2023-08-13 15:43:21.208(Timestamp), 2023-08-13 15:43:21.208(Timestamp)
2023-08-13 15:43:21.246 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.247 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.247 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.247 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 551398739, id=1690630101517078528, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=F, seatType=2, carriageSeatIndex=20, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.248 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.248 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101517078528(Long), 2023-08-13(Date), 01(String), 2(Integer), 04(String), F(String), 2(String), 20(Integer), 00(String), 2023-08-13 15:43:21.247(Timestamp), 2023-08-13 15:43:21.247(Timestamp)
2023-08-13 15:43:21.280 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.280 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.281 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.281 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1534584455, id=1690630101659684864, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=A, seatType=2, carriageSeatIndex=21, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.282 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.282 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101659684864(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), A(String), 2(String), 21(Integer), 00(String), 2023-08-13 15:43:21.281(Timestamp), 2023-08-13 15:43:21.281(Timestamp)
2023-08-13 15:43:21.313 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.314 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.314 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.314 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 166864610, id=1690630101798096896, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=B, seatType=2, carriageSeatIndex=22, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.314 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.315 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101798096896(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), B(String), 2(String), 22(Integer), 00(String), 2023-08-13 15:43:21.314(Timestamp), 2023-08-13 15:43:21.314(Timestamp)
2023-08-13 15:43:21.338 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.338 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.339 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.339 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 59657979, id=1690630101902954496, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=C, seatType=2, carriageSeatIndex=23, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.340 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.340 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630101902954496(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), C(String), 2(String), 23(Integer), 00(String), 2023-08-13 15:43:21.339(Timestamp), 2023-08-13 15:43:21.339(Timestamp)
2023-08-13 15:43:21.365 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.365 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.366 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.366 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 440062227, id=1690630102016200704, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=D, seatType=2, carriageSeatIndex=24, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.367 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.367 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630102016200704(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), D(String), 2(String), 24(Integer), 00(String), 2023-08-13 15:43:21.366(Timestamp), 2023-08-13 15:43:21.366(Timestamp)
2023-08-13 15:43:21.399 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.399 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.400 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.400 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainSeat [Hash = 1112018801, id=1690630102158807040, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=F, seatType=2, carriageSeatIndex=25, sell=00, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.400 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.401 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630102158807040(Long), 2023-08-13(Date), 01(String), 2(Integer), 05(String), F(String), 2(String), 25(Integer), 00(String), 2023-08-13 15:43:21.4(Timestamp), 2023-08-13 15:43:21.4(Timestamp)
2023-08-13 15:43:21.430 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.431 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-13 15:43:21.431 INFO  com.jktickets.service.DailyTrainSeatService       :142  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的座位信息结束
2023-08-13 15:43:21.468 INFO  com.jktickets.service.DailyTrainTicketService     :154  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的余票信息开始
2023-08-13 15:43:21.469 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-13 15:43:21.469 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5bd59be
2023-08-13 15:43:21.471 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from daily_train_ticket WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:21.471 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:21.505 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691912598994xle  [0;39m <==    Updates: 3
2023-08-13 15:43:21.505 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-13 15:43:21.506 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:21.506 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.TrainStationExample@3c6a0b90
2023-08-13 15:43:21.507 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-13 15:43:21.507 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:21.520 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-13 15:43:21.521 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-13 15:43:21.522 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-13 15:43:21.522 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691912598994xle  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-13 15:43:21.523 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691912598994xle  [0;39m <==      Total: 3
2023-08-13 15:43:21.523 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-13 15:43:21.525 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.525 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@191fb0a1
2023-08-13 15:43:21.526 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.526 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:43:21.541 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.541 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 32
2023-08-13 15:43:21.542 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.542 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.542 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.543 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1760e4df
2023-08-13 15:43:21.544 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.544 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:43:21.557 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.558 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 25
2023-08-13 15:43:21.558 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.558 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.558 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.558 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2827ee96
2023-08-13 15:43:21.559 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.560 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:43:21.572 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.573 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.573 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.573 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.573 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.574 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3f3c9575
2023-08-13 15:43:21.574 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.575 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:43:21.591 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.591 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.591 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.592 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.596 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.597 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainTicket [Hash = 1984210302, id=1690630102678900736, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 22:14:58 CST 1970, endIndex=1, ydz=32, ydzPrice=0.48, edz=25, edzPrice=0.36, rw=-1, rwPrice=0.72, yw=-1, ywPrice=0.60, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.597 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.598 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630102678900736(Long), 2023-08-13(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 1(Integer), 32(Integer), 0.48(BigDecimal), 25(Integer), 0.36(BigDecimal), -1(Integer), 0.72(BigDecimal), -1(Integer), 0.60(BigDecimal), 2023-08-13 15:43:21.524(Timestamp), 2023-08-13 15:43:21.524(Timestamp)
2023-08-13 15:43:21.640 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.641 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.641 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.641 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@65b31652
2023-08-13 15:43:21.642 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.643 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:43:21.657 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.658 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 32
2023-08-13 15:43:21.658 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.658 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.659 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.659 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2f916708
2023-08-13 15:43:21.660 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.660 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:43:21.673 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.674 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 25
2023-08-13 15:43:21.674 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.674 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.674 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.675 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@be40b03
2023-08-13 15:43:21.675 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.676 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:43:21.691 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.692 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.692 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.692 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.692 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.692 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@71ba963f
2023-08-13 15:43:21.693 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.693 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:43:21.709 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.710 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.710 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.711 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.711 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.711 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainTicket [Hash = 13229725, id=1690630103169634304, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.76, edz=25, edzPrice=4.32, rw=-1, rwPrice=8.64, yw=-1, ywPrice=7.20, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.712 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.713 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630103169634304(Long), 2023-08-13(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.76(BigDecimal), 25(Integer), 4.32(BigDecimal), -1(Integer), 8.64(BigDecimal), -1(Integer), 7.20(BigDecimal), 2023-08-13 15:43:21.524(Timestamp), 2023-08-13 15:43:21.524(Timestamp)
2023-08-13 15:43:21.775 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.776 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.776 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.776 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4828a671
2023-08-13 15:43:21.777 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.777 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 1(String)
2023-08-13 15:43:21.790 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.791 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 32
2023-08-13 15:43:21.791 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.791 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.792 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.792 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5e7a0bfc
2023-08-13 15:43:21.793 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.793 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 2(String)
2023-08-13 15:43:21.842 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.842 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 25
2023-08-13 15:43:21.842 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.842 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.842 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.842 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@8458908
2023-08-13 15:43:21.843 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.843 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 3(String)
2023-08-13 15:43:21.856 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.856 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.857 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.857 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.857 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.857 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5eade573
2023-08-13 15:43:21.858 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-13 15:43:21.859 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String), 4(String)
2023-08-13 15:43:21.873 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:21.873 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 0
2023-08-13 15:43:21.873 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:21.873 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.873 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.874 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: DailyTrainTicket [Hash = 1646809742, id=1690630103735865344, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:21.874 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-13 15:43:21.875 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630103735865344(Long), 2023-08-13(Date), 01(String), 温州(String), wenzhou(String), 22:15:03(Time), 1(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.28(BigDecimal), 25(Integer), 3.96(BigDecimal), -1(Integer), 7.92(BigDecimal), -1(Integer), 6.60(BigDecimal), 2023-08-13 15:43:21.524(Timestamp), 2023-08-13 15:43:21.524(Timestamp)
2023-08-13 15:43:21.903 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:21.903 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-13 15:43:21.903 INFO  com.jktickets.service.DailyTrainTicketService     :222  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的余票信息结束
2023-08-13 15:43:21.934 INFO  com.jktickets.service.SkTokenService              :50   [32m1691912598994xle  [0;39m 删除日期[2023-08-13] 车次[01] 的令牌记录
2023-08-13 15:43:21.939 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.SkTokenMapper.deleteByExample(SkTokenExample))
2023-08-13 15:43:21.939 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.SkTokenExample@4b80ffb4
2023-08-13 15:43:21.946 DEBUG c.jktickets.mapper.SkTokenMapper.deleteByExample  :137  [32m1691912598994xle  [0;39m ==>  Preparing: delete from sk_token WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:21.947 DEBUG c.jktickets.mapper.SkTokenMapper.deleteByExample  :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:21.972 DEBUG c.jktickets.mapper.SkTokenMapper.deleteByExample  :137  [32m1691912598994xle  [0;39m <==    Updates: 0
2023-08-13 15:43:21.973 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.SkTokenMapper.deleteByExample(SkTokenExample))
2023-08-13 15:43:21.974 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:21.975 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4d963852
2023-08-13 15:43:21.976 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? )
2023-08-13 15:43:21.977 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m ==> Parameters: 2023-08-13(Date), 01(String)
2023-08-13 15:43:22.006 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:22.007 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691912598994xle  [0;39m <==        Row: 57
2023-08-13 15:43:22.008 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:22.009 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-13 15:43:22.009 INFO  com.jktickets.service.SkTokenService              :64   [32m1691912598994xle  [0;39m 车次[01] 座位数:57
2023-08-13 15:43:22.010 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainStationMapper.countByExample(DailyTrainStationExample))
2023-08-13 15:43:22.010 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: com.jktickets.domain.DailyTrainStationExample@47a590e6
2023-08-13 15:43:22.013 DEBUG c.j.mapper.DailyTrainStationMapper.countByExample :137  [32m1691912598994xle  [0;39m ==>  Preparing: select count(*) from daily_train_station WHERE ( train_code = ? )
2023-08-13 15:43:22.015 DEBUG c.j.mapper.DailyTrainStationMapper.countByExample :137  [32m1691912598994xle  [0;39m ==> Parameters: 01(String)
2023-08-13 15:43:22.030 TRACE c.j.mapper.DailyTrainStationMapper.countByExample :143  [32m1691912598994xle  [0;39m <==    Columns: count(*)
2023-08-13 15:43:22.030 TRACE c.j.mapper.DailyTrainStationMapper.countByExample :143  [32m1691912598994xle  [0;39m <==        Row: 26
2023-08-13 15:43:22.031 DEBUG c.j.mapper.DailyTrainStationMapper.countByExample :137  [32m1691912598994xle  [0;39m <==      Total: 1
2023-08-13 15:43:22.031 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainStationMapper.countByExample(DailyTrainStationExample))
2023-08-13 15:43:22.031 INFO  com.jktickets.service.SkTokenService              :67   [32m1691912598994xle  [0;39m 车次[01] 到站数:57
2023-08-13 15:43:22.031 INFO  com.jktickets.service.SkTokenService              :72   [32m1691912598994xle  [0;39m 车次[01] 初始生成令牌:1111
2023-08-13 15:43:22.031 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912598994xle  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.SkTokenMapper.insert(SkToken))
2023-08-13 15:43:22.032 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912598994xle  [0;39m 参数值: SkToken [Hash = 275651758, id=1690630104566337536, date=Sun Aug 13 00:00:00 CST 2023, trainCode=01, count=1111, createTime=2023-08-13 15:43:21, updateTime=2023-08-13 15:43:21]
2023-08-13 15:43:22.032 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691912598994xle  [0;39m ==>  Preparing: insert into sk_token (id, `date`, train_code, `count`, create_time, update_time ) values (?, ?, ?, ?, ?, ? )
2023-08-13 15:43:22.033 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691912598994xle  [0;39m ==> Parameters: 1690630104566337536(Long), 2023-08-13(Date), 01(String), 1111(Integer), 2023-08-13 15:43:21.974(Timestamp), 2023-08-13 15:43:21.974(Timestamp)
2023-08-13 15:43:22.066 DEBUG com.jktickets.mapper.SkTokenMapper.insert         :137  [32m1691912598994xle  [0;39m <==    Updates: 1
2023-08-13 15:43:22.066 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912598994xle  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.SkTokenMapper.insert(SkToken))
2023-08-13 15:43:22.067 INFO  com.jktickets.service.DailyTrainService           :183  [32m1691912598994xle  [0;39m 生成日期【2023-08-13】车次【01】的信息结束
2023-08-13 15:43:22.067 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912598994xle  [0;39m 返回结果: {"code":0,"message":"","result":"生成每日火车成功","success":true}
2023-08-13 15:43:22.067 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912598994xle  [0;39m ------------- 结束 耗时：3069 ms -------------
2023-08-13 15:43:22.171 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912602171816  [0;39m ------------- 开始 -------------
2023-08-13 15:43:22.171 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912602171816  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-13 15:43:22.171 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912602171816  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-13 15:43:22.172 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912602171816  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:22.172 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912602171816  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:43:22.172 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912602171816  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:43:22.172 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912602171816  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@5e0dd7ae
2023-08-13 15:43:22.175 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912602171816  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-13 15:43:22.175 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912602171816  [0;39m ==> Parameters: 
2023-08-13 15:43:22.191 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912602171816  [0;39m <==    Columns: count(0)
2023-08-13 15:43:22.191 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691912602171816  [0;39m <==        Row: 9
2023-08-13 15:43:22.192 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691912602171816  [0;39m <==      Total: 1
2023-08-13 15:43:22.192 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912602171816  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-13 15:43:22.192 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912602171816  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:43:22.235 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-13 15:43:22.236 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1690630092738400256, 2023-08-13, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-13 15:43:19.146, 2023-08-13 15:43:19.146
2023-08-13 15:43:22.237 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1689272446911385600, 2023-08-09, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-09 21:48:31.164, 2023-08-09 21:48:31.164
2023-08-13 15:43:22.237 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1688913089266847744, 2023-08-08, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-08 22:00:33.578, 2023-08-08 22:00:33.578
2023-08-13 15:43:22.238 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1688105537453035520, 2023-08-06, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-06 16:31:38.270, 2023-08-06 16:31:38.270
2023-08-13 15:43:22.240 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1687827556604186624, 2023-08-05, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-05 22:07:02.461, 2023-08-05 22:07:02.461
2023-08-13 15:43:22.242 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-13 15:43:22.247 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-13 15:43:22.249 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-13 15:43:22.250 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691912602171816  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-13 15:43:22.251 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691912602171816  [0;39m <==      Total: 9
2023-08-13 15:43:22.251 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912602171816  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-13 15:43:22.252 INFO  com.jktickets.service.DailyTrainService           :105  [32m1691912602171816  [0;39m 总行数：9
2023-08-13 15:43:22.252 INFO  com.jktickets.service.DailyTrainService           :106  [32m1691912602171816  [0;39m 总页数：1
2023-08-13 15:43:22.259 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912602171816  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1691912599146,"date":1691856000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1690630092738400256,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691912599146},{"code":"01","createTime":1691588911164,"date":1691510400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1689272446911385600,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691588911164},{"code":"01","createTime":1691503233578,"date":1691424000000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688913089266847744,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691503233578},{"code":"01","createTime":1691310698270,"date":1691251200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1688105537453035520,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691310698270},{"code":"01","createTime":1691244422461,"date":1691164800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1687827556604186624,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691244422461},{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":9},"success":true}
2023-08-13 15:43:22.259 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912602171816  [0;39m ------------- 结束 耗时：88 ms -------------
2023-08-13 15:43:25.703 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912605697e29  [0;39m ------------- 开始 -------------
2023-08-13 15:43:25.704 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912605697e29  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:43:25.704 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912605697e29  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:43:25.705 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912605697e29  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:43:25.708 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912605697e29  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:43:25.709 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912605697e29  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:43:25.709 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912605697e29  [0;39m 参数值: com.jktickets.domain.SkTokenExample@2a9f49c
2023-08-13 15:43:25.727 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912605697e29  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:43:25.728 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912605697e29  [0;39m ==> Parameters: 
2023-08-13 15:43:25.740 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912605697e29  [0;39m <==    Columns: count(0)
2023-08-13 15:43:25.741 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912605697e29  [0;39m <==        Row: 2
2023-08-13 15:43:25.741 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912605697e29  [0;39m <==      Total: 1
2023-08-13 15:43:25.742 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912605697e29  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:43:25.743 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912605697e29  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:43:25.760 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912605697e29  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:43:25.761 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912605697e29  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 15:43:25.763 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912605697e29  [0;39m <==        Row: 1690630104566337536, 2023-08-13, 01, 1111, 2023-08-13 15:43:21.974, 2023-08-13 15:43:21.974
2023-08-13 15:43:25.764 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912605697e29  [0;39m <==      Total: 2
2023-08-13 15:43:25.764 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912605697e29  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:43:25.765 INFO  com.jktickets.service.SkTokenService              :122  [32m1691912605697e29  [0;39m 总行数：2
2023-08-13 15:43:25.765 INFO  com.jktickets.service.SkTokenService              :123  [32m1691912605697e29  [0;39m 总页数：1
2023-08-13 15:43:25.769 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912605697e29  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887},{"count":1111,"createTime":1691912601974,"date":1691856000000,"id":1690630104566337536,"trainCode":"01","updateTime":1691912601974}],"total":2},"success":true}
2023-08-13 15:43:25.770 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912605697e29  [0;39m ------------- 结束 耗时：67 ms -------------
2023-08-13 15:44:35.392 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912675392382  [0;39m ------------- 开始 -------------
2023-08-13 15:44:35.393 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912675392382  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:44:35.393 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912675392382  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:44:35.393 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912675392382  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:44:35.393 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912675392382  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:44:35.393 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912675392382  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:44:35.394 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912675392382  [0;39m 参数值: com.jktickets.domain.SkTokenExample@1a29be2e
2023-08-13 15:44:35.408 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912675392382  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:44:35.408 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912675392382  [0;39m ==> Parameters: 
2023-08-13 15:44:35.421 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912675392382  [0;39m <==    Columns: count(0)
2023-08-13 15:44:35.422 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912675392382  [0;39m <==        Row: 2
2023-08-13 15:44:35.422 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912675392382  [0;39m <==      Total: 1
2023-08-13 15:44:35.422 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912675392382  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:44:35.423 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912675392382  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:44:35.449 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912675392382  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:44:35.449 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912675392382  [0;39m <==        Row: 1690569647734263808, 2023-08-13, 123, 111, 2023-08-13 11:43:07.887, 2023-08-13 11:43:07.887
2023-08-13 15:44:35.450 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912675392382  [0;39m <==        Row: 1690630104566337536, 2023-08-13, 01, 1111, 2023-08-13 15:43:21.974, 2023-08-13 15:43:21.974
2023-08-13 15:44:35.450 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912675392382  [0;39m <==      Total: 2
2023-08-13 15:44:35.450 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912675392382  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:44:35.450 INFO  com.jktickets.service.SkTokenService              :122  [32m1691912675392382  [0;39m 总行数：2
2023-08-13 15:44:35.450 INFO  com.jktickets.service.SkTokenService              :123  [32m1691912675392382  [0;39m 总页数：1
2023-08-13 15:44:35.451 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912675392382  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":111,"createTime":1691898187887,"date":1691856000000,"id":1690569647734263808,"trainCode":"123","updateTime":1691898187887},{"count":1111,"createTime":1691912601974,"date":1691856000000,"id":1690630104566337536,"trainCode":"01","updateTime":1691912601974}],"total":2},"success":true}
2023-08-13 15:44:35.451 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912675392382  [0;39m ------------- 结束 耗时：59 ms -------------
2023-08-13 15:44:42.474 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912682473loy  [0;39m ------------- 开始 -------------
2023-08-13 15:44:42.474 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912682473loy  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/delete/1690569647734263808 DELETE
2023-08-13 15:44:42.475 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912682473loy  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.deleteById
2023-08-13 15:44:42.475 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912682473loy  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:44:42.475 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912682473loy  [0;39m 请求参数: [1690569647734263808]
2023-08-13 15:44:42.475 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912682473loy  [0;39m 执行SQL:  deleteByPrimaryKey | execution(int com.jktickets.mapper.SkTokenMapper.deleteByPrimaryKey(Long))
2023-08-13 15:44:42.476 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912682473loy  [0;39m 参数值: 1690569647734263808
2023-08-13 15:44:42.488 DEBUG c.j.mapper.SkTokenMapper.deleteByPrimaryKey       :137  [32m1691912682473loy  [0;39m ==>  Preparing: delete from sk_token where id = ?
2023-08-13 15:44:42.489 DEBUG c.j.mapper.SkTokenMapper.deleteByPrimaryKey       :137  [32m1691912682473loy  [0;39m ==> Parameters: 1690569647734263808(Long)
2023-08-13 15:44:42.514 DEBUG c.j.mapper.SkTokenMapper.deleteByPrimaryKey       :137  [32m1691912682473loy  [0;39m <==    Updates: 1
2023-08-13 15:44:42.514 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912682473loy  [0;39m SQL执行完成: deleteByPrimaryKey | execution(int com.jktickets.mapper.SkTokenMapper.deleteByPrimaryKey(Long))
2023-08-13 15:44:42.514 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912682473loy  [0;39m 返回结果: {"code":0,"message":"","result":"删除SkToken成功","success":true}
2023-08-13 15:44:42.515 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912682473loy  [0;39m ------------- 结束 耗时：41 ms -------------
2023-08-13 15:44:42.568 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169191268256743l  [0;39m ------------- 开始 -------------
2023-08-13 15:44:42.568 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169191268256743l  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:44:42.569 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169191268256743l  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:44:42.569 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169191268256743l  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:44:42.569 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169191268256743l  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:44:42.569 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169191268256743l  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:44:42.570 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169191268256743l  [0;39m 参数值: com.jktickets.domain.SkTokenExample@23e077f2
2023-08-13 15:44:42.583 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169191268256743l  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:44:42.583 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169191268256743l  [0;39m ==> Parameters: 
2023-08-13 15:44:42.595 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m169191268256743l  [0;39m <==    Columns: count(0)
2023-08-13 15:44:42.595 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m169191268256743l  [0;39m <==        Row: 1
2023-08-13 15:44:42.596 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m169191268256743l  [0;39m <==      Total: 1
2023-08-13 15:44:42.596 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m169191268256743l  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:44:42.596 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m169191268256743l  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:44:42.608 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m169191268256743l  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:44:42.609 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m169191268256743l  [0;39m <==        Row: 1690630104566337536, 2023-08-13, 01, 1111, 2023-08-13 15:43:21.974, 2023-08-13 15:43:21.974
2023-08-13 15:44:42.609 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m169191268256743l  [0;39m <==      Total: 1
2023-08-13 15:44:42.610 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169191268256743l  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:44:42.610 INFO  com.jktickets.service.SkTokenService              :122  [32m169191268256743l  [0;39m 总行数：1
2023-08-13 15:44:42.610 INFO  com.jktickets.service.SkTokenService              :123  [32m169191268256743l  [0;39m 总页数：1
2023-08-13 15:44:42.610 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169191268256743l  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":1111,"createTime":1691912601974,"date":1691856000000,"id":1690630104566337536,"trainCode":"01","updateTime":1691912601974}],"total":1},"success":true}
2023-08-13 15:44:42.610 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169191268256743l  [0;39m ------------- 结束 耗时：42 ms -------------
2023-08-13 15:45:02.597 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912702597d5g  [0;39m ------------- 开始 -------------
2023-08-13 15:45:02.598 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912702597d5g  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:45:02.598 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912702597d5g  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:45:02.598 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912702597d5g  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:45:02.599 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912702597d5g  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:45:02.599 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912702597d5g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:45:02.599 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912702597d5g  [0;39m 参数值: com.jktickets.domain.SkTokenExample@2ac566d3
2023-08-13 15:45:02.614 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912702597d5g  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:45:02.614 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912702597d5g  [0;39m ==> Parameters: 
2023-08-13 15:45:02.626 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912702597d5g  [0;39m <==    Columns: count(0)
2023-08-13 15:45:02.627 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912702597d5g  [0;39m <==        Row: 1
2023-08-13 15:45:02.627 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912702597d5g  [0;39m <==      Total: 1
2023-08-13 15:45:02.628 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912702597d5g  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:45:02.628 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912702597d5g  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:45:02.646 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912702597d5g  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:45:02.647 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912702597d5g  [0;39m <==        Row: 1690630104566337536, 2023-08-13, 01, 1111, 2023-08-13 15:43:21.974, 2023-08-13 15:43:21.974
2023-08-13 15:45:02.647 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912702597d5g  [0;39m <==      Total: 1
2023-08-13 15:45:02.648 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912702597d5g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:45:02.648 INFO  com.jktickets.service.SkTokenService              :122  [32m1691912702597d5g  [0;39m 总行数：1
2023-08-13 15:45:02.648 INFO  com.jktickets.service.SkTokenService              :123  [32m1691912702597d5g  [0;39m 总页数：1
2023-08-13 15:45:02.649 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912702597d5g  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":1111,"createTime":1691912601974,"date":1691856000000,"id":1690630104566337536,"trainCode":"01","updateTime":1691912601974}],"total":1},"success":true}
2023-08-13 15:45:02.649 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912702597d5g  [0;39m ------------- 结束 耗时：52 ms -------------
2023-08-13 15:45:07.860 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691912707860tgr  [0;39m ------------- 开始 -------------
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691912707860tgr  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/skToken/queryList GET
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691912707860tgr  [0;39m 类名方法: com.jktickets.controller.admin.SkTokenAdminController.querySkTokenList
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691912707860tgr  [0;39m 远程地址: 192.168.0.102
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691912707860tgr  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691912707860tgr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:45:07.861 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691912707860tgr  [0;39m 参数值: com.jktickets.domain.SkTokenExample@69b40459
2023-08-13 15:45:07.877 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912707860tgr  [0;39m ==>  Preparing: SELECT count(0) FROM sk_token
2023-08-13 15:45:07.878 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912707860tgr  [0;39m ==> Parameters: 
2023-08-13 15:45:07.890 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912707860tgr  [0;39m <==    Columns: count(0)
2023-08-13 15:45:07.890 TRACE c.j.mapper.SkTokenMapper.selectByExample_COUNT    :143  [32m1691912707860tgr  [0;39m <==        Row: 1
2023-08-13 15:45:07.890 DEBUG c.j.mapper.SkTokenMapper.selectByExample_COUNT    :137  [32m1691912707860tgr  [0;39m <==      Total: 1
2023-08-13 15:45:07.891 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912707860tgr  [0;39m ==>  Preparing: select id, `date`, train_code, `count`, create_time, update_time from sk_token LIMIT ?
2023-08-13 15:45:07.891 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912707860tgr  [0;39m ==> Parameters: 10(Integer)
2023-08-13 15:45:07.907 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912707860tgr  [0;39m <==    Columns: id, date, train_code, count, create_time, update_time
2023-08-13 15:45:07.908 TRACE c.jktickets.mapper.SkTokenMapper.selectByExample  :143  [32m1691912707860tgr  [0;39m <==        Row: 1690630104566337536, 2023-08-13, 01, 1111, 2023-08-13 15:43:21.974, 2023-08-13 15:43:21.974
2023-08-13 15:45:07.909 DEBUG c.jktickets.mapper.SkTokenMapper.selectByExample  :137  [32m1691912707860tgr  [0;39m <==      Total: 1
2023-08-13 15:45:07.910 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691912707860tgr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.SkTokenMapper.selectByExample(SkTokenExample))
2023-08-13 15:45:07.910 INFO  com.jktickets.service.SkTokenService              :122  [32m1691912707860tgr  [0;39m 总行数：1
2023-08-13 15:45:07.911 INFO  com.jktickets.service.SkTokenService              :123  [32m1691912707860tgr  [0;39m 总页数：1
2023-08-13 15:45:07.911 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691912707860tgr  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"count":1111,"createTime":1691912601974,"date":1691856000000,"id":1690630104566337536,"trainCode":"01","updateTime":1691912601974}],"total":1},"success":true}
2023-08-13 15:45:07.911 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691912707860tgr  [0;39m ------------- 结束 耗时：51 ms -------------
