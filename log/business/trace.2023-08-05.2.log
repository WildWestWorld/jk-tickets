2023-08-05 21:54:05.864 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:05.897 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243629253nlx  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553189989
2023-08-05 21:54:05.897 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243629253nlx  [0;39m [192.168.0.102:8091:7278238012553189989] rollback status: Rollbacked
2023-08-05 21:54:05.898 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243629253nlx  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:05.900 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243629253nlx  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:05.912 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436293526o7  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553189994, branchId:7278238012553190298, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:05.969 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912436293526o7  [0;39m <==    Updates: 3
2023-08-05 21:54:06.203 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912436293526o7  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:06.204 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436293526o7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:06.204 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436293526o7  [0;39m 参数值: ConfirmOrder [Hash = 528433683, id=1687824230118461440, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:06 CST 2023, tickets=null]
2023-08-05 21:54:06.205 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436293526o7  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:06.205 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436293526o7  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:06.204(Timestamp), 1687824230118461440(Long)
2023-08-05 21:54:06.376 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436293526o7  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553189994, branchId:7278238012553190302, lockKeys:confirm_order:1687824230118461440
2023-08-05 21:54:06.413 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436293526o7  [0;39m <==    Updates: 1
2023-08-05 21:54:06.414 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436293526o7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:06.414 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912436293526o7  [0;39m transaction 192.168.0.102:8091:7278238012553189994 will be commit
2023-08-05 21:54:06.487 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912436293526o7  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553189994
2023-08-05 21:54:06.488 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912436293526o7  [0;39m [192.168.0.102:8091:7278238012553189994] commit status: Committed
2023-08-05 21:54:06.489 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912436293526o7  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:06.489 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912436293526o7  [0;39m ------------- 结束 耗时：17134 ms -------------
2023-08-05 21:54:06.729 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553189994', branchId=7278238012553189999, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:06.729 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553189994 7278238012553189999 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:06.730 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:06.780 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553189994', branchId=7278238012553190293, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:06.781 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553189994 7278238012553190293 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:06.781 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:06.799 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553189994', branchId=7278238012553190298, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:06.799 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553189994 7278238012553190298 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:06.799 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:06.858 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553189994', branchId=7278238012553190302, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:06.858 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553189994 7278238012553190302 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:06.858 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:26.726 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243666726d49  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.727 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243666726d49  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.728 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243666726d49  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.729 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243666726d49  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.729 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243666726d49  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.730 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243666726d49  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.730 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243666726d49  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.730 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243666726d49  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.770 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243666726d49  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190326]
2023-08-05 21:54:26.771 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.771 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: ConfirmOrder [Hash = 1996445080, id=1687824386968653824, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.775 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243666775omn  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.776 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243666775omn  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.776 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243666775omn  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.777 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243666775omn  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.777 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243666775omn  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.777 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243666775omn  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.777 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243666775omn  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.777 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243666775omn  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.784 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666726d49  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:26.785 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666726d49  [0;39m ==> Parameters: 1687824386968653824(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.771(Timestamp), 2023-08-05 21:54:26.771(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:26.795 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243666775omn  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190327]
2023-08-05 21:54:26.796 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.796 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: ConfirmOrder [Hash = 1855667313, id=1687824387073511424, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.809 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666775omn  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:26.809 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666775omn  [0;39m ==> Parameters: 1687824387073511424(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.796(Timestamp), 2023-08-05 21:54:26.796(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:26.832 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243666832qin  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.833 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243666832qin  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.833 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243666832qin  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.834 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243666832qin  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.834 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243666832qin  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.834 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243666832qin  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.834 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243666832qin  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.834 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243666832qin  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.848 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243666832qin  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190328]
2023-08-05 21:54:26.848 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.849 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: ConfirmOrder [Hash = 293007914, id=1687824387291615232, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.866 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666832qin  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:26.867 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666832qin  [0;39m ==> Parameters: 1687824387291615232(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.848(Timestamp), 2023-08-05 21:54:26.848(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:26.878 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243666878ls7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.879 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243666878ls7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.879 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243666878ls7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.880 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243666878ls7  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.880 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243666878ls7  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.880 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243666878ls7  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.880 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243666878ls7  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.881 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243666878ls7  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.896 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243666878ls7  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190333]
2023-08-05 21:54:26.896 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666878ls7  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.897 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666878ls7  [0;39m 参数值: ConfirmOrder [Hash = 414242271, id=1687824387492941824, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.909 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666878ls7  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:26.911 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666878ls7  [0;39m ==> Parameters: 1687824387492941824(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.896(Timestamp), 2023-08-05 21:54:26.896(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:26.925 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912436669258wh  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.925 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666726d49  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190326, branchId:7278238012553190330, lockKeys:confirm_order:1687824386968653824
2023-08-05 21:54:26.926 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912436669258wh  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.926 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912436669258wh  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.927 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912436669258wh  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.927 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912436669258wh  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.927 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912436669258wh  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.928 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912436669258wh  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.928 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912436669258wh  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.931 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666775omn  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190327, branchId:7278238012553190332, lockKeys:confirm_order:1687824387073511424
2023-08-05 21:54:26.947 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912436669258wh  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190336]
2023-08-05 21:54:26.948 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436669258wh  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.948 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436669258wh  [0;39m 参数值: ConfirmOrder [Hash = 1514982886, id=1687824387711045632, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.962 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666726d49  [0;39m <==    Updates: 1
2023-08-05 21:54:26.962 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436669258wh  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:26.962 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.963 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:26.963 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@29bef4af
2023-08-05 21:54:26.963 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436669258wh  [0;39m ==> Parameters: 1687824387711045632(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.947(Timestamp), 2023-08-05 21:54:26.947(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:26.964 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666726d49  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:26.965 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666726d49  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:26.971 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666775omn  [0;39m <==    Updates: 1
2023-08-05 21:54:26.971 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.971 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:26.972 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7d2456fe
2023-08-05 21:54:26.973 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666775omn  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:26.973 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666775omn  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:26.975 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243666975jav  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:26.976 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243666975jav  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.976 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243666975jav  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:26.977 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243666975jav  [0;39m ------------- 开始 -------------
2023-08-05 21:54:26.977 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243666975jav  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:26.977 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243666975jav  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:26.977 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243666975jav  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:26.977 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243666975jav  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:26.978 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666726d49  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:26.979 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666726d49  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:26.980 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666726d49  [0;39m <==      Total: 1
2023-08-05 21:54:26.980 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:26.980 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243666726d49  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1688169730, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:26.981 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243666726d49  [0;39m 本次购票没有选座
2023-08-05 21:54:26.981 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:26.981 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@48e27659
2023-08-05 21:54:26.982 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666726d49  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:26.982 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666726d49  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:26.989 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666775omn  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:26.990 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666775omn  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:26.990 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666832qin  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190328, branchId:7278238012553190335, lockKeys:confirm_order:1687824387291615232
2023-08-05 21:54:26.991 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666775omn  [0;39m <==      Total: 1
2023-08-05 21:54:26.991 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:26.991 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243666975jav  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190337]
2023-08-05 21:54:26.992 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243666775omn  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1179098119, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:26.992 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243666775omn  [0;39m 本次购票没有选座
2023-08-05 21:54:26.992 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666975jav  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:26.992 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:26.993 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5021d71a
2023-08-05 21:54:26.993 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666975jav  [0;39m 参数值: ConfirmOrder [Hash = 1171417382, id=1687824387895595008, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:26, updateTime=2023-08-05 21:54:26, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:26.993 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666775omn  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:26.994 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666775omn  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:26.997 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666726d49  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:26.998 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666726d49  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:26.998 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666726d49  [0;39m <==      Total: 1
2023-08-05 21:54:26.999 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:26.999 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243666726d49  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:26.999 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243666726d49  [0;39m 从车厢2选座
2023-08-05 21:54:26.999 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:26.999 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7f432ebf
2023-08-05 21:54:27.000 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666726d49  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.000 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666726d49  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.007 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666975jav  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.008 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666775omn  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.009 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666775omn  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.009 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666975jav  [0;39m ==> Parameters: 1687824387895595008(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:26.992(Timestamp), 2023-08-05 21:54:26.992(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.009 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666775omn  [0;39m <==      Total: 1
2023-08-05 21:54:27.009 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.010 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243666775omn  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.010 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243666775omn  [0;39m 从车厢2选座
2023-08-05 21:54:27.010 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.010 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2340d7d3
2023-08-05 21:54:27.011 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666775omn  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.011 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666775omn  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.012 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.012 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.013 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.013 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.014 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.014 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.015 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 00, 2023-07-28 21:25:45.586, 2023-07-28 21:25:45.586
2023-08-05 21:54:27.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.017 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.017 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.018 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.018 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.019 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.019 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.020 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.021 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.022 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.022 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.023 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.024 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.025 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667025ta9  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.025 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.026 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.026 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667025ta9  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.026 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.026 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667025ta9  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.026 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.027 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.027 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.027 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667025ta9  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.027 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.027 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667025ta9  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.028 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667025ta9  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.028 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667025ta9  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.028 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.028 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.028 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667025ta9  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.028 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666726d49  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.029 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.029 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666726d49  [0;39m <==      Total: 25
2023-08-05 21:54:27.029 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.029 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243666726d49  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.029 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.029 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.029 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.029 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.030 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 00, 2023-07-28 21:25:45.586, 2023-07-28 21:25:45.586
2023-08-05 21:54:27.030 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.030 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.030 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.030 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.030 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.030 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.031 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666832qin  [0;39m <==    Updates: 1
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.031 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666726d49  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.031 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666726d49  [0;39m 无选座
2023-08-05 21:54:27.031 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243666726d49  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.031 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.031 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.032 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243666726d49  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.032 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@12cf1bed
2023-08-05 21:54:27.032 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243666726d49  [0;39m 选中座位
2023-08-05 21:54:27.032 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243666726d49  [0;39m 最终选座:[DailyTrainSeat [Hash = 1000360410, id=1684918064870723584, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.032 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.032 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243666726d49  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190326
2023-08-05 21:54:27.032 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243666726d49  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190326
2023-08-05 21:54:27.032 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666832qin  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.032 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.032 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.032 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: DailyTrainSeat [Hash = 309162512, id=1684918064870723584, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.033 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666832qin  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.033 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.033 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.034 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.034 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.032(Timestamp), 1684918064870723584(Long)
2023-08-05 21:54:27.034 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.035 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.035 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.036 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.036 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.037 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.037 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.037 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.038 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.039 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.039 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666775omn  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.039 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666775omn  [0;39m <==      Total: 25
2023-08-05 21:54:27.040 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243666775omn  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.040 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666775omn  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666775omn  [0;39m 无选座
2023-08-05 21:54:27.041 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243666775omn  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.042 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243666775omn  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.042 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243666775omn  [0;39m 选中座位
2023-08-05 21:54:27.042 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243666775omn  [0;39m 最终选座:[DailyTrainSeat [Hash = 131745078, id=1684918064870723584, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.042 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243666775omn  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190327
2023-08-05 21:54:27.042 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243666775omn  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190327
2023-08-05 21:54:27.042 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.042 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: DailyTrainSeat [Hash = 1729471043, id=1684918064870723584, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.043 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.043 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.042(Timestamp), 1684918064870723584(Long)
2023-08-05 21:54:27.046 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666832qin  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.046 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666832qin  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.047 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666832qin  [0;39m <==      Total: 1
2023-08-05 21:54:27.047 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.047 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667025ta9  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190340]
2023-08-05 21:54:27.048 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243666832qin  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1774227106, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.048 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667025ta9  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.048 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243666832qin  [0;39m 本次购票没有选座
2023-08-05 21:54:27.048 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667025ta9  [0;39m 参数值: ConfirmOrder [Hash = 425536676, id=1687824388130476032, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.048 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.048 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2f4f2206
2023-08-05 21:54:27.049 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666832qin  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.049 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666832qin  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.058 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666878ls7  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190333, branchId:7278238012553190339, lockKeys:confirm_order:1687824387492941824
2023-08-05 21:54:27.060 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667025ta9  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.061 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667025ta9  [0;39m ==> Parameters: 1687824388130476032(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.048(Timestamp), 2023-08-05 21:54:27.048(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.063 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666832qin  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.063 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666832qin  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.064 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666832qin  [0;39m <==      Total: 1
2023-08-05 21:54:27.064 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.064 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243666832qin  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.064 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243666832qin  [0;39m 从车厢2选座
2023-08-05 21:54:27.064 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.065 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5c7272c9
2023-08-05 21:54:27.065 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666832qin  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.066 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666832qin  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.075 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667075q1o  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.076 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667075q1o  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.076 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667075q1o  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.078 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667075q1o  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.078 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.078 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667075q1o  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.078 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667075q1o  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.079 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667075q1o  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.079 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667075q1o  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.079 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.080 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.080 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.081 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.081 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.082 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.082 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 00, 2023-07-28 21:25:45.586, 2023-07-28 21:25:45.586
2023-08-05 21:54:27.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.084 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.084 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.086 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.086 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.087 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.089 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.089 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.090 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.091 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.092 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666832qin  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.092 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666832qin  [0;39m <==      Total: 25
2023-08-05 21:54:27.092 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.092 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243666832qin  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.092 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.093 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.094 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667075q1o  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190343]
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666832qin  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666832qin  [0;39m 无选座
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243666832qin  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.094 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667075q1o  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243666832qin  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.094 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666878ls7  [0;39m <==    Updates: 1
2023-08-05 21:54:27.094 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667075q1o  [0;39m 参数值: ConfirmOrder [Hash = 28172385, id=1687824388323414016, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.094 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243666832qin  [0;39m 选中座位
2023-08-05 21:54:27.095 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666878ls7  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.095 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243666832qin  [0;39m 最终选座:[DailyTrainSeat [Hash = 1738737994, id=1684918064870723584, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.095 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243666832qin  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190328
2023-08-05 21:54:27.095 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666878ls7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.095 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243666832qin  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190328
2023-08-05 21:54:27.095 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666878ls7  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@453a1a8a
2023-08-05 21:54:27.095 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.096 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: DailyTrainSeat [Hash = 140136211, id=1684918064870723584, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.096 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666878ls7  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.096 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.096 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666878ls7  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.097 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.095(Timestamp), 1684918064870723584(Long)
2023-08-05 21:54:27.100 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436669258wh  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190336, branchId:7278238012553190342, lockKeys:confirm_order:1687824387711045632
2023-08-05 21:54:27.110 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667075q1o  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.110 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666878ls7  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.111 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667075q1o  [0;39m ==> Parameters: 1687824388323414016(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.094(Timestamp), 2023-08-05 21:54:27.094(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.111 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.111 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666878ls7  [0;39m <==      Total: 1
2023-08-05 21:54:27.111 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666878ls7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.112 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243666878ls7  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1577966010, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.112 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243666878ls7  [0;39m 本次购票没有选座
2023-08-05 21:54:27.114 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666878ls7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.114 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666878ls7  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5d2e3e4c
2023-08-05 21:54:27.116 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666878ls7  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.117 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666878ls7  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.126 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912436671256n4  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.126 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912436671256n4  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.126 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912436671256n4  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.127 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912436671256n4  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.127 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912436671256n4  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.127 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912436671256n4  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.127 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912436671256n4  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.128 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912436671256n4  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.134 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666878ls7  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.135 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.137 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666878ls7  [0;39m <==      Total: 1
2023-08-05 21:54:27.137 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666878ls7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.138 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243666878ls7  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.138 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243666878ls7  [0;39m 从车厢2选座
2023-08-05 21:54:27.138 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666878ls7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.138 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666878ls7  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@73c21175
2023-08-05 21:54:27.140 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666878ls7  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.140 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666878ls7  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.142 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912436671256n4  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190350]
2023-08-05 21:54:27.142 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.142 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: ConfirmOrder [Hash = 457664985, id=1687824388524740608, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.147 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436669258wh  [0;39m <==    Updates: 1
2023-08-05 21:54:27.147 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436669258wh  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.148 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436669258wh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.148 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436669258wh  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@62924dc7
2023-08-05 21:54:27.148 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436669258wh  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.149 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436669258wh  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.165 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436671256n4  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.165 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.166 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.166 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436671256n4  [0;39m ==> Parameters: 1687824388524740608(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.142(Timestamp), 2023-08-05 21:54:27.142(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.167 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.167 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.169 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436669258wh  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 00, 2023-07-28 21:25:45.586, 2023-07-28 21:25:45.586
2023-08-05 21:54:27.170 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436669258wh  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.170 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666975jav  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190337, branchId:7278238012553190345, lockKeys:confirm_order:1687824387895595008
2023-08-05 21:54:27.170 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.170 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436669258wh  [0;39m <==      Total: 1
2023-08-05 21:54:27.171 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436669258wh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.171 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.171 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912436669258wh  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1221478597, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.172 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912436669258wh  [0;39m 本次购票没有选座
2023-08-05 21:54:27.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.172 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436669258wh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.172 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436669258wh  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7ab16c31
2023-08-05 21:54:27.173 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.173 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436669258wh  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.174 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.174 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436669258wh  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.175 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.176 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.177 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.178 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667178kop  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.178 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.179 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667178kop  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.179 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667178kop  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.179 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.180 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.181 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667178kop  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.181 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667178kop  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.181 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.182 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667178kop  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.182 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667178kop  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.182 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667178kop  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.183 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.183 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.184 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.185 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.186 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666878ls7  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.187 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666878ls7  [0;39m <==      Total: 25
2023-08-05 21:54:27.187 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666878ls7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243666878ls7  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.188 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666878ls7  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666878ls7  [0;39m 无选座
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243666878ls7  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.189 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436669258wh  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243666878ls7  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.189 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243666878ls7  [0;39m 选中座位
2023-08-05 21:54:27.190 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243666878ls7  [0;39m 最终选座:[DailyTrainSeat [Hash = 1725603466, id=1684918064870723584, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.190 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436669258wh  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.190 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243666878ls7  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190333
2023-08-05 21:54:27.191 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436669258wh  [0;39m <==      Total: 1
2023-08-05 21:54:27.191 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243666878ls7  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190333
2023-08-05 21:54:27.191 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666878ls7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.191 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436669258wh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.191 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666878ls7  [0;39m 参数值: DailyTrainSeat [Hash = 1982112318, id=1684918064870723584, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.191 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912436669258wh  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.191 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912436669258wh  [0;39m 从车厢2选座
2023-08-05 21:54:27.191 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436669258wh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.193 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436669258wh  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@73a06342
2023-08-05 21:54:27.193 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667025ta9  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190340, branchId:7278238012553190349, lockKeys:confirm_order:1687824388130476032
2023-08-05 21:54:27.193 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436669258wh  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.193 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666878ls7  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.193 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666726d49  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190326, branchId:7278238012553190347, lockKeys:daily_train_seat:1684918064870723584
2023-08-05 21:54:27.193 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436669258wh  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.195 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666878ls7  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.191(Timestamp), 1684918064870723584(Long)
2023-08-05 21:54:27.201 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667178kop  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190353]
2023-08-05 21:54:27.202 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667178kop  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.202 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667178kop  [0;39m 参数值: ConfirmOrder [Hash = 1389480936, id=1687824388776398848, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.210 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.211 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.211 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.211 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.212 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.212 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.213 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.213 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 00, 2023-07-28 21:25:45.586, 2023-07-28 21:25:45.586
2023-08-05 21:54:27.213 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.214 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.214 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.215 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243666975jav  [0;39m <==    Updates: 1
2023-08-05 21:54:27.215 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667178kop  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.215 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.215 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666975jav  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.215 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666975jav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.215 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.216 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666975jav  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@662d2235
2023-08-05 21:54:27.216 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667178kop  [0;39m ==> Parameters: 1687824388776398848(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.202(Timestamp), 2023-08-05 21:54:27.202(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.216 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.217 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.217 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666975jav  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.217 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.218 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666975jav  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.218 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.219 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.220 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.221 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.222 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.223 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.224 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.224 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.225 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.225 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436669258wh  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.225 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436669258wh  [0;39m <==      Total: 25
2023-08-05 21:54:27.225 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436669258wh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912436669258wh  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.226 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436669258wh  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436669258wh  [0;39m 无选座
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912436669258wh  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912436669258wh  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912436669258wh  [0;39m 选中座位
2023-08-05 21:54:27.227 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912436669258wh  [0;39m 最终选座:[DailyTrainSeat [Hash = 951302244, id=1684918064870723584, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.227 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m16912436669258wh  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190336
2023-08-05 21:54:27.228 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912436669258wh  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190336
2023-08-05 21:54:27.228 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436669258wh  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.228 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436669258wh  [0;39m 参数值: DailyTrainSeat [Hash = 1564284661, id=1684918064870723584, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.228 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m <==    Updates: 1
2023-08-05 21:54:27.228 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436669258wh  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.229 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.229 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243666726d49  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:27.229 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436669258wh  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.228(Timestamp), 1684918064870723584(Long)
2023-08-05 21:54:27.230 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243666726d49  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:27.230 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666726d49  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:27.230 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666726d49  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:27.235 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667025ta9  [0;39m <==    Updates: 1
2023-08-05 21:54:27.235 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666975jav  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.236 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667025ta9  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.236 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667025ta9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.236 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667025ta9  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7babad81
2023-08-05 21:54:27.236 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243666975jav  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.237 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243666975jav  [0;39m <==      Total: 1
2023-08-05 21:54:27.237 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667025ta9  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.238 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666975jav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.238 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667025ta9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.238 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243666975jav  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1016261555, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.239 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243666975jav  [0;39m 本次购票没有选座
2023-08-05 21:54:27.239 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666975jav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.239 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666975jav  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1ba5c7a0
2023-08-05 21:54:27.240 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667075q1o  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190343, branchId:7278238012553190352, lockKeys:confirm_order:1687824388323414016
2023-08-05 21:54:27.240 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666975jav  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.241 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666975jav  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.254 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667025ta9  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.255 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.255 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667025ta9  [0;39m <==      Total: 1
2023-08-05 21:54:27.256 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667025ta9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.256 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667025ta9  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1556861954, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.256 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667025ta9  [0;39m 本次购票没有选座
2023-08-05 21:54:27.257 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667257nap  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.257 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667025ta9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.257 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666975jav  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.257 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667025ta9  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4b7dde6e
2023-08-05 21:54:27.257 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667257nap  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.257 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243666975jav  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.258 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667257nap  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.258 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667025ta9  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.258 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243666975jav  [0;39m <==      Total: 1
2023-08-05 21:54:27.258 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667025ta9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.258 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666975jav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.259 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243666975jav  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.259 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667257nap  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.259 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243666975jav  [0;39m 从车厢2选座
2023-08-05 21:54:27.259 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667257nap  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.260 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666975jav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.260 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667257nap  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.260 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666975jav  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@22d80ac0
2023-08-05 21:54:27.260 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667257nap  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.261 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667257nap  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.261 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666975jav  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.262 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666975jav  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.271 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667025ta9  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.272 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.273 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667025ta9  [0;39m <==      Total: 1
2023-08-05 21:54:27.273 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667025ta9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.273 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667025ta9  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.274 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667025ta9  [0;39m 从车厢2选座
2023-08-05 21:54:27.274 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667025ta9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.274 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667025ta9  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@12f2ba2
2023-08-05 21:54:27.275 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667025ta9  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.275 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667257nap  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190356]
2023-08-05 21:54:27.276 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667025ta9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.276 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.276 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: ConfirmOrder [Hash = 635714007, id=1687824389086777344, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.278 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912436672781v5  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.278 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.278 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912436672781v5  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.279 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912436672781v5  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.279 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667075q1o  [0;39m <==    Updates: 1
2023-08-05 21:54:27.279 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.279 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667075q1o  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.279 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667257nap  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.280 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667075q1o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.280 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.280 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667075q1o  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@392b19bc
2023-08-05 21:54:27.280 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912436672781v5  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.280 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.280 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912436672781v5  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.281 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667257nap  [0;39m ==> Parameters: 1687824389086777344(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.276(Timestamp), 2023-08-05 21:54:27.276(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.281 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912436672781v5  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.281 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912436672781v5  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.281 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.282 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912436672781v5  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.282 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.283 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.284 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:27.285 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.285 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.285 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.286 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.286 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.287 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.287 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.288 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.288 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.288 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.289 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.289 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.290 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.290 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.290 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.291 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.293 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.293 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.293 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.293 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243666975jav  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.294 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243666975jav  [0;39m <==      Total: 25
2023-08-05 21:54:27.294 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.294 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666975jav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.294 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667075q1o  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.295 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243666975jav  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.295 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.295 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:27.295 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.295 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667075q1o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.296 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.296 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.296 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.296 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.296 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.296 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.296 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.297 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.297 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912436672781v5  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190361]
2023-08-05 21:54:27.297 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.297 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.297 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.297 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436672781v5  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.297 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.297 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436672781v5  [0;39m 参数值: ConfirmOrder [Hash = 303846180, id=1687824389174857728, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.297 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.298 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.298 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.298 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243666975jav  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.298 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243666975jav  [0;39m 无选座
2023-08-05 21:54:27.299 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243666975jav  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.299 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.299 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243666975jav  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.299 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243666975jav  [0;39m 选中座位
2023-08-05 21:54:27.299 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243666975jav  [0;39m 最终选座:[DailyTrainSeat [Hash = 3632133, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.299 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.300 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243666975jav  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190337
2023-08-05 21:54:27.300 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243666975jav  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190337
2023-08-05 21:54:27.300 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.300 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666975jav  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.300 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666975jav  [0;39m 参数值: DailyTrainSeat [Hash = 1036369093, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.301 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.301 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.301 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.302 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.302 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.303 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.303 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.304 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.304 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.304 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.305 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667025ta9  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.305 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667025ta9  [0;39m <==      Total: 25
2023-08-05 21:54:27.305 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667025ta9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.305 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667025ta9  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.305 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436672781v5  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.305 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.306 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436672781v5  [0;39m ==> Parameters: 1687824389174857728(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.297(Timestamp), 2023-08-05 21:54:27.297(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.306 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.307 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.307 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.307 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.307 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.307 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667025ta9  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667025ta9  [0;39m 无选座
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667025ta9  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667025ta9  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667025ta9  [0;39m 选中座位
2023-08-05 21:54:27.308 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667025ta9  [0;39m 最终选座:[DailyTrainSeat [Hash = 644723961, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.308 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667025ta9  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190340
2023-08-05 21:54:27.309 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667025ta9  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190340
2023-08-05 21:54:27.309 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667025ta9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.309 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667025ta9  [0;39m 参数值: DailyTrainSeat [Hash = 785385628, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.311 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667075q1o  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.311 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.311 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667075q1o  [0;39m <==      Total: 1
2023-08-05 21:54:27.312 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667075q1o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.312 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667075q1o  [0;39m 查出余票记录:DailyTrainTicket [Hash = 319166999, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.312 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666975jav  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.312 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667075q1o  [0;39m 本次购票没有选座
2023-08-05 21:54:27.312 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667075q1o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.312 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667075q1o  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1e4ec8ba
2023-08-05 21:54:27.312 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666975jav  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.3(Timestamp), 1684918064971386880(Long)
2023-08-05 21:54:27.318 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436671256n4  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190350, branchId:7278238012553190355, lockKeys:confirm_order:1687824388524740608
2023-08-05 21:54:27.326 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912436673265bc  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.326 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912436673265bc  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.327 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912436673265bc  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.328 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912436673265bc  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.328 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912436673265bc  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.328 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912436673265bc  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.329 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912436673265bc  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.329 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912436673265bc  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.342 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667178kop  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190353, branchId:7278238012553190360, lockKeys:confirm_order:1687824388776398848
2023-08-05 21:54:27.343 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912436673265bc  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190364]
2023-08-05 21:54:27.343 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436673265bc  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.344 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436673265bc  [0;39m 参数值: ConfirmOrder [Hash = 482685884, id=1687824389367795712, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.358 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436671256n4  [0;39m <==    Updates: 1
2023-08-05 21:54:27.359 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.359 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.359 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2e011d3d
2023-08-05 21:54:27.360 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436671256n4  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.361 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436671256n4  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.378 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667378pe9  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.378 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667378pe9  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.378 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667378pe9  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.380 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667378pe9  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.380 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667378pe9  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.380 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667378pe9  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.381 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667378pe9  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.381 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667378pe9  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.381 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436671256n4  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.382 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436671256n4  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.383 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436671256n4  [0;39m <==      Total: 1
2023-08-05 21:54:27.383 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.383 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667075q1o  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.384 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912436671256n4  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1394480114, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.384 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912436671256n4  [0;39m 本次购票没有选座
2023-08-05 21:54:27.384 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667075q1o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.384 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.385 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@18d931a5
2023-08-05 21:54:27.395 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667178kop  [0;39m <==    Updates: 1
2023-08-05 21:54:27.396 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667178kop  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.396 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436673265bc  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.396 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667378pe9  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190367]
2023-08-05 21:54:27.396 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667178kop  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.397 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667178kop  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3ee20677
2023-08-05 21:54:27.401 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.401 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436673265bc  [0;39m ==> Parameters: 1687824389367795712(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.343(Timestamp), 2023-08-05 21:54:27.343(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.401 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: ConfirmOrder [Hash = 1649502831, id=1687824389594288128, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.426 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667426uom  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.427 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667426uom  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.427 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667075q1o  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.427 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667426uom  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.427 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.428 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667075q1o  [0;39m <==      Total: 1
2023-08-05 21:54:27.428 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667426uom  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.428 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667075q1o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.428 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667025ta9  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.429 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667426uom  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.429 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667075q1o  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.429 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667426uom  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.429 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667075q1o  [0;39m 从车厢2选座
2023-08-05 21:54:27.429 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667426uom  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.429 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667025ta9  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.309(Timestamp), 1684918064971386880(Long)
2023-08-05 21:54:27.429 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667075q1o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.430 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667426uom  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.430 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667075q1o  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@38776667
2023-08-05 21:54:27.443 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667426uom  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190372]
2023-08-05 21:54:27.444 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.444 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: ConfirmOrder [Hash = 1849718146, id=1687824389791420416, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.467 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666726d49  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190326, branchId:7278238012553190363, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:27.473 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667473p3o  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.474 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667473p3o  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.474 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667473p3o  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.475 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667473p3o  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.475 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667473p3o  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.476 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667473p3o  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.476 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667473p3o  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.476 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667257nap  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190356, branchId:7278238012553190366, lockKeys:confirm_order:1687824389086777344
2023-08-05 21:54:27.476 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667473p3o  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.478 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436672781v5  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190361, branchId:7278238012553190369, lockKeys:confirm_order:1687824389174857728
2023-08-05 21:54:27.497 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667473p3o  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190375]
2023-08-05 21:54:27.497 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.498 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: ConfirmOrder [Hash = 417596207, id=1687824390013718528, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.507 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666726d49  [0;39m <==    Updates: 3
2023-08-05 21:54:27.507 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436671256n4  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.508 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436671256n4  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.512 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667257nap  [0;39m <==    Updates: 1
2023-08-05 21:54:27.512 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666975jav  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190337, branchId:7278238012553190374, lockKeys:daily_train_seat:1684918064971386880
2023-08-05 21:54:27.512 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.512 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667178kop  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.513 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.513 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2e426a8c
2023-08-05 21:54:27.513 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667178kop  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.516 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436672781v5  [0;39m <==    Updates: 1
2023-08-05 21:54:27.516 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436672781v5  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.516 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667378pe9  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.516 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436672781v5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.516 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436672781v5  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@61bb480d
2023-08-05 21:54:27.522 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436671256n4  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.523 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667378pe9  [0;39m ==> Parameters: 1687824389594288128(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.397(Timestamp), 2023-08-05 21:54:27.397(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.523 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436671256n4  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.524 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436671256n4  [0;39m <==      Total: 1
2023-08-05 21:54:27.525 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.525 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667075q1o  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.525 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912436671256n4  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.525 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912436671256n4  [0;39m 从车厢2选座
2023-08-05 21:54:27.525 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.525 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6201b6b0
2023-08-05 21:54:27.525 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667075q1o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.526 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667178kop  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.527 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667178kop  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.528 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667178kop  [0;39m <==      Total: 1
2023-08-05 21:54:27.529 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667178kop  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.529 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667426uom  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.529 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124366752974g  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.529 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667178kop  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1559062243, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.530 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667178kop  [0;39m 本次购票没有选座
2023-08-05 21:54:27.530 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124366752974g  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.530 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124366752974g  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.530 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667426uom  [0;39m ==> Parameters: 1687824389791420416(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.444(Timestamp), 2023-08-05 21:54:27.444(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.530 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667178kop  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.530 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667178kop  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3e45a8b3
2023-08-05 21:54:27.531 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124366752974g  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.531 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124366752974g  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.531 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124366752974g  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.531 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124366752974g  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.532 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124366752974g  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.543 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.543 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.544 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.545 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.545 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.545 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.546 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.546 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:27.547 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:54:27.547 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436673265bc  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190364, branchId:7278238012553190377, lockKeys:confirm_order:1687824389367795712
2023-08-05 21:54:27.548 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.548 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.548 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.549 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.549 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.550 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.550 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.550 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m169124366752974g  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190378]
2023-08-05 21:54:27.551 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.551 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.551 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: ConfirmOrder [Hash = 1631228697, id=1687824390240210944, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.551 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.552 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.552 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.553 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.553 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.554 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.554 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.554 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.555 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667075q1o  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.555 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667075q1o  [0;39m <==      Total: 25
2023-08-05 21:54:27.556 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667075q1o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.556 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667473p3o  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.556 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667075q1o  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.556 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.556 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.556 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.557 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.557 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.557 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667473p3o  [0;39m ==> Parameters: 1687824390013718528(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.497(Timestamp), 2023-08-05 21:54:27.497(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.557 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.558 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.558 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.558 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.558 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666975jav  [0;39m <==    Updates: 1
2023-08-05 21:54:27.558 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.559 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666975jav  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.559 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.559 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667257nap  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.559 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243666975jav  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:27.559 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.559 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243666975jav  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:27.559 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.559 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667257nap  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.559 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667075q1o  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.559 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667075q1o  [0;39m 无选座
2023-08-05 21:54:27.560 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667075q1o  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.560 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667075q1o  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.560 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667075q1o  [0;39m 选中座位
2023-08-05 21:54:27.560 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667075q1o  [0;39m 最终选座:[DailyTrainSeat [Hash = 1935742238, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.560 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667075q1o  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190343
2023-08-05 21:54:27.560 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667075q1o  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190343
2023-08-05 21:54:27.560 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667075q1o  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.561 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667075q1o  [0;39m 参数值: DailyTrainSeat [Hash = 1111004960, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.575 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667575rzg  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.576 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667575rzg  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.576 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667575rzg  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.578 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667575rzg  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.578 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667575rzg  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.578 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667257nap  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.578 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667575rzg  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.578 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667575rzg  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.579 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667575rzg  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.578 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667257nap  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.579 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667257nap  [0;39m <==      Total: 1
2023-08-05 21:54:27.579 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.579 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436672781v5  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.580 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667257nap  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1182169884, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.580 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667257nap  [0;39m 本次购票没有选座
2023-08-05 21:54:27.580 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436672781v5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.580 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.580 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@37a547d8
2023-08-05 21:54:27.589 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912436673265bc  [0;39m <==    Updates: 1
2023-08-05 21:54:27.589 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436673265bc  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.590 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436671256n4  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.590 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436673265bc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.590 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436673265bc  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3242ed1d
2023-08-05 21:54:27.590 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436671256n4  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.595 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436672781v5  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.596 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667575rzg  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190381]
2023-08-05 21:54:27.596 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436672781v5  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.596 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.596 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436672781v5  [0;39m <==      Total: 1
2023-08-05 21:54:27.597 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: ConfirmOrder [Hash = 1048999525, id=1687824390428954624, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.597 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436672781v5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.597 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667178kop  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.597 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912436672781v5  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1909020410, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.597 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912436672781v5  [0;39m 本次购票没有选座
2023-08-05 21:54:27.597 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667178kop  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.597 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436672781v5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.598 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436672781v5  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@15805114
2023-08-05 21:54:27.603 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.604 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.604 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.605 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.606 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.606 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.606 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.607 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:27.608 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:27.608 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.609 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.609 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.610 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.610 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.611 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.611 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.611 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.612 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.612 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667178kop  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.612 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.613 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.613 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667178kop  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.613 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667178kop  [0;39m <==      Total: 1
2023-08-05 21:54:27.613 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.613 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667178kop  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.613 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667178kop  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.613 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124366752974g  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.613 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.614 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667178kop  [0;39m 从车厢2选座
2023-08-05 21:54:27.614 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667178kop  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.614 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667178kop  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@13403502
2023-08-05 21:54:27.614 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.615 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124366752974g  [0;39m ==> Parameters: 1687824390240210944(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.551(Timestamp), 2023-08-05 21:54:27.551(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.615 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.616 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.617 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436671256n4  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.618 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436671256n4  [0;39m <==      Total: 25
2023-08-05 21:54:27.618 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.618 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666975jav  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:27.618 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912436671256n4  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.618 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.618 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.618 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.618 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666975jav  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:27.619 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.619 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.619 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.619 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.619 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.620 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.621 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436671256n4  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.621 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436671256n4  [0;39m 无选座
2023-08-05 21:54:27.621 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912436671256n4  [0;39m 座位9在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.621 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912436671256n4  [0;39m 座位9被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.621 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912436671256n4  [0;39m 选中座位
2023-08-05 21:54:27.622 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912436671256n4  [0;39m 最终选座:[DailyTrainSeat [Hash = 279379209, id=1684918065067855872, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=D, seatType=2, carriageSeatIndex=9, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.622 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m16912436671256n4  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190350
2023-08-05 21:54:27.622 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912436671256n4  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190350
2023-08-05 21:54:27.622 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.622 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: DailyTrainSeat [Hash = 390958308, id=1684918065067855872, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.626 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667626lq8  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.627 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667626lq8  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.627 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667626lq8  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.628 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667626lq8  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.628 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667626lq8  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.628 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667626lq8  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.628 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667626lq8  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.628 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667626lq8  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.647 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667626lq8  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190392]
2023-08-05 21:54:27.647 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667626lq8  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.647 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667626lq8  [0;39m 参数值: ConfirmOrder [Hash = 2112852452, id=1687824390642864128, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.666 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667426uom  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190372, branchId:7278238012553190389, lockKeys:confirm_order:1687824389791420416
2023-08-05 21:54:27.676 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243667676ko5  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:54:27.676 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243667676ko5  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.676 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243667676ko5  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:54:27.677 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243667676ko5  [0;39m ------------- 开始 -------------
2023-08-05 21:54:27.678 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243667676ko5  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:54:27.678 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243667676ko5  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:54:27.678 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243667676ko5  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:54:27.678 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243667676ko5  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:54:27.680 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667378pe9  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190367, branchId:7278238012553190385, lockKeys:confirm_order:1687824389594288128
2023-08-05 21:54:27.691 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667473p3o  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190375, branchId:7278238012553190391, lockKeys:confirm_order:1687824390013718528
2023-08-05 21:54:27.697 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243667676ko5  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553190393]
2023-08-05 21:54:27.697 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.698 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: ConfirmOrder [Hash = 649289140, id=1687824390852579328, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:54:27, updateTime=2023-08-05 21:54:27, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:54:27.706 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667426uom  [0;39m <==    Updates: 1
2023-08-05 21:54:27.706 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.706 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667075q1o  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.707 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.707 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2da0a99a
2023-08-05 21:54:27.707 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667075q1o  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.56(Timestamp), 1684918064971386880(Long)
2023-08-05 21:54:27.714 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243666726d49  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:27.715 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666726d49  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:27.715 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666726d49  [0;39m 参数值: ConfirmOrder [Hash = 1434802512, id=1687824386968653824, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023, tickets=null]
2023-08-05 21:54:27.727 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667378pe9  [0;39m <==    Updates: 1
2023-08-05 21:54:27.727 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.727 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667257nap  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.728 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.728 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5a5bbdcc
2023-08-05 21:54:27.728 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667257nap  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.731 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667473p3o  [0;39m <==    Updates: 1
2023-08-05 21:54:27.732 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.732 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436673265bc  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.732 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.732 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@421a6b25
2023-08-05 21:54:27.732 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436673265bc  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.742 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667257nap  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.742 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667257nap  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.743 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667257nap  [0;39m <==      Total: 1
2023-08-05 21:54:27.743 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.743 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667575rzg  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.743 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667257nap  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.743 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667257nap  [0;39m 从车厢2选座
2023-08-05 21:54:27.744 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.744 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5a6ba341
2023-08-05 21:54:27.744 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667575rzg  [0;39m ==> Parameters: 1687824390428954624(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.596(Timestamp), 2023-08-05 21:54:27.596(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.747 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436673265bc  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.749 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912436673265bc  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.749 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912436673265bc  [0;39m <==      Total: 1
2023-08-05 21:54:27.749 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436673265bc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.750 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436672781v5  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:27.750 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912436673265bc  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2131150760, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.750 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912436673265bc  [0;39m 本次购票没有选座
2023-08-05 21:54:27.750 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436672781v5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:27.750 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436673265bc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.751 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436673265bc  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3618d11
2023-08-05 21:54:27.762 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124366752974g  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190378, branchId:7278238012553190397, lockKeys:confirm_order:1687824390240210944
2023-08-05 21:54:27.766 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436672781v5  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:27.767 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436672781v5  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:27.767 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436672781v5  [0;39m <==      Total: 1
2023-08-05 21:54:27.768 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436672781v5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.768 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667178kop  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:27.768 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912436672781v5  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:27.768 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912436672781v5  [0;39m 从车厢2选座
2023-08-05 21:54:27.768 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667178kop  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:27.768 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436672781v5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.768 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436672781v5  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5ed4d778
2023-08-05 21:54:27.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:27.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:27.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:27.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:27.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:27.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:27.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:27.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:27.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:27.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 00, 2023-07-28 21:25:45.632, 2023-07-28 21:25:45.632
2023-08-05 21:54:27.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:27.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:27.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:27.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:27.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:27.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:27.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:27.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:27.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:27.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:27.790 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:27.791 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:27.791 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:27.792 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:27.793 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:27.794 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667178kop  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:27.794 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667178kop  [0;39m <==      Total: 25
2023-08-05 21:54:27.794 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667178kop  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667178kop  [0;39m 车厢2的座位数:25
2023-08-05 21:54:27.795 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.795 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.622(Timestamp), 1684918065067855872(Long)
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.795 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667178kop  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667178kop  [0;39m 无选座
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667178kop  [0;39m 座位9在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:27.796 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667178kop  [0;39m 座位9被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:27.797 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667178kop  [0;39m 选中座位
2023-08-05 21:54:27.797 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667178kop  [0;39m 最终选座:[DailyTrainSeat [Hash = 926857201, id=1684918065067855872, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=D, seatType=2, carriageSeatIndex=9, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:27.797 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667178kop  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190353
2023-08-05 21:54:27.797 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667178kop  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190353
2023-08-05 21:54:27.797 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667178kop  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.797 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667178kop  [0;39m 参数值: DailyTrainSeat [Hash = 1900498676, id=1684918065067855872, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:27 CST 2023]
2023-08-05 21:54:27.811 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124366752974g  [0;39m <==    Updates: 1
2023-08-05 21:54:27.811 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.812 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667626lq8  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.812 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.812 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1fb73ad0
2023-08-05 21:54:27.812 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667626lq8  [0;39m ==> Parameters: 1687824390642864128(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.647(Timestamp), 2023-08-05 21:54:27.647(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.869 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667575rzg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190381, branchId:7278238012553190424, lockKeys:confirm_order:1687824390428954624
2023-08-05 21:54:27.908 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667575rzg  [0;39m <==    Updates: 1
2023-08-05 21:54:27.908 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.908 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667676ko5  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:54:27.909 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.909 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@62434c7a
2023-08-05 21:54:27.909 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667676ko5  [0;39m ==> Parameters: 1687824390852579328(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:54:27.697(Timestamp), 2023-08-05 21:54:27.697(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:54:27.946 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436671256n4  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190350, branchId:7278238012553190432, lockKeys:daily_train_seat:1684918065067855872
2023-08-05 21:54:27.948 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667626lq8  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190392, branchId:7278238012553190434, lockKeys:confirm_order:1687824390642864128
2023-08-05 21:54:27.982 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m <==    Updates: 1
2023-08-05 21:54:27.982 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:27.982 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667426uom  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.982 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912436671256n4  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:27.983 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912436671256n4  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:27.983 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667426uom  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.994 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667626lq8  [0;39m <==    Updates: 1
2023-08-05 21:54:27.995 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667626lq8  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:27.995 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:27.995 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667626lq8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.995 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667626lq8  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4b1297e8
2023-08-05 21:54:27.995 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667426uom  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:27.996 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:27.715(Timestamp), 1687824386968653824(Long)
2023-08-05 21:54:27.996 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667426uom  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:27.997 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667426uom  [0;39m <==      Total: 1
2023-08-05 21:54:27.997 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:27.997 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667378pe9  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:27.998 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667426uom  [0;39m 查出余票记录:DailyTrainTicket [Hash = 222595016, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:27.998 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667426uom  [0;39m 本次购票没有选座
2023-08-05 21:54:27.998 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667378pe9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:27.999 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:27.999 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@446f14f9
2023-08-05 21:54:28.030 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667378pe9  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.031 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.031 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667378pe9  [0;39m <==      Total: 1
2023-08-05 21:54:28.032 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.032 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667473p3o  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:28.032 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667378pe9  [0;39m 查出余票记录:DailyTrainTicket [Hash = 27691430, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.032 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667378pe9  [0;39m 本次购票没有选座
2023-08-05 21:54:28.032 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.032 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667473p3o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:28.032 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@377e6446
2023-08-05 21:54:28.045 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667473p3o  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.046 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.046 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667473p3o  [0;39m <==      Total: 1
2023-08-05 21:54:28.046 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.046 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667257nap  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.046 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667473p3o  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2077921207, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.047 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667473p3o  [0;39m 本次购票没有选座
2023-08-05 21:54:28.047 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667257nap  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.047 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.047 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7e11fcc4
2023-08-05 21:54:28.053 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667676ko5  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190393, branchId:7278238012553190438, lockKeys:confirm_order:1687824390852579328
2023-08-05 21:54:28.059 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.060 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.060 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.061 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.061 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.061 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.062 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.062 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:28.062 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.063 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.063 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:28.064 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.064 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.065 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.065 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.065 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.066 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.066 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.067 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.067 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.067 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.068 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.069 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.069 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.070 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.070 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667257nap  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.071 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667257nap  [0;39m <==      Total: 25
2023-08-05 21:54:28.071 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.071 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667257nap  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.071 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436673265bc  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.071 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.071 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.071 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.071 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436673265bc  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.072 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667257nap  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667257nap  [0;39m 无选座
2023-08-05 21:54:28.073 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667257nap  [0;39m 座位10在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.074 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667257nap  [0;39m 座位10被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.074 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667257nap  [0;39m 选中座位
2023-08-05 21:54:28.074 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667257nap  [0;39m 最终选座:[DailyTrainSeat [Hash = 850822178, id=1684918065168519168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.074 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667257nap  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190356
2023-08-05 21:54:28.074 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667257nap  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190356
2023-08-05 21:54:28.074 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.075 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: DailyTrainSeat [Hash = 1252883651, id=1684918065168519168, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.085 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436673265bc  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.085 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912436673265bc  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.086 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912436673265bc  [0;39m <==      Total: 1
2023-08-05 21:54:28.086 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436673265bc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.086 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912436673265bc  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.086 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436672781v5  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.086 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912436673265bc  [0;39m 从车厢2选座
2023-08-05 21:54:28.086 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436673265bc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.086 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436672781v5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.086 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436673265bc  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@512d772d
2023-08-05 21:54:28.093 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243667676ko5  [0;39m <==    Updates: 1
2023-08-05 21:54:28.093 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:54:28.094 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667178kop  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:28.094 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.094 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@76fa9510
2023-08-05 21:54:28.094 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667178kop  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:27.797(Timestamp), 1684918065067855872(Long)
2023-08-05 21:54:28.110 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.111 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.112 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.112 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.113 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.113 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.114 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.114 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.032
2023-08-05 21:54:28.114 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.115 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.115 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:28.115 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.116 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.117 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.117 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.117 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.118 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.118 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.119 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.119 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.120 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.120 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.121 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.121 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.122 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.122 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436672781v5  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.122 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436672781v5  [0;39m <==      Total: 25
2023-08-05 21:54:28.123 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436672781v5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.123 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124366752974g  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:28.123 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912436672781v5  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.123 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.123 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.123 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.123 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124366752974g  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:28.123 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.124 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.124 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.124 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.124 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436672781v5  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.126 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436672781v5  [0;39m 无选座
2023-08-05 21:54:28.126 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912436672781v5  [0;39m 座位10在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.126 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912436672781v5  [0;39m 座位10被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.126 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912436672781v5  [0;39m 选中座位
2023-08-05 21:54:28.126 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912436672781v5  [0;39m 最终选座:[DailyTrainSeat [Hash = 1913569689, id=1684918065168519168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.126 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m16912436672781v5  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190361
2023-08-05 21:54:28.126 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912436672781v5  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190361
2023-08-05 21:54:28.126 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436672781v5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.126 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436672781v5  [0;39m 参数值: DailyTrainSeat [Hash = 1478531985, id=1684918065168519168, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.137 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124366752974g  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.138 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124366752974g  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.139 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124366752974g  [0;39m <==      Total: 1
2023-08-05 21:54:28.139 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.139 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667575rzg  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:28.140 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124366752974g  [0;39m 查出余票记录:DailyTrainTicket [Hash = 39119029, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.140 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m169124366752974g  [0;39m 本次购票没有选座
2023-08-05 21:54:28.140 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667575rzg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:28.140 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.140 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2eee98cf
2023-08-05 21:54:28.154 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667575rzg  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.155 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.156 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667575rzg  [0;39m <==      Total: 1
2023-08-05 21:54:28.156 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.157 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912436671256n4  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:28.157 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667575rzg  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1571638821, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.157 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667575rzg  [0;39m 本次购票没有选座
2023-08-05 21:54:28.157 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912436671256n4  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:28.157 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.158 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@6bb531f4
2023-08-05 21:54:28.177 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666726d49  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190326, branchId:7278238012553190446, lockKeys:confirm_order:1687824386968653824
2023-08-05 21:54:28.228 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666726d49  [0;39m <==    Updates: 1
2023-08-05 21:54:28.228 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666726d49  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:28.228 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667626lq8  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:28.228 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243666726d49  [0;39m transaction 192.168.0.102:8091:7278238012553190326 will be commit
2023-08-05 21:54:28.229 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667626lq8  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:28.246 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667626lq8  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.247 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.247 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667626lq8  [0;39m <==      Total: 1
2023-08-05 21:54:28.248 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667626lq8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.248 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667426uom  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.248 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667626lq8  [0;39m 查出余票记录:DailyTrainTicket [Hash = 518105537, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.249 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667626lq8  [0;39m 本次购票没有选座
2023-08-05 21:54:28.249 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667426uom  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.249 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667626lq8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.249 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667626lq8  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4ebd71a9
2023-08-05 21:54:28.264 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667426uom  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.265 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667426uom  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.265 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667426uom  [0;39m <==      Total: 1
2023-08-05 21:54:28.265 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.265 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667378pe9  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.265 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667426uom  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.265 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667426uom  [0;39m 从车厢2选座
2023-08-05 21:54:28.266 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.266 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667378pe9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.266 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@63ac25f1
2023-08-05 21:54:28.280 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667378pe9  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.281 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.281 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667378pe9  [0;39m <==      Total: 1
2023-08-05 21:54:28.281 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.281 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667378pe9  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.281 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667473p3o  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.281 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667378pe9  [0;39m 从车厢2选座
2023-08-05 21:54:28.282 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.282 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667473p3o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.282 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2c2f9ae8
2023-08-05 21:54:28.285 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243666726d49  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190326
2023-08-05 21:54:28.285 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243666726d49  [0;39m [192.168.0.102:8091:7278238012553190326] commit status: Committed
2023-08-05 21:54:28.285 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243666726d49  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:28.285 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243666726d49  [0;39m ------------- 结束 耗时：1556 ms -------------
2023-08-05 21:54:28.298 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667473p3o  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.299 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.299 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667473p3o  [0;39m <==      Total: 1
2023-08-05 21:54:28.299 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.299 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667473p3o  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.299 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:28.299 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667473p3o  [0;39m 从车厢2选座
2023-08-05 21:54:28.300 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.300 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2e8e9147
2023-08-05 21:54:28.300 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.074(Timestamp), 1684918065168519168(Long)
2023-08-05 21:54:28.429 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666775omn  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190327, branchId:7278238012553190463, lockKeys:daily_train_seat:1684918064870723584
2023-08-05 21:54:28.430 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436671256n4  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190350, branchId:7278238012553190459, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:28.499 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912436671256n4  [0;39m <==    Updates: 3
2023-08-05 21:54:28.499 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m <==    Updates: 1
2023-08-05 21:54:28.500 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.500 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667676ko5  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:54:28.500 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436673265bc  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.500 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667257nap  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190356, branchId:7278238012553190467, lockKeys:daily_train_seat:1684918065168519168
2023-08-05 21:54:28.500 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243666775omn  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:28.501 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243666775omn  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:28.501 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436673265bc  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.501 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667676ko5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:54:28.519 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667676ko5  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:54:28.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.519 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 12, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:54:28.520 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243667676ko5  [0;39m <==      Total: 1
2023-08-05 21:54:28.520 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.521 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:54:28.521 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436672781v5  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:28.521 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.521 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243667676ko5  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1161627377, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=12, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:54:28.522 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436672781v5  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.126(Timestamp), 1684918065168519168(Long)
2023-08-05 21:54:28.522 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243667676ko5  [0;39m 本次购票没有选座
2023-08-05 21:54:28.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.522 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.522 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4ed69123
2023-08-05 21:54:28.523 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.524 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.525 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:28.526 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.527 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.527 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 00, 2023-07-28 21:25:45.657, 2023-07-28 21:25:45.657
2023-08-05 21:54:28.528 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.528 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.529 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.530 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.531 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.531 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.532 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.532 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.533 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.533 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.534 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.534 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.535 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.535 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.536 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912436673265bc  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.536 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912436673265bc  [0;39m <==      Total: 25
2023-08-05 21:54:28.536 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436673265bc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.537 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912436673265bc  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.537 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124366752974g  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.537 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.537 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.537 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.537 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124366752974g  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.537 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.538 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912436673265bc  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912436673265bc  [0;39m 无选座
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912436673265bc  [0;39m 座位10在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912436673265bc  [0;39m 座位10被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.539 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912436673265bc  [0;39m 选中座位
2023-08-05 21:54:28.540 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912436673265bc  [0;39m 最终选座:[DailyTrainSeat [Hash = 400154152, id=1684918065168519168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.540 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m16912436673265bc  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190364
2023-08-05 21:54:28.540 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912436673265bc  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190364
2023-08-05 21:54:28.540 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436673265bc  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.540 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436673265bc  [0;39m 参数值: DailyTrainSeat [Hash = 1157086012, id=1684918065168519168, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.550 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m <==    Updates: 1
2023-08-05 21:54:28.550 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124366752974g  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.551 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667575rzg  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.551 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.551 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667257nap  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:28.551 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124366752974g  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.552 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667257nap  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:28.552 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667575rzg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.552 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124366752974g  [0;39m <==      Total: 1
2023-08-05 21:54:28.552 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.552 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667626lq8  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.553 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m169124366752974g  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.554 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m169124366752974g  [0;39m 从车厢2选座
2023-08-05 21:54:28.554 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667626lq8  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.554 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.555 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2a202cb
2023-08-05 21:54:28.568 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667575rzg  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.568 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667626lq8  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.569 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.569 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.569 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667575rzg  [0;39m <==      Total: 1
2023-08-05 21:54:28.569 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667626lq8  [0;39m <==      Total: 1
2023-08-05 21:54:28.570 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667626lq8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.570 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.570 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667378pe9  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.570 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667426uom  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.571 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667575rzg  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.571 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667626lq8  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.571 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667626lq8  [0;39m 从车厢2选座
2023-08-05 21:54:28.571 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667575rzg  [0;39m 从车厢2选座
2023-08-05 21:54:28.572 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667426uom  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.572 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667378pe9  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.572 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667626lq8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.572 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.572 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667626lq8  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@51bd6faa
2023-08-05 21:54:28.572 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@27c82c9d
2023-08-05 21:54:28.586 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.587 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.587 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.587 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.588 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.588 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.589 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.589 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.590 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.590 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.590 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.591 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:28.591 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.592 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.592 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.592 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.593 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.593 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:28.594 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:28.594 ERROR io.seata.core.rpc.netty.AbstractNettyRemoting     :309  [32m                  [0;39m 0104
java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at io.seata.core.rpc.processor.client.ClientOnResponseProcessor.process(ClientOnResponseProcessor.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemoting.processMessage(AbstractNettyRemoting.java:307)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$ClientHandler.channelRead(AbstractNettyRemotingClient.java:419)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 21:54:28.594 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.595 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.595 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.595 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.595 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.596 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.596 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:28.597 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.597 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.597 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.597 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.598 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.598 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.599 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.599 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.599 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.599 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.600 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.600 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.601 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.601 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.601 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.601 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.602 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.602 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.602 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.602 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.603 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667378pe9  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.603 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.603 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667378pe9  [0;39m <==      Total: 25
2023-08-05 21:54:28.604 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.604 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.604 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667473p3o  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:28.604 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667378pe9  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.604 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.604 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.604 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.604 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667473p3o  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:28.604 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.605 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.605 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.605 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.605 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.605 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.605 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667426uom  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.605 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.606 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667426uom  [0;39m <==      Total: 25
2023-08-05 21:54:28.606 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.606 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.606 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.606 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.606 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.606 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666775omn  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:28.606 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667426uom  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.607 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666775omn  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:28.607 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667378pe9  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667378pe9  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667378pe9  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.608 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667378pe9  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667378pe9  [0;39m 选中座位
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667378pe9  [0;39m 最终选座:[DailyTrainSeat [Hash = 1567213150, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.609 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667378pe9  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190367
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.609 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667378pe9  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190367
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.609 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.609 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.610 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: DailyTrainSeat [Hash = 228630145, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667426uom  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667426uom  [0;39m 无选座
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667426uom  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667426uom  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667426uom  [0;39m 选中座位
2023-08-05 21:54:28.610 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667426uom  [0;39m 最终选座:[DailyTrainSeat [Hash = 1980471777, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.611 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667426uom  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190372
2023-08-05 21:54:28.611 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667426uom  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190372
2023-08-05 21:54:28.611 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.611 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: DailyTrainSeat [Hash = 1188872598, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.617 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:28.617 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:28.617 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:28.617 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:28.618 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:28.618 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:28.619 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:28.619 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:28.619 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:28.620 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:28.621 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:28.622 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:28.622 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:28.623 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:28.623 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:28.624 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:28.624 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:28.625 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:28.625 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:28.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:28.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:28.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:28.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:28.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:28.628 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:28.629 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667473p3o  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:28.629 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667473p3o  [0;39m <==      Total: 25
2023-08-05 21:54:28.630 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.630 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667473p3o  [0;39m 车厢2的座位数:25
2023-08-05 21:54:28.630 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667676ko5  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:54:28.630 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.630 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.630 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.630 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667676ko5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.631 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.632 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667473p3o  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:28.633 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667473p3o  [0;39m 无选座
2023-08-05 21:54:28.633 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667473p3o  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:28.633 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667473p3o  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:28.633 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667473p3o  [0;39m 选中座位
2023-08-05 21:54:28.633 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667473p3o  [0;39m 最终选座:[DailyTrainSeat [Hash = 1879064382, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:28.633 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667473p3o  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190375
2023-08-05 21:54:28.633 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667473p3o  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190375
2023-08-05 21:54:28.634 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:28.634 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: DailyTrainSeat [Hash = 11045565, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023]
2023-08-05 21:54:28.643 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667676ko5  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:54:28.644 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:54:28.645 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243667676ko5  [0;39m <==      Total: 1
2023-08-05 21:54:28.645 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:54:28.645 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436673265bc  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:28.645 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243667676ko5  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:54:28.645 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243667676ko5  [0;39m 从车厢2选座
2023-08-05 21:54:28.646 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912436673265bc  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.54(Timestamp), 1684918065168519168(Long)
2023-08-05 21:54:28.646 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:28.646 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4867a884
2023-08-05 21:54:28.716 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912436671256n4  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:28.717 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912436671256n4  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:28.717 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912436671256n4  [0;39m 参数值: ConfirmOrder [Hash = 1572245855, id=1687824388524740608, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:28 CST 2023, tickets=null]
2023-08-05 21:54:28.722 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190326', branchId=7278238012553190330, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:28.722 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190326 7278238012553190330 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:28.722 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:28.763 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190326', branchId=7278238012553190347, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:28.763 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190326 7278238012553190347 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:28.763 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:28.781 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190326', branchId=7278238012553190363, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:28.781 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190326 7278238012553190363 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:28.781 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:28.816 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190326', branchId=7278238012553190446, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:28.816 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190326 7278238012553190446 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:28.817 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:30.268 ERROR io.seata.core.rpc.netty.AbstractNettyRemoting     :309  [32m                  [0;39m 0104
java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at io.seata.core.rpc.processor.client.ClientOnResponseProcessor.process(ClientOnResponseProcessor.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemoting.processMessage(AbstractNettyRemoting.java:307)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$ClientHandler.channelRead(AbstractNettyRemotingClient.java:419)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 21:54:32.631 ERROR io.seata.core.rpc.netty.AbstractNettyRemoting     :309  [32m                  [0;39m 0104
java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at io.seata.core.rpc.processor.client.ClientOnResponseProcessor.process(ClientOnResponseProcessor.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemoting.processMessage(AbstractNettyRemoting.java:307)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$ClientHandler.channelRead(AbstractNettyRemotingClient.java:419)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 21:54:35.659 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243667025ta9  [0;39m execute executeAutoCommitTrue error:Global lock wait timeout
io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190340, lockKeys:daily_train_seat:1684918064971386880
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:35.676 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667257nap  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:35.677 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667257nap  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:35.685 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667025ta9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:35.686 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243667025ta9  [0;39m 192.168.0.102:8091:7278238012553190340 rollback in the state Begin
2023-08-05 21:54:35.687 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243667025ta9  [0;39m 保存购票信息失败
org.springframework.dao.QueryTimeoutException: 
### Error updating database.  Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
; Global lock wait timeout
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:116)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190340, lockKeys:daily_train_seat:1684918064971386880
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:35.690 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243667025ta9  [0;39m transaction 192.168.0.102:8091:7278238012553190340 will be rollback
2023-08-05 21:54:35.764 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190340', branchId=7278238012553190349, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:35.764 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190340 7278238012553190349 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:35.943 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243667075q1o  [0;39m execute executeAutoCommitTrue error:Global lock wait timeout
io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190343, lockKeys:daily_train_seat:1684918064971386880
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:35.965 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667075q1o  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:35.965 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124366752974g  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:35.966 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243667075q1o  [0;39m 192.168.0.102:8091:7278238012553190343 rollback in the state Begin
2023-08-05 21:54:35.967 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124366752974g  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:35.967 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243667075q1o  [0;39m 保存购票信息失败
org.springframework.dao.QueryTimeoutException: 
### Error updating database.  Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
; Global lock wait timeout
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:116)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190343, lockKeys:daily_train_seat:1684918064971386880
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:35.969 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243667075q1o  [0;39m transaction 192.168.0.102:8091:7278238012553190343 will be rollback
2023-08-05 21:54:35.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:35.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:35.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:35.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:35.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:35.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:35.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:35.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:35.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:35.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:35.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:35.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:35.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:35.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:35.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:35.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:35.991 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:35.992 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:35.992 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:35.993 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:35.993 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:35.994 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:35.995 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:35.995 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:35.996 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:35.996 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124366752974g  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:35.996 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124366752974g  [0;39m <==      Total: 25
2023-08-05 21:54:35.997 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m169124366752974g  [0;39m 车厢2的座位数:25
2023-08-05 21:54:35.997 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667626lq8  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.997 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.997 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667626lq8  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.998 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:35.999 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124366752974g  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124366752974g  [0;39m 无选座
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m169124366752974g  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m169124366752974g  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:36.000 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m169124366752974g  [0;39m 选中座位
2023-08-05 21:54:36.001 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m169124366752974g  [0;39m 最终选座:[DailyTrainSeat [Hash = 2103746487, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:36.001 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m169124366752974g  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190378
2023-08-05 21:54:36.001 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m169124366752974g  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190378
2023-08-05 21:54:36.001 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.002 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: DailyTrainSeat [Hash = 1069288693, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:36 CST 2023]
2023-08-05 21:54:36.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:36.017 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:36.018 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:36.019 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:36.020 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:36.020 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:36.020 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:36.041 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:36.041 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190343', branchId=7278238012553190352, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:36.042 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:36.043 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:36.044 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:36.042 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190343 7278238012553190352 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:36.045 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:36.046 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:36.047 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:36.047 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:36.048 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:36.048 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:36.050 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:36.051 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:36.051 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:36.051 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:36.052 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:36.053 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:36.054 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:36.054 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:36.054 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667626lq8  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:36.055 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667626lq8  [0;39m <==      Total: 25
2023-08-05 21:54:36.055 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667626lq8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:36.055 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667626lq8  [0;39m 车厢2的座位数:25
2023-08-05 21:54:36.055 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667575rzg  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.056 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667575rzg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.056 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.057 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667626lq8  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.058 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667626lq8  [0;39m 无选座
2023-08-05 21:54:36.059 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667626lq8  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:36.059 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667626lq8  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:36.059 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667626lq8  [0;39m 选中座位
2023-08-05 21:54:36.059 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667626lq8  [0;39m 最终选座:[DailyTrainSeat [Hash = 1729391149, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:36.059 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667626lq8  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190392
2023-08-05 21:54:36.060 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667626lq8  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190392
2023-08-05 21:54:36.060 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667626lq8  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.060 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667626lq8  [0;39m 参数值: DailyTrainSeat [Hash = 237019540, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:36 CST 2023]
2023-08-05 21:54:36.070 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:36.071 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:36.072 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:36.073 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:36.073 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:36.074 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:36.074 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:36.075 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:36.076 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:36.076 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:36.076 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:36.077 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 00, 2023-07-28 21:25:45.681, 2023-07-28 21:25:45.681
2023-08-05 21:54:36.077 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:36.078 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:36.078 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:36.078 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:36.079 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:36.079 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:36.080 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:36.080 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:36.081 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:36.081 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:36.081 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:36.082 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:36.082 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:36.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667575rzg  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:36.083 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667575rzg  [0;39m <==      Total: 25
2023-08-05 21:54:36.083 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:36.083 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667575rzg  [0;39m 车厢2的座位数:25
2023-08-05 21:54:36.083 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:36.083 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.083 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.083 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.084 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.609(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.084 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667575rzg  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667575rzg  [0;39m 无选座
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667575rzg  [0;39m 座位11在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:36.085 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667575rzg  [0;39m 座位11被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:36.086 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667575rzg  [0;39m 选中座位
2023-08-05 21:54:36.086 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667575rzg  [0;39m 最终选座:[DailyTrainSeat [Hash = 1381710662, id=1684918065269182464, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:36.086 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667575rzg  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190381
2023-08-05 21:54:36.086 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667575rzg  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190381
2023-08-05 21:54:36.086 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.086 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: DailyTrainSeat [Hash = 768241625, id=1684918065269182464, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:36 CST 2023]
2023-08-05 21:54:36.290 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667378pe9  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190367, branchId:7278238012553190942, lockKeys:daily_train_seat:1684918065269182464
2023-08-05 21:54:36.341 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m <==    Updates: 1
2023-08-05 21:54:36.342 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.342 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:36.342 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667378pe9  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:36.342 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667378pe9  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:36.343 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.611(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:36.759 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m16912436672781v5  [0;39m execute executeAutoCommitTrue error:Global lock wait timeout
io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190361, lockKeys:daily_train_seat:1684918065168519168
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:36.773 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436672781v5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.773 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:36.773 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m16912436672781v5  [0;39m 192.168.0.102:8091:7278238012553190361 rollback in the state Begin
2023-08-05 21:54:36.774 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:28.634(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:36.774 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m16912436672781v5  [0;39m 保存购票信息失败
org.springframework.dao.QueryTimeoutException: 
### Error updating database.  Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
; Global lock wait timeout
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:116)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190361, lockKeys:daily_train_seat:1684918065168519168
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:36.775 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m16912436672781v5  [0;39m transaction 192.168.0.102:8091:7278238012553190361 will be rollback
2023-08-05 21:54:36.844 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190361', branchId=7278238012553190369, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:36.844 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190361 7278238012553190369 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:36.917 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m16912436673265bc  [0;39m execute executeAutoCommitTrue error:Global lock wait timeout
io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190364, lockKeys:daily_train_seat:1684918065168519168
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:36.932 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436673265bc  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.932 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667676ko5  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:54:36.932 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m16912436673265bc  [0;39m 192.168.0.102:8091:7278238012553190364 rollback in the state Begin
2023-08-05 21:54:36.933 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667676ko5  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:54:36.933 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m16912436673265bc  [0;39m 保存购票信息失败
org.springframework.dao.QueryTimeoutException: 
### Error updating database.  Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
; Global lock wait timeout
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:116)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190364, lockKeys:daily_train_seat:1684918065168519168
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 154 common frames omitted
2023-08-05 21:54:36.935 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m16912436673265bc  [0;39m transaction 192.168.0.102:8091:7278238012553190364 will be rollback
2023-08-05 21:54:36.969 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:54:36.970 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:54:36.971 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:54:36.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:54:36.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:54:36.973 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:54:36.974 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:54:36.975 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.042
2023-08-05 21:54:36.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:54:27.300
2023-08-05 21:54:36.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:54:36.978 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:54:36.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:28.609
2023-08-05 21:54:36.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 00, 2023-07-28 21:25:45.709, 2023-07-28 21:25:45.709
2023-08-05 21:54:36.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:54:36.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:54:36.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:54:36.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:54:36.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:54:36.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:54:36.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:54:36.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:54:36.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:54:36.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:54:36.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:54:36.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:54:36.991 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243667676ko5  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:54:36.991 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243667676ko5  [0;39m <==      Total: 25
2023-08-05 21:54:36.992 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:54:36.992 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243667676ko5  [0;39m 车厢2的座位数:25
2023-08-05 21:54:36.992 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:36.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.993 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.993 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.993 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.993 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:28.717(Timestamp), 1687824388524740608(Long)
2023-08-05 21:54:36.993 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.993 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.995 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.995 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.995 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.995 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.995 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.996 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.996 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.996 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243667676ko5  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:54:36.996 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243667676ko5  [0;39m 无选座
2023-08-05 21:54:36.996 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243667676ko5  [0;39m 座位12在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:54:36.997 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243667676ko5  [0;39m 座位12被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:54:36.997 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243667676ko5  [0;39m 选中座位
2023-08-05 21:54:36.997 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243667676ko5  [0;39m 最终选座:[DailyTrainSeat [Hash = 526774245, id=1684918065386622976, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=B, seatType=2, carriageSeatIndex=12, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:54:36.997 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243667676ko5  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553190393
2023-08-05 21:54:36.997 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243667676ko5  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553190393
2023-08-05 21:54:36.998 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:36.998 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: DailyTrainSeat [Hash = 1164348106, id=1684918065386622976, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:54:36 CST 2023]
2023-08-05 21:54:37.030 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190364', branchId=7278238012553190377, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:37.030 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190364 7278238012553190377 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:37.148 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912436671256n4  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190350, branchId:7278238012553190988, lockKeys:confirm_order:1687824388524740608
2023-08-05 21:54:37.188 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912436671256n4  [0;39m <==    Updates: 1
2023-08-05 21:54:37.189 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436671256n4  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:37.189 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912436671256n4  [0;39m transaction 192.168.0.102:8091:7278238012553190350 will be commit
2023-08-05 21:54:37.258 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912436671256n4  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190350
2023-08-05 21:54:37.258 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912436671256n4  [0;39m [192.168.0.102:8091:7278238012553190350] commit status: Committed
2023-08-05 21:54:37.258 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912436671256n4  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:37.259 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912436671256n4  [0;39m ------------- 结束 耗时：10132 ms -------------
2023-08-05 21:54:37.273 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190340 branch 7278238012553190349, undo_log deleted with GlobalFinished
2023-08-05 21:54:37.285 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190340, branchId:7278238012553190349
2023-08-05 21:54:37.285 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:37.285 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:37.285 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:36.001(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:37.350 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667025ta9  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190340
2023-08-05 21:54:37.350 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243667025ta9  [0;39m [192.168.0.102:8091:7278238012553190340] rollback status: Rollbacked
2023-08-05 21:54:37.351 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243667025ta9  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:37.351 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243667025ta9  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:37.714 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190350', branchId=7278238012553190355, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:37.715 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190350 7278238012553190355 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:37.716 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:37.736 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190350', branchId=7278238012553190432, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:37.737 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190350 7278238012553190432 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:37.738 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:37.759 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190350', branchId=7278238012553190459, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:37.759 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190350 7278238012553190459 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:37.759 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:37.798 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190350', branchId=7278238012553190988, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:37.798 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190350 7278238012553190988 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:37.798 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:43.524 ERROR i.seata.core.rpc.netty.AbstractNettyRemotingClient:176  [32m1691243666975jav  [0;39m wait response error:null ,cost: 15000 ms,ip:192.168.0.102:8091,request:BranchRegisterRequest{xid='192.168.0.102:8091:7278238012553190337', branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', lockKey='daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968', applicationData='null'}
2023-08-05 21:54:43.538 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243666975jav  [0;39m execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy131.updateCountBySell(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:121)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 146 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15000 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 149 common frames omitted
2023-08-05 21:54:43.579 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243666975jav  [0;39m 192.168.0.102:8091:7278238012553190337 rollback in the state Begin
2023-08-05 21:54:43.579 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243666975jav  [0;39m 保存购票信息失败
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\custom\DailyTrainTicketMapperCustom.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: update daily_train_ticket set                                  edz = edz -1                                         where `date`  = ?         and train_code  = ?         and start_index  >= ?         and ? >=start_index         and end_index  >= ?         and ? >=  end_index
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy131.updateCountBySell(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:121)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 113 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190337
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 146 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15000 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 149 common frames omitted
2023-08-05 21:54:43.581 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243666975jav  [0;39m transaction 192.168.0.102:8091:7278238012553190337 will be rollback
2023-08-05 21:54:43.638 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190337', branchId=7278238012553190374, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:43.638 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190337 7278238012553190374 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:43.653 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190343 branch 7278238012553190352, undo_log deleted with GlobalFinished
2023-08-05 21:54:43.668 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190343, branchId:7278238012553190352
2023-08-05 21:54:43.669 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:43.669 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667626lq8  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:43.670 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667626lq8  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:36.06(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:43.699 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667075q1o  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190343
2023-08-05 21:54:43.699 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243667075q1o  [0;39m [192.168.0.102:8091:7278238012553190343] rollback status: Rollbacked
2023-08-05 21:54:43.700 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243667075q1o  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:43.701 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243667075q1o  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:43.749 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666775omn  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190327, branchId:7278238012553191207, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:43.798 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666775omn  [0;39m <==    Updates: 3
2023-08-05 21:54:43.798 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:43.799 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:36.086(Timestamp), 1684918065269182464(Long)
2023-08-05 21:54:44.014 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243666775omn  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:44.014 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666775omn  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:44.014 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666775omn  [0;39m 参数值: ConfirmOrder [Hash = 1873890840, id=1687824387073511424, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:44 CST 2023, tickets=null]
2023-08-05 21:54:44.812 ERROR io.seata.core.rpc.netty.AbstractNettyRemoting     :309  [32m                  [0;39m 0104
java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at io.seata.core.rpc.processor.client.ClientOnResponseProcessor.process(ClientOnResponseProcessor.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemoting.processMessage(AbstractNettyRemoting.java:307)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$ClientHandler.channelRead(AbstractNettyRemotingClient.java:419)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 21:54:45.182 ERROR i.seata.core.rpc.netty.AbstractNettyRemotingClient:176  [32m1691243667178kop  [0;39m wait response error:null ,cost: 15001 ms,ip:192.168.0.102:8091,request:BranchRegisterRequest{xid='192.168.0.102:8091:7278238012553190353', branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', lockKey='daily_train_seat:1684918065067855872', applicationData='null'}
2023-08-05 21:54:45.194 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243667178kop  [0;39m execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15001 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:45.207 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667378pe9  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:45.207 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667178kop  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:45.208 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243667178kop  [0;39m 192.168.0.102:8091:7278238012553190353 rollback in the state Begin
2023-08-05 21:54:45.208 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667378pe9  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:45.208 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243667178kop  [0;39m 保存购票信息失败
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190353
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15001 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:45.209 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243667178kop  [0;39m transaction 192.168.0.102:8091:7278238012553190353 will be rollback
2023-08-05 21:54:45.277 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190353', branchId=7278238012553190360, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:45.277 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190353 7278238012553190360 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:47.547 ERROR i.seata.core.rpc.netty.AbstractNettyRemotingClient:176  [32m16912436669258wh  [0;39m wait response error:null ,cost: 15002 ms,ip:192.168.0.102:8091,request:BranchRegisterRequest{xid='192.168.0.102:8091:7278238012553190336', branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', lockKey='daily_train_seat:1684918064870723584', applicationData='null'}
2023-08-05 21:54:47.561 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m16912436669258wh  [0;39m execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15002 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:47.578 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912436669258wh  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:47.579 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m16912436669258wh  [0;39m 192.168.0.102:8091:7278238012553190336 rollback in the state Begin
2023-08-05 21:54:47.579 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m16912436669258wh  [0;39m 保存购票信息失败
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190336
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15002 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:47.581 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m16912436669258wh  [0;39m transaction 192.168.0.102:8091:7278238012553190336 will be rollback
2023-08-05 21:54:47.634 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190336', branchId=7278238012553190342, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:47.634 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190336 7278238012553190342 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:47.668 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190361 branch 7278238012553190369, undo_log deleted with GlobalFinished
2023-08-05 21:54:47.683 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190361, branchId:7278238012553190369
2023-08-05 21:54:47.683 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:47.683 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:54:47.684 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m ==> Parameters: 01(String), 2023-08-05 21:54:36.997(Timestamp), 1684918065386622976(Long)
2023-08-05 21:54:47.721 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912436672781v5  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190361
2023-08-05 21:54:47.721 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m16912436672781v5  [0;39m [192.168.0.102:8091:7278238012553190361] rollback status: Rollbacked
2023-08-05 21:54:47.721 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912436672781v5  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:47.722 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912436672781v5  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:47.864 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667676ko5  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190393, branchId:7278238012553191382, lockKeys:daily_train_seat:1684918065386622976
2023-08-05 21:54:47.911 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m <==    Updates: 1
2023-08-05 21:54:47.911 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:47.911 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667676ko5  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:47.911 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667676ko5  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:47.997 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190364 branch 7278238012553190377, undo_log deleted with GlobalFinished
2023-08-05 21:54:48.012 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190364, branchId:7278238012553190377
2023-08-05 21:54:48.012 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:48.050 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912436673265bc  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190364
2023-08-05 21:54:48.051 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m16912436673265bc  [0;39m [192.168.0.102:8091:7278238012553190364] rollback status: Rollbacked
2023-08-05 21:54:48.051 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912436673265bc  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:48.052 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912436673265bc  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:48.125 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190337 branch 7278238012553190374, undo_log deleted with GlobalFinished
2023-08-05 21:54:48.138 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190337, branchId:7278238012553190374
2023-08-05 21:54:48.138 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:48.138 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:48.138 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:44.014(Timestamp), 1687824387073511424(Long)
2023-08-05 21:54:48.165 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190337', branchId=7278238012553190345, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:48.165 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190337 7278238012553190345 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:48.290 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666775omn  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190327, branchId:7278238012553191396, lockKeys:confirm_order:1687824387073511424
2023-08-05 21:54:48.362 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666775omn  [0;39m <==    Updates: 1
2023-08-05 21:54:48.362 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666775omn  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:48.362 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243666775omn  [0;39m transaction 192.168.0.102:8091:7278238012553190327 will be commit
2023-08-05 21:54:48.436 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243666775omn  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190327
2023-08-05 21:54:48.436 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243666775omn  [0;39m [192.168.0.102:8091:7278238012553190327] commit status: Committed
2023-08-05 21:54:48.436 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243666775omn  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:48.436 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243666775omn  [0;39m ------------- 结束 耗时：21659 ms -------------
2023-08-05 21:54:48.454 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190353 branch 7278238012553190360, undo_log deleted with GlobalFinished
2023-08-05 21:54:48.469 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190353, branchId:7278238012553190360
2023-08-05 21:54:48.469 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:48.497 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666832qin  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190328, branchId:7278238012553191403, lockKeys:daily_train_seat:1684918064870723584
2023-08-05 21:54:48.499 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667178kop  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190353
2023-08-05 21:54:48.499 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243667178kop  [0;39m [192.168.0.102:8091:7278238012553190353] rollback status: Rollbacked
2023-08-05 21:54:48.500 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243667178kop  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:48.501 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243667178kop  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:48.538 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m <==    Updates: 1
2023-08-05 21:54:48.539 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:48.539 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243666832qin  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:48.539 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667676ko5  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:48.539 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243666832qin  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:48.539 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667676ko5  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:48.569 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190336 branch 7278238012553190342, undo_log deleted with GlobalFinished
2023-08-05 21:54:48.587 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190336, branchId:7278238012553190342
2023-08-05 21:54:48.587 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:48.619 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912436669258wh  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190336
2023-08-05 21:54:48.619 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m16912436669258wh  [0;39m [192.168.0.102:8091:7278238012553190336] rollback status: Rollbacked
2023-08-05 21:54:48.620 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912436669258wh  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:48.621 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912436669258wh  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:48.621 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667257nap  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190356, branchId:7278238012553191405, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:48.662 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667257nap  [0;39m <==    Updates: 3
2023-08-05 21:54:48.663 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666832qin  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:48.664 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666832qin  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:48.680 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190337 branch 7278238012553190345, undo_log deleted with GlobalFinished
2023-08-05 21:54:48.725 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190337, branchId:7278238012553190345
2023-08-05 21:54:48.726 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:48.736 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190327', branchId=7278238012553190332, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:48.736 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190327 7278238012553190332 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:48.736 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:48.752 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190327', branchId=7278238012553190463, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:48.753 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190327 7278238012553190463 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:48.753 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:48.755 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243666975jav  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190337
2023-08-05 21:54:48.755 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243666975jav  [0;39m [192.168.0.102:8091:7278238012553190337] rollback status: Rollbacked
2023-08-05 21:54:48.755 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243666975jav  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:48.756 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243666975jav  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:48.766 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190327', branchId=7278238012553191207, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:48.767 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190327 7278238012553191207 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:48.767 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:48.795 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190327', branchId=7278238012553191396, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:48.795 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190327 7278238012553191396 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:48.795 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:48.905 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667257nap  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:48.905 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667257nap  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:48.905 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667257nap  [0;39m 参数值: ConfirmOrder [Hash = 292015603, id=1687824389086777344, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:48 CST 2023, tickets=null]
2023-08-05 21:54:48.905 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:48.906 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:48.905(Timestamp), 1687824389086777344(Long)
2023-08-05 21:54:49.076 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667257nap  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190356, branchId:7278238012553191440, lockKeys:confirm_order:1687824389086777344
2023-08-05 21:54:49.120 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667257nap  [0;39m <==    Updates: 1
2023-08-05 21:54:49.120 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667257nap  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:49.120 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667257nap  [0;39m transaction 192.168.0.102:8091:7278238012553190356 will be commit
2023-08-05 21:54:49.189 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667257nap  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190356
2023-08-05 21:54:49.189 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667257nap  [0;39m [192.168.0.102:8091:7278238012553190356] commit status: Committed
2023-08-05 21:54:49.189 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667257nap  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:49.190 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667257nap  [0;39m ------------- 结束 耗时：21931 ms -------------
2023-08-05 21:54:49.389 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667676ko5  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190393, branchId:7278238012553191449, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:49.426 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667676ko5  [0;39m <==    Updates: 3
2023-08-05 21:54:49.690 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667676ko5  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:49.691 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667676ko5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:49.692 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667676ko5  [0;39m 参数值: ConfirmOrder [Hash = 1250385733, id=1687824390852579328, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:49 CST 2023, tickets=null]
2023-08-05 21:54:49.693 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:49.695 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:49.691(Timestamp), 1687824390852579328(Long)
2023-08-05 21:54:49.715 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190356', branchId=7278238012553190366, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:49.715 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190356 7278238012553190366 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:49.716 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:49.731 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190356', branchId=7278238012553190467, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:49.731 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190356 7278238012553190467 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:49.732 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:49.746 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190356', branchId=7278238012553191405, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:49.746 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190356 7278238012553191405 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:49.747 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:49.782 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190356', branchId=7278238012553191440, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:49.782 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190356 7278238012553191440 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:49.782 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:49.859 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667676ko5  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190393, branchId:7278238012553191481, lockKeys:confirm_order:1687824390852579328
2023-08-05 21:54:49.896 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667676ko5  [0;39m <==    Updates: 1
2023-08-05 21:54:49.896 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667676ko5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:49.897 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667676ko5  [0;39m transaction 192.168.0.102:8091:7278238012553190393 will be commit
2023-08-05 21:54:49.951 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667676ko5  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190393
2023-08-05 21:54:49.951 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667676ko5  [0;39m [192.168.0.102:8091:7278238012553190393] commit status: Committed
2023-08-05 21:54:49.951 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667676ko5  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:49.951 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667676ko5  [0;39m ------------- 结束 耗时：22274 ms -------------
2023-08-05 21:54:50.048 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667378pe9  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190367, branchId:7278238012553191488, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:50.089 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667378pe9  [0;39m <==    Updates: 3
2023-08-05 21:54:50.309 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667378pe9  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:50.309 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667378pe9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:50.310 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667378pe9  [0;39m 参数值: ConfirmOrder [Hash = 1336236080, id=1687824389594288128, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:50 CST 2023, tickets=null]
2023-08-05 21:54:50.310 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:50.311 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:50.309(Timestamp), 1687824389594288128(Long)
2023-08-05 21:54:50.465 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667378pe9  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190367, branchId:7278238012553191502, lockKeys:confirm_order:1687824389594288128
2023-08-05 21:54:50.549 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667378pe9  [0;39m <==    Updates: 1
2023-08-05 21:54:50.550 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667378pe9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:50.551 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667378pe9  [0;39m transaction 192.168.0.102:8091:7278238012553190367 will be commit
2023-08-05 21:54:50.614 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667378pe9  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190367
2023-08-05 21:54:50.614 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667378pe9  [0;39m [192.168.0.102:8091:7278238012553190367] commit status: Committed
2023-08-05 21:54:50.615 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667378pe9  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:50.615 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667378pe9  [0;39m ------------- 结束 耗时：23235 ms -------------
2023-08-05 21:54:50.713 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190367', branchId=7278238012553190385, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:50.713 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190393', branchId=7278238012553190438, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:50.713 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190367 7278238012553190385 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:50.713 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190393 7278238012553190438 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:50.714 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.714 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.728 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190367', branchId=7278238012553190942, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.728 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190367 7278238012553190942 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.728 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.733 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190393', branchId=7278238012553191382, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.733 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190393 7278238012553191382 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.733 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.745 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190367', branchId=7278238012553191488, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.746 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190367 7278238012553191488 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.746 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.751 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190393', branchId=7278238012553191449, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.752 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190393 7278238012553191449 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.752 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.775 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190367', branchId=7278238012553191502, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.775 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190367 7278238012553191502 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.776 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.790 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190393', branchId=7278238012553191481, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:50.790 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190393 7278238012553191481 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:50.790 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:50.807 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666832qin  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190328, branchId:7278238012553191511, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:54:50.845 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243666832qin  [0;39m <==    Updates: 3
2023-08-05 21:54:51.046 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243666878ls7  [0;39m execute executeAutoCommitTrue error:Global lock wait timeout
io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190333, lockKeys:daily_train_seat:1684918064870723584
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 156 common frames omitted
2023-08-05 21:54:51.061 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666878ls7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:51.062 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243666878ls7  [0;39m 192.168.0.102:8091:7278238012553190333 rollback in the state Begin
2023-08-05 21:54:51.062 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243666878ls7  [0;39m 保存购票信息失败
org.springframework.dao.QueryTimeoutException: 
### Error updating database.  Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
; Global lock wait timeout
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:116)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.rm.datasource.exec.LockWaitTimeoutException: Global lock wait timeout
	at io.seata.rm.datasource.exec.LockRetryController.sleep(LockRetryController.java:66)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:364)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 129 common frames omitted
Caused by: io.seata.rm.datasource.exec.LockConflictException: get global lock fail, xid:192.168.0.102:8091:7278238012553190333, lockKeys:daily_train_seat:1684918064870723584
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:159)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	... 156 common frames omitted
2023-08-05 21:54:51.064 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243666878ls7  [0;39m transaction 192.168.0.102:8091:7278238012553190333 will be rollback
2023-08-05 21:54:51.064 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243666832qin  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:54:51.065 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243666832qin  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:51.066 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243666832qin  [0;39m 参数值: ConfirmOrder [Hash = 646666572, id=1687824387291615232, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:54:51 CST 2023, tickets=null]
2023-08-05 21:54:51.067 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:54:51.068 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m ==> Parameters: S(String), 2023-08-05 21:54:51.065(Timestamp), 1687824387291615232(Long)
2023-08-05 21:54:51.132 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190333', branchId=7278238012553190339, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:51.132 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190333 7278238012553190339 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:51.215 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190333 branch 7278238012553190339, undo_log deleted with GlobalFinished
2023-08-05 21:54:51.228 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190333, branchId:7278238012553190339
2023-08-05 21:54:51.228 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:51.234 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243666832qin  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190328, branchId:7278238012553191537, lockKeys:confirm_order:1687824387291615232
2023-08-05 21:54:51.259 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243666878ls7  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190333
2023-08-05 21:54:51.259 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243666878ls7  [0;39m [192.168.0.102:8091:7278238012553190333] rollback status: Rollbacked
2023-08-05 21:54:51.259 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243666878ls7  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:51.260 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243666878ls7  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:54:51.280 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243666832qin  [0;39m <==    Updates: 1
2023-08-05 21:54:51.280 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243666832qin  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:54:51.281 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243666832qin  [0;39m transaction 192.168.0.102:8091:7278238012553190328 will be commit
2023-08-05 21:54:51.334 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243666832qin  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190328
2023-08-05 21:54:51.335 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243666832qin  [0;39m [192.168.0.102:8091:7278238012553190328] commit status: Committed
2023-08-05 21:54:51.335 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243666832qin  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:54:51.335 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243666832qin  [0;39m ------------- 结束 耗时：24501 ms -------------
2023-08-05 21:54:51.721 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190328', branchId=7278238012553190335, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:51.721 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190328 7278238012553190335 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:54:51.721 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:51.736 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190328', branchId=7278238012553191403, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:51.736 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190328 7278238012553191403 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:51.736 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:51.755 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190328', branchId=7278238012553191511, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:51.755 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190328 7278238012553191511 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:51.755 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:51.783 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190328', branchId=7278238012553191537, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:54:51.783 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190328 7278238012553191537 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:54:51.784 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:54:59.724 ERROR i.seata.core.rpc.netty.AbstractNettyRemotingClient:176  [32m1691243667626lq8  [0;39m wait response error:null ,cost: 15001 ms,ip:192.168.0.102:8091,request:BranchRegisterRequest{xid='192.168.0.102:8091:7278238012553190392', branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', lockKey='daily_train_seat:1684918065269182464', applicationData='null'}
2023-08-05 21:54:59.739 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243667626lq8  [0;39m execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15001 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:59.755 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667626lq8  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:59.755 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243667626lq8  [0;39m 192.168.0.102:8091:7278238012553190392 rollback in the state Begin
2023-08-05 21:54:59.756 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243667626lq8  [0;39m 保存购票信息失败
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553190392
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15001 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:54:59.758 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243667626lq8  [0;39m transaction 192.168.0.102:8091:7278238012553190392 will be rollback
2023-08-05 21:54:59.835 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553190392', branchId=7278238012553190434, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:54:59.835 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553190392 7278238012553190434 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:54:59.876 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667426uom  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190372, branchId:7278238012553191668, lockKeys:daily_train_seat:1684918065269182464
2023-08-05 21:54:59.918 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m <==    Updates: 1
2023-08-05 21:54:59.919 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:54:59.919 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667426uom  [0;39m 影响出发站区间:0-1
2023-08-05 21:54:59.919 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667426uom  [0;39m 影响到达站区间:0-2
2023-08-05 21:54:59.920 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667426uom  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:54:59.920 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667426uom  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:54:59.923 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553190392 branch 7278238012553190434, undo_log deleted with GlobalFinished
2023-08-05 21:54:59.934 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553190392, branchId:7278238012553190434
2023-08-05 21:54:59.935 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:54:59.967 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667626lq8  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190392
2023-08-05 21:54:59.967 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243667626lq8  [0;39m [192.168.0.102:8091:7278238012553190392] rollback status: Rollbacked
2023-08-05 21:54:59.968 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243667626lq8  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:54:59.969 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243667626lq8  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:55:00.128 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667426uom  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190372, branchId:7278238012553191672, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:55:00.168 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667426uom  [0;39m <==    Updates: 3
2023-08-05 21:55:00.399 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667426uom  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:55:00.400 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667426uom  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:00.400 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667426uom  [0;39m 参数值: ConfirmOrder [Hash = 384046832, id=1687824389791420416, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:55:00 CST 2023, tickets=null]
2023-08-05 21:55:00.401 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:55:00.402 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m ==> Parameters: S(String), 2023-08-05 21:55:00.4(Timestamp), 1687824389791420416(Long)
2023-08-05 21:55:00.562 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667426uom  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190372, branchId:7278238012553191682, lockKeys:confirm_order:1687824389791420416
2023-08-05 21:55:00.604 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667426uom  [0;39m <==    Updates: 1
2023-08-05 21:55:00.606 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667426uom  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:00.607 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667426uom  [0;39m transaction 192.168.0.102:8091:7278238012553190372 will be commit
2023-08-05 21:55:00.699 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667426uom  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190372
2023-08-05 21:55:00.699 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667426uom  [0;39m [192.168.0.102:8091:7278238012553190372] commit status: Committed
2023-08-05 21:55:00.699 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667426uom  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:55:00.700 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667426uom  [0;39m ------------- 结束 耗时：33272 ms -------------
2023-08-05 21:55:00.726 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190372', branchId=7278238012553190389, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:55:00.726 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190372 7278238012553190389 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:55:00.727 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:00.742 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190372', branchId=7278238012553191668, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:00.742 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190372 7278238012553191668 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:00.742 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:00.757 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190372', branchId=7278238012553191672, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:00.757 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190372 7278238012553191672 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:00.757 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:00.767 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124366752974g  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190378, branchId:7278238012553191687, lockKeys:daily_train_seat:1684918065269182464
2023-08-05 21:55:00.789 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190372', branchId=7278238012553191682, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:00.789 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190372 7278238012553191682 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:00.790 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:00.804 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m <==    Updates: 1
2023-08-05 21:55:00.805 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:55:00.805 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m169124366752974g  [0;39m 影响出发站区间:0-1
2023-08-05 21:55:00.805 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m169124366752974g  [0;39m 影响到达站区间:0-2
2023-08-05 21:55:00.806 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124366752974g  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:55:00.807 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124366752974g  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:55:00.997 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124366752974g  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190378, branchId:7278238012553191705, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:55:01.032 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124366752974g  [0;39m <==    Updates: 3
2023-08-05 21:55:01.290 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m169124366752974g  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:55:01.291 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124366752974g  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:01.292 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124366752974g  [0;39m 参数值: ConfirmOrder [Hash = 1079488182, id=1687824390240210944, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:55:01 CST 2023, tickets=null]
2023-08-05 21:55:01.293 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:55:01.294 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m ==> Parameters: S(String), 2023-08-05 21:55:01.291(Timestamp), 1687824390240210944(Long)
2023-08-05 21:55:01.438 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124366752974g  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190378, branchId:7278238012553191715, lockKeys:confirm_order:1687824390240210944
2023-08-05 21:55:01.480 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124366752974g  [0;39m <==    Updates: 1
2023-08-05 21:55:01.481 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124366752974g  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:01.482 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m169124366752974g  [0;39m transaction 192.168.0.102:8091:7278238012553190378 will be commit
2023-08-05 21:55:01.551 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m169124366752974g  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190378
2023-08-05 21:55:01.552 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m169124366752974g  [0;39m [192.168.0.102:8091:7278238012553190378] commit status: Committed
2023-08-05 21:55:01.552 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124366752974g  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:55:01.552 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124366752974g  [0;39m ------------- 结束 耗时：34021 ms -------------
2023-08-05 21:55:01.662 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667473p3o  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190375, branchId:7278238012553191720, lockKeys:daily_train_seat:1684918065269182464
2023-08-05 21:55:01.705 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m <==    Updates: 1
2023-08-05 21:55:01.706 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:55:01.707 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667473p3o  [0;39m 影响出发站区间:0-1
2023-08-05 21:55:01.707 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667473p3o  [0;39m 影响到达站区间:0-2
2023-08-05 21:55:01.709 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667473p3o  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:55:01.710 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667473p3o  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:55:01.717 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190378', branchId=7278238012553190397, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:55:01.717 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190378 7278238012553190397 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:55:01.717 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:01.732 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190378', branchId=7278238012553191687, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:01.732 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190378 7278238012553191687 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:01.732 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:01.748 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190378', branchId=7278238012553191705, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:01.748 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190378 7278238012553191705 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:01.748 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:01.775 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190378', branchId=7278238012553191715, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:01.776 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190378 7278238012553191715 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:01.776 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:01.903 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667473p3o  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190375, branchId:7278238012553191737, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:55:01.953 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667473p3o  [0;39m <==    Updates: 3
2023-08-05 21:55:02.165 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667473p3o  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:55:02.165 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667473p3o  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:02.166 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667473p3o  [0;39m 参数值: ConfirmOrder [Hash = 1729933178, id=1687824390013718528, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:55:02 CST 2023, tickets=null]
2023-08-05 21:55:02.166 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:55:02.167 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m ==> Parameters: S(String), 2023-08-05 21:55:02.165(Timestamp), 1687824390013718528(Long)
2023-08-05 21:55:02.337 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667473p3o  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190375, branchId:7278238012553191747, lockKeys:confirm_order:1687824390013718528
2023-08-05 21:55:02.382 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667473p3o  [0;39m <==    Updates: 1
2023-08-05 21:55:02.382 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667473p3o  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:02.383 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667473p3o  [0;39m transaction 192.168.0.102:8091:7278238012553190375 will be commit
2023-08-05 21:55:02.435 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667473p3o  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190375
2023-08-05 21:55:02.435 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667473p3o  [0;39m [192.168.0.102:8091:7278238012553190375] commit status: Committed
2023-08-05 21:55:02.435 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667473p3o  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:55:02.435 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667473p3o  [0;39m ------------- 结束 耗时：34960 ms -------------
2023-08-05 21:55:02.525 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667575rzg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190381, branchId:7278238012553191750, lockKeys:daily_train_seat:1684918065269182464
2023-08-05 21:55:02.584 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m <==    Updates: 1
2023-08-05 21:55:02.585 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:55:02.585 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243667575rzg  [0;39m 影响出发站区间:0-1
2023-08-05 21:55:02.586 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243667575rzg  [0;39m 影响到达站区间:0-2
2023-08-05 21:55:02.587 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667575rzg  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:55:02.589 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667575rzg  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:55:02.730 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190375', branchId=7278238012553190391, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:55:02.731 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190375 7278238012553190391 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:55:02.731 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:02.747 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190375', branchId=7278238012553191720, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:02.747 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190375 7278238012553191720 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:02.748 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:02.763 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190375', branchId=7278238012553191737, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:02.764 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190375 7278238012553191737 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:02.764 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:02.795 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190375', branchId=7278238012553191747, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:02.796 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190375 7278238012553191747 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:02.796 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:02.846 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667575rzg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190381, branchId:7278238012553191764, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:55:02.894 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243667575rzg  [0;39m <==    Updates: 3
2023-08-05 21:55:03.097 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243667575rzg  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:55:03.097 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243667575rzg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:03.098 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243667575rzg  [0;39m 参数值: ConfirmOrder [Hash = 1447855038, id=1687824390428954624, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:55:03 CST 2023, tickets=null]
2023-08-05 21:55:03.098 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:55:03.098 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m ==> Parameters: S(String), 2023-08-05 21:55:03.097(Timestamp), 1687824390428954624(Long)
2023-08-05 21:55:03.264 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243667575rzg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553190381, branchId:7278238012553191768, lockKeys:confirm_order:1687824390428954624
2023-08-05 21:55:03.311 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243667575rzg  [0;39m <==    Updates: 1
2023-08-05 21:55:03.312 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243667575rzg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:55:03.312 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243667575rzg  [0;39m transaction 192.168.0.102:8091:7278238012553190381 will be commit
2023-08-05 21:55:03.363 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243667575rzg  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553190381
2023-08-05 21:55:03.364 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243667575rzg  [0;39m [192.168.0.102:8091:7278238012553190381] commit status: Committed
2023-08-05 21:55:03.364 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243667575rzg  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:55:03.364 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243667575rzg  [0;39m ------------- 结束 耗时：35786 ms -------------
2023-08-05 21:55:03.727 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190381', branchId=7278238012553190424, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:55:03.727 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190381 7278238012553190424 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:55:03.727 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:03.741 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190381', branchId=7278238012553191750, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:03.741 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190381 7278238012553191750 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:03.741 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:03.792 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190381', branchId=7278238012553191764, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:03.792 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190381 7278238012553191764 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:03.792 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:55:03.822 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553190381', branchId=7278238012553191768, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:55:03.822 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553190381 7278238012553191768 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:55:03.822 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:06.586 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243826586dlj  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:06.587 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243826586dlj  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.588 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243826586dlj  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.588 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243826588c97  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:06.588 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243826586dlj  [0;39m ------------- 开始 -------------
2023-08-05 21:57:06.589 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243826586dlj  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 21:57:06.589 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243826588c97  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.589 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243826586dlj  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 21:57:06.589 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243826588c97  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.589 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243826586dlj  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:06.589 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243826586dlj  [0;39m 请求参数: []
2023-08-05 21:57:06.590 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243826586dlj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:06.590 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243826586dlj  [0;39m 参数值: com.jktickets.domain.StationExample@67430cb2
2023-08-05 21:57:06.600 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243826588c97  [0;39m ------------- 开始 -------------
2023-08-05 21:57:06.600 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243826588c97  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 21:57:06.601 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243826588c97  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 21:57:06.601 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243826588c97  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:06.601 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243826588c97  [0;39m 请求参数: [{"date":1690473600000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 21:57:06.611 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243826586dlj  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 21:57:06.612 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243826586dlj  [0;39m ==> Parameters: 
2023-08-05 21:57:06.614 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243826588c97  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:06.615 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243826588c97  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3b60ffc9
2023-08-05 21:57:06.624 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243826586dlj  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 21:57:06.625 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243826586dlj  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 21:57:06.626 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243826586dlj  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 21:57:06.626 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243826586dlj  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 21:57:06.626 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243826586dlj  [0;39m <==      Total: 3
2023-08-05 21:57:06.627 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243826586dlj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:06.628 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243826586dlj  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 21:57:06.628 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243826586dlj  [0;39m ------------- 结束 耗时：40 ms -------------
2023-08-05 21:57:06.634 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691243826588c97  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket WHERE (`date` = ? AND `start` = ? AND `end` = ?)
2023-08-05 21:57:06.635 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691243826588c97  [0;39m ==> Parameters: 2023-07-28(Date), 温州(String), 杭州(String)
2023-08-05 21:57:06.639 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912438266398q3  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:06.640 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912438266398q3  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.640 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912438266398q3  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:06.641 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912438266398q3  [0;39m ------------- 开始 -------------
2023-08-05 21:57:06.642 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912438266398q3  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 21:57:06.642 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912438266398q3  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 21:57:06.642 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912438266398q3  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:06.642 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912438266398q3  [0;39m 请求参数: []
2023-08-05 21:57:06.643 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438266398q3  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:06.643 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438266398q3  [0;39m 参数值: com.jktickets.domain.StationExample@5d75939a
2023-08-05 21:57:06.647 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691243826588c97  [0;39m <==    Columns: count(0)
2023-08-05 21:57:06.648 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691243826588c97  [0;39m <==        Row: 1
2023-08-05 21:57:06.648 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691243826588c97  [0;39m <==      Total: 1
2023-08-05 21:57:06.648 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243826588c97  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and `start` = ? and `end` = ? ) order by id desc LIMIT ?
2023-08-05 21:57:06.649 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243826588c97  [0;39m ==> Parameters: 2023-07-28(Date), 温州(String), 杭州(String), 10(Integer)
2023-08-05 21:57:06.656 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16912438266398q3  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 21:57:06.657 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16912438266398q3  [0;39m ==> Parameters: 
2023-08-05 21:57:06.663 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243826588c97  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:06.664 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243826588c97  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:06.665 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243826588c97  [0;39m <==      Total: 1
2023-08-05 21:57:06.666 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243826588c97  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:06.666 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691243826588c97  [0;39m 总行数：1
2023-08-05 21:57:06.666 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691243826588c97  [0;39m 总页数：1
2023-08-05 21:57:06.670 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16912438266398q3  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 21:57:06.672 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16912438266398q3  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 21:57:06.673 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16912438266398q3  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 21:57:06.674 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m16912438266398q3  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 21:57:06.675 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m16912438266398q3  [0;39m <==      Total: 3
2023-08-05 21:57:06.675 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438266398q3  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:06.676 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912438266398q3  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 21:57:06.677 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912438266398q3  [0;39m ------------- 结束 耗时：36 ms -------------
2023-08-05 21:57:06.691 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243826588c97  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1690550746171,"date":1690473600000,"edz":3,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1684918068104531968,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1690550746171,"ydz":-79,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 21:57:06.691 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243826588c97  [0;39m ------------- 结束 耗时：91 ms -------------
2023-08-05 21:57:11.641 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243831641gpa  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:11.642 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243831641gpa  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.642 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243831641gpa  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.642 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243831641gpa  [0;39m ------------- 开始 -------------
2023-08-05 21:57:11.643 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243831641gpa  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 21:57:11.643 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243831641gpa  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 21:57:11.643 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243831641gpa  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:11.643 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243831641gpa  [0;39m 请求参数: []
2023-08-05 21:57:11.644 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243831641gpa  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:11.644 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243831641gpa  [0;39m 参数值: com.jktickets.domain.StationExample@6352b5f0
2023-08-05 21:57:11.644 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243831644nd8  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:11.645 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243831644nd8  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.645 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243831644nd8  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.646 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243831644nd8  [0;39m ------------- 开始 -------------
2023-08-05 21:57:11.646 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243831644nd8  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 21:57:11.646 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243831644nd8  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 21:57:11.647 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243831644nd8  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:11.647 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243831644nd8  [0;39m 请求参数: [{"date":1690473600000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 21:57:11.677 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243831641gpa  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 21:57:11.678 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243831641gpa  [0;39m ==> Parameters: 
2023-08-05 21:57:11.682 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243831644nd8  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1690550746171,"date":1690473600000,"edz":3,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1684918068104531968,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1690550746171,"ydz":-79,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 21:57:11.683 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243831644nd8  [0;39m ------------- 结束 耗时：37 ms -------------
2023-08-05 21:57:11.690 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243831641gpa  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 21:57:11.690 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243831641gpa  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 21:57:11.691 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243831641gpa  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 21:57:11.691 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691243831641gpa  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 21:57:11.692 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691243831641gpa  [0;39m <==      Total: 3
2023-08-05 21:57:11.692 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243831641gpa  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:11.693 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243831641gpa  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 21:57:11.693 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243831641gpa  [0;39m ------------- 结束 耗时：51 ms -------------
2023-08-05 21:57:11.701 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124383170106k  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:11.702 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124383170106k  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.702 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124383170106k  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124383170106k  [0;39m ------------- 开始 -------------
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124383170106k  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124383170106k  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124383170106k  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124383170106k  [0;39m 请求参数: []
2023-08-05 21:57:11.703 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124383170106k  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:11.704 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124383170106k  [0;39m 参数值: com.jktickets.domain.StationExample@45f8c291
2023-08-05 21:57:11.716 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169124383170106k  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 21:57:11.716 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169124383170106k  [0;39m ==> Parameters: 
2023-08-05 21:57:11.728 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169124383170106k  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 21:57:11.729 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169124383170106k  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 21:57:11.732 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169124383170106k  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 21:57:11.733 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m169124383170106k  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 21:57:11.733 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m169124383170106k  [0;39m <==      Total: 3
2023-08-05 21:57:11.734 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124383170106k  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 21:57:11.738 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124383170106k  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 21:57:11.739 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124383170106k  [0;39m ------------- 结束 耗时：36 ms -------------
2023-08-05 21:57:45.087 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865087sq6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.087 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865087sq6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.088 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865087sq6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.093 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865087sq6  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.093 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865087sq6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.094 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865087sq6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.094 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865087sq6  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.094 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865087sq6  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.135 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865087sq6  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192693]
2023-08-05 21:57:45.135 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.137 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: ConfirmOrder [Hash = 1089892022, id=1687825218967572480, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.149 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865087sq6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.200 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865200ght  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.200 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865200ght  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.200 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865200ght  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.201 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865200ght  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.201 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865200ght  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.202 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865200ght  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.202 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865200ght  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.202 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865200ght  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.208 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865087sq6  [0;39m ==> Parameters: 1687825218967572480(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.135(Timestamp), 2023-08-05 21:57:45.135(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.222 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865200ght  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192694]
2023-08-05 21:57:45.222 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.222 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: ConfirmOrder [Hash = 106519566, id=1687825219332476928, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.237 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865200ght  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.238 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865200ght  [0;39m ==> Parameters: 1687825219332476928(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.222(Timestamp), 2023-08-05 21:57:45.222(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.287 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124386528712s  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.287 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124386528712s  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.287 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124386528712s  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.289 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124386528712s  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.289 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124386528712s  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.289 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124386528712s  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.289 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124386528712s  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.290 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124386528712s  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.305 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m169124386528712s  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192697]
2023-08-05 21:57:45.306 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.307 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: ConfirmOrder [Hash = 1840543494, id=1687825219684798464, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.319 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124386528712s  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.320 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124386528712s  [0;39m ==> Parameters: 1687825219684798464(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.306(Timestamp), 2023-08-05 21:57:45.306(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.357 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865087sq6  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192693, branchId:7278238012553192696, lockKeys:confirm_order:1687825218967572480
2023-08-05 21:57:45.390 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865390y4c  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.391 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865390y4c  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.392 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865390y4c  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.393 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865390y4c  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.393 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865390y4c  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.394 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865390y4c  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.394 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865390y4c  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.394 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865390y4c  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.396 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865087sq6  [0;39m <==    Updates: 1
2023-08-05 21:57:45.396 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.397 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.397 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@40669d5f
2023-08-05 21:57:45.398 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865087sq6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.398 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865087sq6  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.400 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865200ght  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192694, branchId:7278238012553192699, lockKeys:confirm_order:1687825219332476928
2023-08-05 21:57:45.410 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865390y4c  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192702]
2023-08-05 21:57:45.410 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.410 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: ConfirmOrder [Hash = 2090199202, id=1687825220121006080, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.413 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865087sq6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.414 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.414 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865087sq6  [0;39m <==      Total: 1
2023-08-05 21:57:45.415 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.415 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865087sq6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2085343053, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.415 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865087sq6  [0;39m 本次购票没有选座
2023-08-05 21:57:45.415 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.415 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4148c4f8
2023-08-05 21:57:45.416 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865087sq6  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.416 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865087sq6  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.423 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865390y4c  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.424 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865390y4c  [0;39m ==> Parameters: 1687825220121006080(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.41(Timestamp), 2023-08-05 21:57:45.41(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.428 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865087sq6  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.429 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.430 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865087sq6  [0;39m <==      Total: 1
2023-08-05 21:57:45.430 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.430 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865087sq6  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.430 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865087sq6  [0;39m 从车厢2选座
2023-08-05 21:57:45.430 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.430 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@67a87f80
2023-08-05 21:57:45.431 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865087sq6  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.432 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865087sq6  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.444 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.447 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865200ght  [0;39m <==    Updates: 1
2023-08-05 21:57:45.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.447 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.447 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.447 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7e65d48d
2023-08-05 21:57:45.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:57:45.448 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865200ght  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.448 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865200ght  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.449 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.450 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.450 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.451 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.451 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.451 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.452 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.452 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.453 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.453 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.453 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.454 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.454 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.455 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.455 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.455 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865087sq6  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.456 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865087sq6  [0;39m <==      Total: 25
2023-08-05 21:57:45.456 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.456 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865087sq6  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.456 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.456 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.456 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.456 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.457 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865087sq6  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865087sq6  [0;39m 无选座
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865087sq6  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865087sq6  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865087sq6  [0;39m 选中座位
2023-08-05 21:57:45.458 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865087sq6  [0;39m 最终选座:[DailyTrainSeat [Hash = 1376311592, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.458 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865087sq6  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192693
2023-08-05 21:57:45.458 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865087sq6  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192693
2023-08-05 21:57:45.459 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.459 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: DailyTrainSeat [Hash = 1208338923, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.460 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.460 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.459(Timestamp), 1684918064971386880(Long)
2023-08-05 21:57:45.464 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865200ght  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.464 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865200ght  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.464 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865200ght  [0;39m <==      Total: 1
2023-08-05 21:57:45.465 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.465 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865200ght  [0;39m 查出余票记录:DailyTrainTicket [Hash = 792272890, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.465 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865200ght  [0;39m 本次购票没有选座
2023-08-05 21:57:45.465 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.465 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1f269a5f
2023-08-05 21:57:45.466 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865200ght  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.466 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865200ght  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.471 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124386528712s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192697, branchId:7278238012553192701, lockKeys:confirm_order:1687825219684798464
2023-08-05 21:57:45.481 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865200ght  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.482 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865200ght  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.482 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865200ght  [0;39m <==      Total: 1
2023-08-05 21:57:45.483 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.483 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865200ght  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.483 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865200ght  [0;39m 从车厢2选座
2023-08-05 21:57:45.483 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.484 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@16bec157
2023-08-05 21:57:45.484 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865200ght  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.485 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865200ght  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.488 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865488khl  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.488 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865488khl  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.488 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865488khl  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.489 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865488khl  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.490 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865488khl  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.490 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865488khl  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.490 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865488khl  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.491 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865488khl  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.500 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.501 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.501 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.502 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.502 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.503 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.503 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.503 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.504 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:57:45.505 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865488khl  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192703]
2023-08-05 21:57:45.505 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.505 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.506 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.506 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: ConfirmOrder [Hash = 363762139, id=1687825220519464960, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.507 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.508 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.509 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.512 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124386528712s  [0;39m <==    Updates: 1
2023-08-05 21:57:45.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.513 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.513 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.513 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5c4e24bd
2023-08-05 21:57:45.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.514 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124386528712s  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.514 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124386528712s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865200ght  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.516 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865200ght  [0;39m <==      Total: 25
2023-08-05 21:57:45.517 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865200ght  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.517 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865200ght  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865200ght  [0;39m 无选座
2023-08-05 21:57:45.518 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865200ght  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.519 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865200ght  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.519 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865200ght  [0;39m 选中座位
2023-08-05 21:57:45.519 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865200ght  [0;39m 最终选座:[DailyTrainSeat [Hash = 1514164907, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.519 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865488khl  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.519 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865200ght  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192694
2023-08-05 21:57:45.519 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865200ght  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192694
2023-08-05 21:57:45.520 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.520 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865488khl  [0;39m ==> Parameters: 1687825220519464960(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.505(Timestamp), 2023-08-05 21:57:45.505(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.520 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: DailyTrainSeat [Hash = 706965197, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.520 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.521 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.52(Timestamp), 1684918064971386880(Long)
2023-08-05 21:57:45.528 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124386528712s  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.529 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124386528712s  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.530 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124386528712s  [0;39m <==      Total: 1
2023-08-05 21:57:45.530 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.531 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124386528712s  [0;39m 查出余票记录:DailyTrainTicket [Hash = 631328403, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.531 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m169124386528712s  [0;39m 本次购票没有选座
2023-08-05 21:57:45.531 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.531 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@54b1ae1f
2023-08-05 21:57:45.532 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124386528712s  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.533 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124386528712s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.544 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124386528712s  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.545 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124386528712s  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.546 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124386528712s  [0;39m <==      Total: 1
2023-08-05 21:57:45.546 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.546 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m169124386528712s  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.546 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m169124386528712s  [0;39m 从车厢2选座
2023-08-05 21:57:45.546 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.547 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@148e87cd
2023-08-05 21:57:45.547 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124386528712s  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.548 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124386528712s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.561 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.565 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.565 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:57:45.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.568 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.569 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.572 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.573 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.573 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865390y4c  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192702, branchId:7278238012553192705, lockKeys:confirm_order:1687825220121006080
2023-08-05 21:57:45.594 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.596 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.597 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.598 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124386528712s  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.599 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124386528712s  [0;39m <==      Total: 25
2023-08-05 21:57:45.599 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.600 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m169124386528712s  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.600 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.601 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.602 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.602 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.602 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912438656027pg  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.602 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.603 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.603 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.603 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912438656027pg  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.603 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912438656027pg  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.603 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.603 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.605 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912438656027pg  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.604 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.605 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.605 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912438656027pg  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.605 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.605 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912438656027pg  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.605 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.605 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124386528712s  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.605 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912438656027pg  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.606 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124386528712s  [0;39m 无选座
2023-08-05 21:57:45.606 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912438656027pg  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.606 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m169124386528712s  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.606 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m169124386528712s  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.606 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m169124386528712s  [0;39m 选中座位
2023-08-05 21:57:45.607 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m169124386528712s  [0;39m 最终选座:[DailyTrainSeat [Hash = 1125480962, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.607 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m169124386528712s  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192697
2023-08-05 21:57:45.607 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m169124386528712s  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192697
2023-08-05 21:57:45.608 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.608 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: DailyTrainSeat [Hash = 1557063719, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.609 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.609 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.608(Timestamp), 1684918064971386880(Long)
2023-08-05 21:57:45.624 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912438656027pg  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192708]
2023-08-05 21:57:45.625 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.625 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: ConfirmOrder [Hash = 1810394635, id=1687825221022781440, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.639 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912438656027pg  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.640 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912438656027pg  [0;39m ==> Parameters: 1687825221022781440(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.625(Timestamp), 2023-08-05 21:57:45.625(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.641 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865390y4c  [0;39m <==    Updates: 1
2023-08-05 21:57:45.641 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.642 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.642 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3729bb2e
2023-08-05 21:57:45.643 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865390y4c  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.643 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865390y4c  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.656 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865390y4c  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.657 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.658 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865390y4c  [0;39m <==      Total: 1
2023-08-05 21:57:45.658 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.659 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865390y4c  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1281218464, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.659 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865390y4c  [0;39m 本次购票没有选座
2023-08-05 21:57:45.659 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.659 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7c380c5d
2023-08-05 21:57:45.660 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865390y4c  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.660 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865390y4c  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.665 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865488khl  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192703, branchId:7278238012553192707, lockKeys:confirm_order:1687825220519464960
2023-08-05 21:57:45.673 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865390y4c  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.674 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.674 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865390y4c  [0;39m <==      Total: 1
2023-08-05 21:57:45.674 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.674 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865390y4c  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.675 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865390y4c  [0;39m 从车厢2选座
2023-08-05 21:57:45.675 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.675 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@b692074
2023-08-05 21:57:45.676 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865390y4c  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.676 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865390y4c  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.688 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865688dte  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.688 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865688dte  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.688 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865688dte  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.689 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865688dte  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.690 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865688dte  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.690 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865688dte  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.690 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865688dte  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.690 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865688dte  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.694 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.694 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.695 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.696 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.696 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.697 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.697 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.698 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.699 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 00, 2023-07-28 21:25:45.610, 2023-07-28 21:25:45.610
2023-08-05 21:57:45.699 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.700 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.700 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.700 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.701 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.701 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.702 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.702 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.703 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.703 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.703 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.704 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.704 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.705 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.705 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.706 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.707 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865390y4c  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.707 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865390y4c  [0;39m <==      Total: 25
2023-08-05 21:57:45.707 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865390y4c  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.708 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865390y4c  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.709 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865390y4c  [0;39m 无选座
2023-08-05 21:57:45.710 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865390y4c  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.710 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865390y4c  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.710 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865390y4c  [0;39m 选中座位
2023-08-05 21:57:45.710 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865390y4c  [0;39m 最终选座:[DailyTrainSeat [Hash = 365800930, id=1684918064971386880, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.710 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865390y4c  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192702
2023-08-05 21:57:45.710 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865390y4c  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192702
2023-08-05 21:57:45.710 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.711 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: DailyTrainSeat [Hash = 36281524, id=1684918064971386880, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.711 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.712 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.71(Timestamp), 1684918064971386880(Long)
2023-08-05 21:57:45.713 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865488khl  [0;39m <==    Updates: 1
2023-08-05 21:57:45.714 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.714 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.714 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7c3e5bfd
2023-08-05 21:57:45.715 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865488khl  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.716 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865688dte  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192711]
2023-08-05 21:57:45.716 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865488khl  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.716 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865688dte  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.717 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865688dte  [0;39m 参数值: ConfirmOrder [Hash = 1810978268, id=1687825221404463104, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.724 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865087sq6  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192693, branchId:7278238012553192710, lockKeys:daily_train_seat:1684918064971386880
2023-08-05 21:57:45.729 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865688dte  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.730 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865688dte  [0;39m ==> Parameters: 1687825221404463104(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.716(Timestamp), 2023-08-05 21:57:45.716(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.731 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865488khl  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.732 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865488khl  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.733 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865488khl  [0;39m <==      Total: 1
2023-08-05 21:57:45.733 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.733 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865488khl  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2107132778, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.733 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865488khl  [0;39m 本次购票没有选座
2023-08-05 21:57:45.734 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.734 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@198d9428
2023-08-05 21:57:45.735 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865488khl  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.735 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865488khl  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.748 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865488khl  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.749 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865488khl  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.749 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865488khl  [0;39m <==      Total: 1
2023-08-05 21:57:45.749 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.750 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865488khl  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.750 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865488khl  [0;39m 从车厢2选座
2023-08-05 21:57:45.750 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.750 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3ddb6d11
2023-08-05 21:57:45.751 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865488khl  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.751 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865488khl  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.765 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m <==    Updates: 1
2023-08-05 21:57:45.765 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.765 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865087sq6  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:45.766 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865087sq6  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:45.766 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865087sq6  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:45.767 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865087sq6  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:45.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.781 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912438656027pg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192708, branchId:7278238012553192713, lockKeys:confirm_order:1687825221022781440
2023-08-05 21:57:45.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:45.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.789 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865789r4h  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.790 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865789r4h  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.790 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.791 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865789r4h  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.792 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.793 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865789r4h  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.793 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865789r4h  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.793 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.794 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865789r4h  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.794 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865789r4h  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.794 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865789r4h  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.794 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.795 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.795 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.796 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.797 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.798 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.798 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.799 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.800 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.801 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.802 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.803 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865488khl  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.803 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865488khl  [0;39m <==      Total: 25
2023-08-05 21:57:45.804 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.804 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865488khl  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.804 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.805 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.806 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.807 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.807 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.808 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.808 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.809 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.809 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.809 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.810 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.810 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865488khl  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.810 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865488khl  [0;39m 无选座
2023-08-05 21:57:45.810 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865488khl  [0;39m 座位13在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.810 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865789r4h  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192720]
2023-08-05 21:57:45.811 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865488khl  [0;39m 座位13被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.811 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865488khl  [0;39m 选中座位
2023-08-05 21:57:45.811 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.811 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865488khl  [0;39m 最终选座:[DailyTrainSeat [Hash = 2004765283, id=1684918065491480576, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.811 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: ConfirmOrder [Hash = 616164219, id=1687825221802921984, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.811 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865488khl  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192703
2023-08-05 21:57:45.811 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865488khl  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192703
2023-08-05 21:57:45.812 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.812 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: DailyTrainSeat [Hash = 1983377830, id=1684918065491480576, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.812 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.813 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.812(Timestamp), 1684918065491480576(Long)
2023-08-05 21:57:45.826 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865789r4h  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.826 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912438656027pg  [0;39m <==    Updates: 1
2023-08-05 21:57:45.826 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.827 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.827 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@516e8b72
2023-08-05 21:57:45.827 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865789r4h  [0;39m ==> Parameters: 1687825221802921984(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.811(Timestamp), 2023-08-05 21:57:45.811(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.827 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912438656027pg  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.828 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912438656027pg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.840 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912438656027pg  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.841 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912438656027pg  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.842 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912438656027pg  [0;39m <==      Total: 1
2023-08-05 21:57:45.842 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.842 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912438656027pg  [0;39m 查出余票记录:DailyTrainTicket [Hash = 220272818, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.842 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912438656027pg  [0;39m 本次购票没有选座
2023-08-05 21:57:45.843 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.843 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@63d6e699
2023-08-05 21:57:45.844 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912438656027pg  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.844 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912438656027pg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.856 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912438656027pg  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.857 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912438656027pg  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.858 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912438656027pg  [0;39m <==      Total: 1
2023-08-05 21:57:45.858 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.858 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912438656027pg  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.858 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912438656027pg  [0;39m 从车厢2选座
2023-08-05 21:57:45.858 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.859 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@47683f94
2023-08-05 21:57:45.860 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912438656027pg  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.860 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912438656027pg  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.873 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:45.873 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:45.874 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:45.875 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:45.876 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:45.876 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:45.877 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:45.877 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:45.878 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:45.879 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:45.879 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:45.880 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:45.881 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:45.881 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:45.882 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:45.882 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:45.883 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:45.884 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:45.884 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:45.885 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:45.886 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:45.886 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:45.888 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:45.889 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:45.889 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865889nbv  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.890 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865889nbv  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.890 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:45.890 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865889nbv  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.890 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912438656027pg  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:45.891 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912438656027pg  [0;39m <==      Total: 25
2023-08-05 21:57:45.891 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865889nbv  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.891 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.891 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865889nbv  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.891 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912438656027pg  [0;39m 车厢2的座位数:25
2023-08-05 21:57:45.891 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865889nbv  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.891 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.891 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865889nbv  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.892 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865889nbv  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.892 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.893 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912438656027pg  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:45.894 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912438656027pg  [0;39m 无选座
2023-08-05 21:57:45.895 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912438656027pg  [0;39m 座位13在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:45.895 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912438656027pg  [0;39m 座位13被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:45.895 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912438656027pg  [0;39m 选中座位
2023-08-05 21:57:45.895 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912438656027pg  [0;39m 最终选座:[DailyTrainSeat [Hash = 373264309, id=1684918065491480576, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:45.895 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m16912438656027pg  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192708
2023-08-05 21:57:45.896 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912438656027pg  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192708
2023-08-05 21:57:45.896 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:45.896 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: DailyTrainSeat [Hash = 1119056395, id=1684918065491480576, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:45 CST 2023]
2023-08-05 21:57:45.897 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:45.897 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865688dte  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192711, branchId:7278238012553192722, lockKeys:confirm_order:1687825221404463104
2023-08-05 21:57:45.897 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:45.896(Timestamp), 1684918065491480576(Long)
2023-08-05 21:57:45.922 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865889nbv  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192727]
2023-08-05 21:57:45.923 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.923 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: ConfirmOrder [Hash = 2109618192, id=1687825222272684032, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:45, updateTime=2023-08-05 21:57:45, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:45.937 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865889nbv  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:45.938 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865889nbv  [0;39m ==> Parameters: 1687825222272684032(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:45.922(Timestamp), 2023-08-05 21:57:45.922(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:45.948 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865688dte  [0;39m <==    Updates: 1
2023-08-05 21:57:45.949 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865688dte  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:45.949 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865688dte  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.949 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865688dte  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4956f908
2023-08-05 21:57:45.950 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865688dte  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:45.951 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865688dte  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:45.966 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865688dte  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:45.967 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865688dte  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:45.968 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865688dte  [0;39m <==      Total: 1
2023-08-05 21:57:45.968 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865688dte  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:45.969 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865688dte  [0;39m 查出余票记录:DailyTrainTicket [Hash = 908418775, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:45.969 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865688dte  [0;39m 本次购票没有选座
2023-08-05 21:57:45.969 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865688dte  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.969 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865688dte  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5e966519
2023-08-05 21:57:45.970 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865688dte  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:45.970 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865688dte  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:45.974 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865789r4h  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192720, branchId:7278238012553192729, lockKeys:confirm_order:1687825221802921984
2023-08-05 21:57:45.982 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865688dte  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:45.983 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865688dte  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:45.984 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865688dte  [0;39m <==      Total: 1
2023-08-05 21:57:45.984 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865688dte  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:45.985 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865688dte  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:45.985 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865688dte  [0;39m 从车厢2选座
2023-08-05 21:57:45.985 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865688dte  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:45.985 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865688dte  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2f7cca8c
2023-08-05 21:57:45.986 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865688dte  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:45.987 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865688dte  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:45.988 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691243865988p0s  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 21:57:45.988 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691243865988p0s  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.988 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691243865988p0s  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 21:57:45.989 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691243865988p0s  [0;39m ------------- 开始 -------------
2023-08-05 21:57:45.990 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691243865988p0s  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 21:57:45.990 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691243865988p0s  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 21:57:45.991 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691243865988p0s  [0;39m 远程地址: 192.168.0.102
2023-08-05 21:57:45.991 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865488khl  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192703, branchId:7278238012553192726, lockKeys:daily_train_seat:1684918065491480576
2023-08-05 21:57:45.991 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691243865988p0s  [0;39m 请求参数: [{"dailyTrainTicketId":1684918068104531968,"date":1690473600000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 21:57:46.000 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:46.001 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:46.002 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:46.002 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:46.003 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:46.003 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:46.004 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:46.005 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:46.006 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:46.006 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:46.008 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:46.009 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:46.009 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691243865988p0s  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553192734]
2023-08-05 21:57:46.010 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:46.010 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:46.010 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: ConfirmOrder [Hash = 1410953690, id=1687825222637588480, memberId=1680932902797447168, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1684918068104531968, status=I, createTime=2023-08-05 21:57:46, updateTime=2023-08-05 21:57:46, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 21:57:46.010 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 00, 2023-07-28 21:25:45.734, 2023-07-28 21:25:45.734
2023-08-05 21:57:46.011 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:46.012 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:46.012 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:46.013 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:46.014 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:46.014 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:46.014 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:46.015 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:46.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:46.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:46.016 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:46.017 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865688dte  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:46.017 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865688dte  [0;39m <==      Total: 25
2023-08-05 21:57:46.017 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865688dte  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865688dte  [0;39m 车厢2的座位数:25
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.018 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.019 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865688dte  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865688dte  [0;39m 无选座
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865688dte  [0;39m 座位13在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:46.020 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865688dte  [0;39m 座位13被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:46.021 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865688dte  [0;39m 选中座位
2023-08-05 21:57:46.021 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865688dte  [0;39m 最终选座:[DailyTrainSeat [Hash = 1583411088, id=1684918065491480576, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:46.021 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865688dte  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192711
2023-08-05 21:57:46.021 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865688dte  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192711
2023-08-05 21:57:46.021 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865688dte  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.021 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865688dte  [0;39m 参数值: DailyTrainSeat [Hash = 1288683695, id=1684918065491480576, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:46 CST 2023]
2023-08-05 21:57:46.022 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865688dte  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:46.022 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865688dte  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:46.021(Timestamp), 1684918065491480576(Long)
2023-08-05 21:57:46.023 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865789r4h  [0;39m <==    Updates: 1
2023-08-05 21:57:46.023 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865988p0s  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 21:57:46.024 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:46.024 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.025 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@741262d5
2023-08-05 21:57:46.025 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865988p0s  [0;39m ==> Parameters: 1687825222637588480(Long), 1680932902797447168(Long), 2023-07-28(Date), 01(String), 温州(String), 杭州(String), 1684918068104531968(Long), I(String), 2023-08-05 21:57:46.01(Timestamp), 2023-08-05 21:57:46.01(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 21:57:46.026 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865789r4h  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:46.026 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865789r4h  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:46.040 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m <==    Updates: 1
2023-08-05 21:57:46.041 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.041 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865488khl  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:46.042 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865488khl  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:46.042 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865488khl  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:46.043 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865488khl  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:46.055 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865789r4h  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:46.056 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 3, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:46.057 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865789r4h  [0;39m <==      Total: 1
2023-08-05 21:57:46.057 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.058 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865789r4h  [0;39m 查出余票记录:DailyTrainTicket [Hash = 514932945, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=3, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:46.058 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865789r4h  [0;39m 本次购票没有选座
2023-08-05 21:57:46.058 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.059 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5ceb1b29
2023-08-05 21:57:46.059 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865789r4h  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:46.060 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865789r4h  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:46.072 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865087sq6  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192693, branchId:7278238012553192731, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:46.075 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865789r4h  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:46.076 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:46.080 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865789r4h  [0;39m <==      Total: 1
2023-08-05 21:57:46.082 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.083 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865789r4h  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:46.084 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865789r4h  [0;39m 从车厢2选座
2023-08-05 21:57:46.085 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.085 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5b6c94ba
2023-08-05 21:57:46.087 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865789r4h  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:46.088 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865789r4h  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:46.108 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:46.111 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:46.115 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:46.114 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865889nbv  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192727, branchId:7278238012553192736, lockKeys:confirm_order:1687825222272684032
2023-08-05 21:57:46.116 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:46.120 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865087sq6  [0;39m <==    Updates: 3
2023-08-05 21:57:46.121 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:46.124 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:46.126 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:46.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:46.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:46.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:46.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:46.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:46.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:46.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 01, 2023-07-28 21:25:45.734, 2023-08-05 21:57:45.812
2023-08-05 21:57:46.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:46.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:46.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:46.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:46.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:46.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:46.150 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:46.151 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:46.151 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:46.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:46.153 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:46.154 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865789r4h  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:46.154 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865789r4h  [0;39m <==      Total: 25
2023-08-05 21:57:46.154 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865789r4h  [0;39m 车厢2的座位数:25
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.155 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.156 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865789r4h  [0;39m 座位13在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865789r4h  [0;39m 无选座
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865789r4h  [0;39m 座位14在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865789r4h  [0;39m 座位14被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:46.158 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865889nbv  [0;39m <==    Updates: 1
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865789r4h  [0;39m 选中座位
2023-08-05 21:57:46.158 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865789r4h  [0;39m 最终选座:[DailyTrainSeat [Hash = 1266255949, id=1684918065600532480, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:46.159 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:46.159 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865789r4h  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192720
2023-08-05 21:57:46.159 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865789r4h  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192720
2023-08-05 21:57:46.159 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.159 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.159 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@841956d
2023-08-05 21:57:46.159 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: DailyTrainSeat [Hash = 913926687, id=1684918065600532480, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:46 CST 2023]
2023-08-05 21:57:46.159 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:46.160 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865889nbv  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:46.160 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:46.159(Timestamp), 1684918065600532480(Long)
2023-08-05 21:57:46.160 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865889nbv  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:46.176 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865889nbv  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:46.177 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 2, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:46.178 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865889nbv  [0;39m <==      Total: 1
2023-08-05 21:57:46.178 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.178 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865889nbv  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1231351827, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=2, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:46.179 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865889nbv  [0;39m 本次购票没有选座
2023-08-05 21:57:46.179 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.179 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@57538b27
2023-08-05 21:57:46.179 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865889nbv  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:46.180 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865889nbv  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:46.197 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865889nbv  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:46.198 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:46.198 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865988p0s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192734, branchId:7278238012553192742, lockKeys:confirm_order:1687825222637588480
2023-08-05 21:57:46.199 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865889nbv  [0;39m <==      Total: 1
2023-08-05 21:57:46.199 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.199 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865889nbv  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:46.199 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865889nbv  [0;39m 从车厢2选座
2023-08-05 21:57:46.199 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.200 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@f113061
2023-08-05 21:57:46.200 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865889nbv  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:46.201 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865889nbv  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:46.486 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:46.486 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:46.487 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:46.488 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:46.488 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:46.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:46.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:46.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:46.490 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:46.491 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:46.491 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:46.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:46.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:46.493 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 01, 2023-07-28 21:25:45.734, 2023-08-05 21:57:45.812
2023-08-05 21:57:46.493 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:46.494 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:46.494 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:46.495 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:46.495 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:46.496 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:46.496 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:46.496 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:46.497 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:46.497 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:46.498 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:46.498 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865889nbv  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:46.499 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865889nbv  [0;39m <==      Total: 25
2023-08-05 21:57:46.499 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.499 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865889nbv  [0;39m 车厢2的座位数:25
2023-08-05 21:57:46.499 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.500 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.500 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691243865988p0s  [0;39m <==    Updates: 1
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.501 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.501 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.501 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.502 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@490eb1bc
2023-08-05 21:57:46.502 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.502 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.502 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.502 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.502 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865988p0s  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 21:57:46.502 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.503 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865988p0s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.503 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865889nbv  [0;39m 座位13在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.504 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865889nbv  [0;39m 无选座
2023-08-05 21:57:46.504 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865889nbv  [0;39m 座位14在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:46.504 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865889nbv  [0;39m 座位14被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:46.504 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865889nbv  [0;39m 选中座位
2023-08-05 21:57:46.504 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865889nbv  [0;39m 最终选座:[DailyTrainSeat [Hash = 710543455, id=1684918065600532480, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:46.504 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865889nbv  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192727
2023-08-05 21:57:46.504 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865889nbv  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192727
2023-08-05 21:57:46.504 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.505 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: DailyTrainSeat [Hash = 367717431, id=1684918065600532480, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:46 CST 2023]
2023-08-05 21:57:46.505 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:46.505 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:46.504(Timestamp), 1684918065600532480(Long)
2023-08-05 21:57:46.516 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865988p0s  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 21:57:46.517 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, 2, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 21:57:46.517 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691243865988p0s  [0;39m <==      Total: 1
2023-08-05 21:57:46.518 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 21:57:46.518 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691243865988p0s  [0;39m 查出余票记录:DailyTrainTicket [Hash = 88820362, id=1684918068104531968, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-79, ydzPrice=5.28, edz=2, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Fri Jul 28 21:25:46 CST 2023, updateTime=Fri Jul 28 21:25:46 CST 2023]
2023-08-05 21:57:46.518 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691243865988p0s  [0;39m 本次购票没有选座
2023-08-05 21:57:46.518 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.518 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@67478191
2023-08-05 21:57:46.519 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865988p0s  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 21:57:46.519 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865988p0s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(String)
2023-08-05 21:57:46.531 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865988p0s  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 21:57:46.532 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918060059856896, 2023-07-28, 01, 2, 2, 25, 5, 5, 2023-07-28 21:25:44.439, 2023-07-28 21:25:44.439
2023-08-05 21:57:46.532 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691243865988p0s  [0;39m <==      Total: 1
2023-08-05 21:57:46.532 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 21:57:46.532 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691243865988p0s  [0;39m 共查出1个符合条件的车厢
2023-08-05 21:57:46.532 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691243865988p0s  [0;39m 从车厢2选座
2023-08-05 21:57:46.533 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.533 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@36801fd3
2023-08-05 21:57:46.533 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865988p0s  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 21:57:46.533 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865988p0s  [0;39m ==> Parameters: 2023-07-28(Date), 01(String), 2(Integer)
2023-08-05 21:57:46.546 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 21:57:46.547 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064228995072, 2023-07-28, 01, 2, 01, A, 2, 1, 01, 2023-07-28 21:25:45.433, 2023-08-05 21:49:15.583
2023-08-05 21:57:46.548 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064342241280, 2023-07-28, 01, 2, 01, B, 2, 2, 01, 2023-07-28 21:25:45.460, 2023-08-05 21:52:06.593
2023-08-05 21:57:46.549 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064447098880, 2023-07-28, 01, 2, 01, C, 2, 3, 01, 2023-07-28 21:25:45.485, 2023-08-05 21:53:49.327
2023-08-05 21:57:46.550 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064551956480, 2023-07-28, 01, 2, 01, D, 2, 4, 01, 2023-07-28 21:25:45.510, 2023-08-05 21:53:49.659
2023-08-05 21:57:46.551 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064656814080, 2023-07-28, 01, 2, 01, F, 2, 5, 01, 2023-07-28 21:25:45.535, 2023-08-05 21:53:49.869
2023-08-05 21:57:46.552 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064753283072, 2023-07-28, 01, 2, 02, A, 2, 6, 01, 2023-07-28 21:25:45.558, 2023-08-05 21:53:49.945
2023-08-05 21:57:46.553 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064870723584, 2023-07-28, 01, 2, 02, B, 2, 7, 01, 2023-07-28 21:25:45.586, 2023-08-05 21:54:27.095
2023-08-05 21:57:46.554 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918064971386880, 2023-07-28, 01, 2, 02, C, 2, 8, 01, 2023-07-28 21:25:45.610, 2023-08-05 21:57:45.459
2023-08-05 21:57:46.555 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065067855872, 2023-07-28, 01, 2, 02, D, 2, 9, 01, 2023-07-28 21:25:45.632, 2023-08-05 21:54:27.622
2023-08-05 21:57:46.556 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065168519168, 2023-07-28, 01, 2, 02, F, 2, 10, 01, 2023-07-28 21:25:45.657, 2023-08-05 21:54:28.074
2023-08-05 21:57:46.557 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065269182464, 2023-07-28, 01, 2, 03, A, 2, 11, 01, 2023-07-28 21:25:45.681, 2023-08-05 21:54:36.086
2023-08-05 21:57:46.558 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065386622976, 2023-07-28, 01, 2, 03, B, 2, 12, 01, 2023-07-28 21:25:45.709, 2023-08-05 21:54:36.997
2023-08-05 21:57:46.559 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065491480576, 2023-07-28, 01, 2, 03, C, 2, 13, 01, 2023-07-28 21:25:45.734, 2023-08-05 21:57:45.812
2023-08-05 21:57:46.560 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065600532480, 2023-07-28, 01, 2, 03, D, 2, 14, 00, 2023-07-28 21:25:45.760, 2023-07-28 21:25:45.760
2023-08-05 21:57:46.561 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065701195776, 2023-07-28, 01, 2, 03, F, 2, 15, 00, 2023-07-28 21:25:45.784, 2023-07-28 21:25:45.784
2023-08-05 21:57:46.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918065801859072, 2023-07-28, 01, 2, 04, A, 2, 16, 00, 2023-07-28 21:25:45.808, 2023-07-28 21:25:45.808
2023-08-05 21:57:46.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066011574272, 2023-07-28, 01, 2, 04, B, 2, 17, 00, 2023-07-28 21:25:45.858, 2023-07-28 21:25:45.858
2023-08-05 21:57:46.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066120626176, 2023-07-28, 01, 2, 04, C, 2, 18, 00, 2023-07-28 21:25:45.884, 2023-07-28 21:25:45.884
2023-08-05 21:57:46.565 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066221289472, 2023-07-28, 01, 2, 04, D, 2, 19, 00, 2023-07-28 21:25:45.907, 2023-07-28 21:25:45.907
2023-08-05 21:57:46.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066321952768, 2023-07-28, 01, 2, 04, F, 2, 20, 00, 2023-07-28 21:25:45.931, 2023-07-28 21:25:45.931
2023-08-05 21:57:46.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066418421760, 2023-07-28, 01, 2, 05, A, 2, 21, 00, 2023-07-28 21:25:45.955, 2023-07-28 21:25:45.955
2023-08-05 21:57:46.568 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066514890752, 2023-07-28, 01, 2, 05, B, 2, 22, 00, 2023-07-28 21:25:45.978, 2023-07-28 21:25:45.978
2023-08-05 21:57:46.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066611359744, 2023-07-28, 01, 2, 05, C, 2, 23, 00, 2023-07-28 21:25:46, 2023-07-28 21:25:46
2023-08-05 21:57:46.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066737188864, 2023-07-28, 01, 2, 05, D, 2, 24, 00, 2023-07-28 21:25:46.031, 2023-07-28 21:25:46.031
2023-08-05 21:57:46.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691243865988p0s  [0;39m <==        Row: 1684918066842046464, 2023-07-28, 01, 2, 05, F, 2, 25, 00, 2023-07-28 21:25:46.055, 2023-07-28 21:25:46.055
2023-08-05 21:57:46.572 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691243865988p0s  [0;39m <==      Total: 25
2023-08-05 21:57:46.572 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 21:57:46.573 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691243865988p0s  [0;39m 车厢2的座位数:25
2023-08-05 21:57:46.574 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.574 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.574 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.574 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.575 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.575 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.575 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.575 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.575 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.576 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.576 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.576 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.576 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.576 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.577 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.577 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位8在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.577 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.577 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位9在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.578 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.578 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位10在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.578 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.578 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位11在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.578 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.579 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位12在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.579 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.579 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691243865988p0s  [0;39m 座位13在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 21:57:46.579 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691243865988p0s  [0;39m 无选座
2023-08-05 21:57:46.580 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691243865988p0s  [0;39m 座位14在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 21:57:46.580 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691243865988p0s  [0;39m 座位14被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 21:57:46.580 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691243865988p0s  [0;39m 选中座位
2023-08-05 21:57:46.580 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691243865988p0s  [0;39m 最终选座:[DailyTrainSeat [Hash = 852509475, id=1684918065600532480, date=Fri Jul 28 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=01, createTime=Fri Jul 28 21:25:45 CST 2023, updateTime=Fri Jul 28 21:25:45 CST 2023]]
2023-08-05 21:57:46.581 INFO  io.seata.tm.api.TransactionalTemplate             :117  [32m1691243865988p0s  [0;39m join into a existing global transaction,xid=192.168.0.102:8091:7278238012553192734
2023-08-05 21:57:46.581 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691243865988p0s  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553192734
2023-08-05 21:57:46.581 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.582 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: DailyTrainSeat [Hash = 726515202, id=1684918065600532480, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 21:57:46 CST 2023]
2023-08-05 21:57:46.582 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 21:57:46.583 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m ==> Parameters: 01(String), 2023-08-05 21:57:46.581(Timestamp), 1684918065600532480(Long)
2023-08-05 21:57:46.626 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865087sq6  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:46.626 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865087sq6  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:46.627 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865087sq6  [0;39m 参数值: ConfirmOrder [Hash = 1132231671, id=1687825218967572480, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:46 CST 2023, tickets=null]
2023-08-05 21:57:46.641 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:46.642 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:46.626(Timestamp), 1687825218967572480(Long)
2023-08-05 21:57:46.658 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865789r4h  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192720, branchId:7278238012553192752, lockKeys:daily_train_seat:1684918065600532480
2023-08-05 21:57:46.705 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m <==    Updates: 1
2023-08-05 21:57:46.706 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:46.707 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865789r4h  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:46.708 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865789r4h  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:46.709 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865789r4h  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:46.710 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865789r4h  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:46.814 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865087sq6  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192693, branchId:7278238012553192772, lockKeys:confirm_order:1687825218967572480
2023-08-05 21:57:46.814 ERROR io.seata.core.rpc.netty.AbstractNettyRemoting     :309  [32m                  [0;39m 0104
java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
	at io.seata.core.rpc.processor.client.ClientOnResponseProcessor.process(ClientOnResponseProcessor.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemoting.processMessage(AbstractNettyRemoting.java:307)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$ClientHandler.channelRead(AbstractNettyRemotingClient.java:419)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 21:57:46.849 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865087sq6  [0;39m <==    Updates: 1
2023-08-05 21:57:46.850 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865087sq6  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:46.850 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865087sq6  [0;39m transaction 192.168.0.102:8091:7278238012553192693 will be commit
2023-08-05 21:57:46.922 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865087sq6  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192693
2023-08-05 21:57:46.922 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865087sq6  [0;39m [192.168.0.102:8091:7278238012553192693] commit status: Committed
2023-08-05 21:57:46.923 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865087sq6  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:46.923 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865087sq6  [0;39m ------------- 结束 耗时：1830 ms -------------
2023-08-05 21:57:46.974 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865200ght  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192694, branchId:7278238012553192782, lockKeys:daily_train_seat:1684918064971386880
2023-08-05 21:57:47.017 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m <==    Updates: 1
2023-08-05 21:57:47.018 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:47.018 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865200ght  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:47.018 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865200ght  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:47.018 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865200ght  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:47.019 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865200ght  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:47.048 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865789r4h  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192720, branchId:7278238012553192785, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:47.094 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865789r4h  [0;39m <==    Updates: 3
2023-08-05 21:57:47.290 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865789r4h  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:47.290 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865789r4h  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:47.290 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865789r4h  [0;39m 参数值: ConfirmOrder [Hash = 436362413, id=1687825221802921984, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:47 CST 2023, tickets=null]
2023-08-05 21:57:47.291 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:47.291 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:47.29(Timestamp), 1687825221802921984(Long)
2023-08-05 21:57:47.442 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865789r4h  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192720, branchId:7278238012553192807, lockKeys:confirm_order:1687825221802921984
2023-08-05 21:57:47.489 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865789r4h  [0;39m <==    Updates: 1
2023-08-05 21:57:47.489 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865789r4h  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:47.490 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865789r4h  [0;39m transaction 192.168.0.102:8091:7278238012553192720 will be commit
2023-08-05 21:57:47.565 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865789r4h  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192720
2023-08-05 21:57:47.566 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865789r4h  [0;39m [192.168.0.102:8091:7278238012553192720] commit status: Committed
2023-08-05 21:57:47.566 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865789r4h  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:47.566 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865789r4h  [0;39m ------------- 结束 耗时：1773 ms -------------
2023-08-05 21:57:47.692 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865200ght  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192694, branchId:7278238012553192818, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:47.735 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865988p0s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192734, branchId:7278238012553192820, lockKeys:daily_train_seat:1684918065600532480
2023-08-05 21:57:47.746 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192720', branchId=7278238012553192729, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:47.746 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192693', branchId=7278238012553192696, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:47.747 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192693 7278238012553192696 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:47.747 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192720 7278238012553192729 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:47.747 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.747 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.749 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865200ght  [0;39m <==    Updates: 3
2023-08-05 21:57:47.761 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192693', branchId=7278238012553192710, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.762 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192693 7278238012553192710 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.762 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.765 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192720', branchId=7278238012553192752, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.766 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192720 7278238012553192752 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.766 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.774 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m <==    Updates: 1
2023-08-05 21:57:47.775 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:47.776 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865988p0s  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:47.776 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865988p0s  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:47.777 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192693', branchId=7278238012553192731, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.777 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192693 7278238012553192731 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.778 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.777 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865988p0s  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:47.778 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865988p0s  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:47.783 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192720', branchId=7278238012553192785, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.784 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192720 7278238012553192785 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.784 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.809 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192693', branchId=7278238012553192772, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.810 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192693 7278238012553192772 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.810 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.822 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192720', branchId=7278238012553192807, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:47.822 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192720 7278238012553192807 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:47.822 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:47.950 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865200ght  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:47.950 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865200ght  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:47.950 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865200ght  [0;39m 参数值: ConfirmOrder [Hash = 1040305520, id=1687825219332476928, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:47 CST 2023, tickets=null]
2023-08-05 21:57:47.951 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:47.951 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:47.95(Timestamp), 1687825219332476928(Long)
2023-08-05 21:57:48.124 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865200ght  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192694, branchId:7278238012553192852, lockKeys:confirm_order:1687825219332476928
2023-08-05 21:57:48.172 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865200ght  [0;39m <==    Updates: 1
2023-08-05 21:57:48.173 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865200ght  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:48.173 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865200ght  [0;39m transaction 192.168.0.102:8091:7278238012553192694 will be commit
2023-08-05 21:57:48.241 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865200ght  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192694
2023-08-05 21:57:48.242 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865200ght  [0;39m [192.168.0.102:8091:7278238012553192694] commit status: Committed
2023-08-05 21:57:48.242 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865200ght  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:48.242 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865200ght  [0;39m ------------- 结束 耗时：3041 ms -------------
2023-08-05 21:57:48.420 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124386528712s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192697, branchId:7278238012553192865, lockKeys:daily_train_seat:1684918064971386880
2023-08-05 21:57:48.436 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865488khl  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192703, branchId:7278238012553192863, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:48.457 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m <==    Updates: 1
2023-08-05 21:57:48.457 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:48.457 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m169124386528712s  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:48.458 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m169124386528712s  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:48.458 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124386528712s  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:48.459 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124386528712s  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:48.482 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865488khl  [0;39m <==    Updates: 3
2023-08-05 21:57:48.714 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865488khl  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:48.715 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865488khl  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:48.716 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865488khl  [0;39m 参数值: ConfirmOrder [Hash = 731943825, id=1687825220519464960, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:48 CST 2023, tickets=null]
2023-08-05 21:57:48.717 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:48.718 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:48.715(Timestamp), 1687825220519464960(Long)
2023-08-05 21:57:48.733 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192694', branchId=7278238012553192699, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:48.734 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192694 7278238012553192699 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:48.734 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:48.773 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192694', branchId=7278238012553192782, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:48.774 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192694 7278238012553192782 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:48.774 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:48.794 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192694', branchId=7278238012553192818, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:48.795 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192694 7278238012553192818 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:48.795 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:48.859 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192694', branchId=7278238012553192852, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:48.859 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192694 7278238012553192852 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:48.859 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:48.893 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865488khl  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192703, branchId:7278238012553192893, lockKeys:confirm_order:1687825220519464960
2023-08-05 21:57:48.932 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865488khl  [0;39m <==    Updates: 1
2023-08-05 21:57:48.933 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865488khl  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:48.933 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865488khl  [0;39m transaction 192.168.0.102:8091:7278238012553192703 will be commit
2023-08-05 21:57:48.997 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865488khl  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192703
2023-08-05 21:57:48.997 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865488khl  [0;39m [192.168.0.102:8091:7278238012553192703] commit status: Committed
2023-08-05 21:57:48.998 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865488khl  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:48.998 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865488khl  [0;39m ------------- 结束 耗时：3509 ms -------------
2023-08-05 21:57:49.200 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865988p0s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192734, branchId:7278238012553192906, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:49.236 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865988p0s  [0;39m <==    Updates: 3
2023-08-05 21:57:49.440 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865988p0s  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:49.440 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865988p0s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:49.441 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865988p0s  [0;39m 参数值: ConfirmOrder [Hash = 405683933, id=1687825222637588480, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:49 CST 2023, tickets=null]
2023-08-05 21:57:49.441 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:49.442 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:49.44(Timestamp), 1687825222637588480(Long)
2023-08-05 21:57:49.647 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865988p0s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192734, branchId:7278238012553192924, lockKeys:confirm_order:1687825222637588480
2023-08-05 21:57:49.695 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865988p0s  [0;39m <==    Updates: 1
2023-08-05 21:57:49.696 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865988p0s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:49.697 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865988p0s  [0;39m transaction 192.168.0.102:8091:7278238012553192734 will be commit
2023-08-05 21:57:49.724 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192703', branchId=7278238012553192707, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:49.725 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192703 7278238012553192707 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:49.725 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:49.740 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192703', branchId=7278238012553192726, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:49.740 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192703 7278238012553192726 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:49.740 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:49.754 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865988p0s  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192734
2023-08-05 21:57:49.754 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865988p0s  [0;39m [192.168.0.102:8091:7278238012553192734] commit status: Committed
2023-08-05 21:57:49.755 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192703', branchId=7278238012553192863, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:49.755 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192703 7278238012553192863 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:49.755 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865988p0s  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:49.755 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:49.755 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865988p0s  [0;39m ------------- 结束 耗时：3766 ms -------------
2023-08-05 21:57:49.784 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192703', branchId=7278238012553192893, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:49.785 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192703 7278238012553192893 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:49.785 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:49.944 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865889nbv  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192727, branchId:7278238012553192946, lockKeys:daily_train_seat:1684918065600532480
2023-08-05 21:57:49.953 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124386528712s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192697, branchId:7278238012553192944, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:49.983 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m <==    Updates: 1
2023-08-05 21:57:49.983 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:49.984 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865889nbv  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:49.984 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865889nbv  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:49.984 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865889nbv  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:49.985 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865889nbv  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:49.992 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124386528712s  [0;39m <==    Updates: 3
2023-08-05 21:57:50.202 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m169124386528712s  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:50.203 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124386528712s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:50.203 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124386528712s  [0;39m 参数值: ConfirmOrder [Hash = 1140570472, id=1687825219684798464, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:50 CST 2023, tickets=null]
2023-08-05 21:57:50.204 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:50.205 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:50.203(Timestamp), 1687825219684798464(Long)
2023-08-05 21:57:50.375 INFO  io.seata.rm.AbstractResourceManager               :73   [32m169124386528712s  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192697, branchId:7278238012553192960, lockKeys:confirm_order:1687825219684798464
2023-08-05 21:57:50.415 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124386528712s  [0;39m <==    Updates: 1
2023-08-05 21:57:50.416 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124386528712s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:50.417 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m169124386528712s  [0;39m transaction 192.168.0.102:8091:7278238012553192697 will be commit
2023-08-05 21:57:50.488 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m169124386528712s  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192697
2023-08-05 21:57:50.488 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m169124386528712s  [0;39m [192.168.0.102:8091:7278238012553192697] commit status: Committed
2023-08-05 21:57:50.489 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124386528712s  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:50.489 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124386528712s  [0;39m ------------- 结束 耗时：5200 ms -------------
2023-08-05 21:57:50.688 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865889nbv  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192727, branchId:7278238012553192967, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:50.719 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865390y4c  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192702, branchId:7278238012553192969, lockKeys:daily_train_seat:1684918064971386880
2023-08-05 21:57:50.730 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865889nbv  [0;39m <==    Updates: 3
2023-08-05 21:57:50.756 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192697', branchId=7278238012553192701, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:50.756 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192734', branchId=7278238012553192742, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:50.756 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192697 7278238012553192701 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:50.757 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.756 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192734 7278238012553192742 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:50.757 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.757 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m <==    Updates: 1
2023-08-05 21:57:50.757 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:57:50.757 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691243865390y4c  [0;39m 影响出发站区间:0-1
2023-08-05 21:57:50.758 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691243865390y4c  [0;39m 影响到达站区间:0-2
2023-08-05 21:57:50.758 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865390y4c  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:57:50.759 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865390y4c  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:57:50.774 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192697', branchId=7278238012553192865, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.774 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192697 7278238012553192865 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.774 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.775 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192734', branchId=7278238012553192820, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.775 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192734 7278238012553192820 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.776 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.791 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192697', branchId=7278238012553192944, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.791 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192697 7278238012553192944 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.791 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.792 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192734', branchId=7278238012553192906, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.792 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192734 7278238012553192906 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.792 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.831 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192697', branchId=7278238012553192960, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.831 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192734', branchId=7278238012553192924, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:50.831 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192697 7278238012553192960 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.831 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192734 7278238012553192924 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:50.831 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.831 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:50.935 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865889nbv  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:50.935 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865889nbv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:50.935 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865889nbv  [0;39m 参数值: ConfirmOrder [Hash = 178237312, id=1687825222272684032, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:50 CST 2023, tickets=null]
2023-08-05 21:57:50.936 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:50.936 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:50.935(Timestamp), 1687825222272684032(Long)
2023-08-05 21:57:51.129 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865889nbv  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192727, branchId:7278238012553192983, lockKeys:confirm_order:1687825222272684032
2023-08-05 21:57:51.169 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865889nbv  [0;39m <==    Updates: 1
2023-08-05 21:57:51.169 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865889nbv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:51.170 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865889nbv  [0;39m transaction 192.168.0.102:8091:7278238012553192727 will be commit
2023-08-05 21:57:51.235 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865889nbv  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192727
2023-08-05 21:57:51.236 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865889nbv  [0;39m [192.168.0.102:8091:7278238012553192727] commit status: Committed
2023-08-05 21:57:51.236 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865889nbv  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:51.236 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865889nbv  [0;39m ------------- 结束 耗时：5345 ms -------------
2023-08-05 21:57:51.488 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865390y4c  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192702, branchId:7278238012553192988, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:57:51.540 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691243865390y4c  [0;39m <==    Updates: 3
2023-08-05 21:57:51.754 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192727', branchId=7278238012553192736, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:51.754 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192727 7278238012553192736 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:51.754 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:51.771 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192727', branchId=7278238012553192946, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:51.771 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192727 7278238012553192946 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:51.772 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:51.793 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192727', branchId=7278238012553192967, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:51.794 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192727 7278238012553192967 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:51.794 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:51.825 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192727', branchId=7278238012553192983, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:51.825 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192727 7278238012553192983 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:51.826 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:51.828 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691243865390y4c  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:57:51.829 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691243865390y4c  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:51.829 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691243865390y4c  [0;39m 参数值: ConfirmOrder [Hash = 83069292, id=1687825220121006080, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:57:51 CST 2023, tickets=null]
2023-08-05 21:57:51.830 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:57:51.830 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m ==> Parameters: S(String), 2023-08-05 21:57:51.829(Timestamp), 1687825220121006080(Long)
2023-08-05 21:57:51.974 INFO  io.seata.rm.AbstractResourceManager               :73   [32m1691243865390y4c  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192702, branchId:7278238012553192996, lockKeys:confirm_order:1687825220121006080
2023-08-05 21:57:52.013 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691243865390y4c  [0;39m <==    Updates: 1
2023-08-05 21:57:52.013 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865390y4c  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:57:52.014 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691243865390y4c  [0;39m transaction 192.168.0.102:8091:7278238012553192702 will be commit
2023-08-05 21:57:52.088 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865390y4c  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192702
2023-08-05 21:57:52.088 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691243865390y4c  [0;39m [192.168.0.102:8091:7278238012553192702] commit status: Committed
2023-08-05 21:57:52.089 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691243865390y4c  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:57:52.089 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691243865390y4c  [0;39m ------------- 结束 耗时：6696 ms -------------
2023-08-05 21:57:52.722 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192702', branchId=7278238012553192705, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:57:52.722 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192702 7278238012553192705 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:57:52.723 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:52.738 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192702', branchId=7278238012553192969, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:52.739 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192702 7278238012553192969 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:52.739 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:52.754 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192702', branchId=7278238012553192988, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:52.755 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192702 7278238012553192988 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:52.755 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:57:52.788 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192702', branchId=7278238012553192996, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:57:52.788 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192702 7278238012553192996 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:57:52.788 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:58:01.712 ERROR i.seata.core.rpc.netty.AbstractNettyRemotingClient:176  [32m1691243865688dte  [0;39m wait response error:null ,cost: 15006 ms,ip:192.168.0.102:8091,request:BranchRegisterRequest{xid='192.168.0.102:8091:7278238012553192711', branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', lockKey='daily_train_seat:1684918065491480576', applicationData='null'}
2023-08-05 21:58:01.725 ERROR i.seata.rm.datasource.exec.AbstractDMLBaseExecutor:151  [32m1691243865688dte  [0;39m execute executeAutoCommitTrue error:io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15006 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:58:01.739 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691243865688dte  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:58:01.739 WARN  io.seata.tm.api.TransactionalTemplate             :281  [32m1691243865688dte  [0;39m 192.168.0.102:8091:7278238012553192711 rollback in the state Begin
2023-08-05 21:58:01.739 ERROR com.jktickets.service.ConfirmOrderService         :253  [32m1691243865688dte  [0;39m 保存购票信息失败
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
### The error may exist in file [D:\Project\java\jk-tickets\business-service\target\classes\mapper\DailyTrainSeatMapper.xml]
### The error may involve com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective-Inline
### The error occurred while setting parameters
### SQL: update daily_train_seat      SET sell = ?,                              update_time = ?      where id = ?
### Cause: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
; uncategorized SQLException; SQL state [null]; error code [0]; io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy114.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy123.updateByPrimaryKeySelective(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor206.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy3/jdk.proxy3.$Proxy124.updateByPrimaryKeySelective(Unknown Source)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl.afterDoConfirm(AfterConfirmOrderServiceImpl.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor205.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.AfterConfirmOrderServiceImpl$$SpringCGLIB$$0.afterDoConfirm(<generated>)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl.doConfirm(ConfirmOrderServiceImpl.java:251)
	at jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:208)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:128)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:205)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:175)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.service.impl.ConfirmOrderServiceImpl$$SpringCGLIB$$0.doConfirm(<generated>)
	at com.jktickets.controller.ConfirmOrderController.doConfirm(ConfirmOrderController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jktickets.aspect.LogAspect.doAround(LogAspect.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:623)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.jktickets.controller.ConfirmOrderController$$SpringCGLIB$$0.doConfirm(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1003)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:906)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:880)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLException: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
	at io.seata.rm.datasource.ConnectionProxy.recognizeLockKeyConflictException(ConnectionProxy.java:161)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:252)
	at io.seata.rm.datasource.ConnectionProxy.doCommit(ConnectionProxy.java:230)
	at io.seata.rm.datasource.ConnectionProxy.lambda$commit$0(ConnectionProxy.java:188)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.execute(ConnectionProxy.java:344)
	at io.seata.rm.datasource.ConnectionProxy.commit(ConnectionProxy.java:187)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.lambda$executeAutoCommitTrue$2(AbstractDMLBaseExecutor.java:146)
	at io.seata.rm.datasource.ConnectionProxy$LockRetryPolicy.doRetryOnLockConflict(ConnectionProxy.java:356)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor$LockRetryPolicy.execute(AbstractDMLBaseExecutor.java:188)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.executeAutoCommitTrue(AbstractDMLBaseExecutor.java:144)
	at io.seata.rm.datasource.exec.AbstractDMLBaseExecutor.doExecute(AbstractDMLBaseExecutor.java:83)
	at io.seata.rm.datasource.exec.BaseTransactionalExecutor.execute(BaseTransactionalExecutor.java:125)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:137)
	at io.seata.rm.datasource.exec.ExecuteTemplate.execute(ExecuteTemplate.java:56)
	at io.seata.rm.datasource.PreparedStatementProxy.execute(PreparedStatementProxy.java:55)
	at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy4/jdk.proxy4.$Proxy181.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at jdk.proxy2/jdk.proxy2.$Proxy180.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 127 common frames omitted
Caused by: io.seata.core.exception.RmTransactionException: branch register timeout, xid:192.168.0.102:8091:7278238012553192711
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:77)
	at io.seata.rm.DefaultResourceManager.branchRegister(DefaultResourceManager.java:96)
	at io.seata.rm.datasource.ConnectionProxy.register(ConnectionProxy.java:273)
	at io.seata.rm.datasource.ConnectionProxy.processGlobalTransactionCommit(ConnectionProxy.java:250)
	... 160 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null ,cost: 15006 ms
	at io.seata.core.protocol.MessageFuture.get(MessageFuture.java:65)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:174)
	at io.seata.rm.AbstractResourceManager.branchRegister(AbstractResourceManager.java:67)
	... 163 common frames omitted
2023-08-05 21:58:01.740 INFO  io.seata.tm.api.DefaultGlobalTransaction          :171  [32m1691243865688dte  [0;39m transaction 192.168.0.102:8091:7278238012553192711 will be rollback
2023-08-05 21:58:01.813 INFO  i.s.c.r.processor.client.RmBranchRollbackProcessor:56   [32m                  [0;39m rm handle branch rollback process:BranchRollbackRequest{xid='192.168.0.102:8091:7278238012553192711', branchId=7278238012553192722, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:58:01.813 INFO  io.seata.rm.AbstractRMHandler                     :123  [32m                  [0;39m Branch Rollbacking: 192.168.0.102:8091:7278238012553192711 7278238012553192722 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 21:58:01.876 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912438656027pg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192708, branchId:7278238012553193021, lockKeys:daily_train_seat:1684918065491480576
2023-08-05 21:58:01.903 INFO  i.seata.rm.datasource.undo.AbstractUndoLogManager :338  [32m                  [0;39m xid 192.168.0.102:8091:7278238012553192711 branch 7278238012553192722, undo_log deleted with GlobalFinished
2023-08-05 21:58:01.924 INFO  io.seata.rm.datasource.DataSourceManager          :124  [32m                  [0;39m branch rollback success, xid:192.168.0.102:8091:7278238012553192711, branchId:7278238012553192722
2023-08-05 21:58:01.924 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m <==    Updates: 1
2023-08-05 21:58:01.924 INFO  io.seata.rm.AbstractRMHandler                     :131  [32m                  [0;39m Branch Rollbacked result: PhaseTwo_Rollbacked
2023-08-05 21:58:01.925 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 21:58:01.926 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912438656027pg  [0;39m 影响出发站区间:0-1
2023-08-05 21:58:01.926 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912438656027pg  [0;39m 影响到达站区间:0-2
2023-08-05 21:58:01.928 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912438656027pg  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 21:58:01.929 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912438656027pg  [0;39m ==> Parameters: 2023-07-28 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 21:58:01.966 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691243865688dte  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192711
2023-08-05 21:58:01.966 INFO  io.seata.tm.api.DefaultGlobalTransaction          :193  [32m1691243865688dte  [0;39m [192.168.0.102:8091:7278238012553192711] rollback status: Rollbacked
2023-08-05 21:58:01.968 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691243865688dte  [0;39m 业务异常:服务器忙,请稍后重试/下单错误
2023-08-05 21:58:01.970 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691243865688dte  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='服务器忙,请稍后重试/下单错误'})]
2023-08-05 21:58:02.211 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912438656027pg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192708, branchId:7278238012553193023, lockKeys:daily_train_ticket:1684918067324391424,1684918067680907264,1684918068104531968
2023-08-05 21:58:02.248 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912438656027pg  [0;39m <==    Updates: 3
2023-08-05 21:58:02.496 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912438656027pg  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 21:58:02.497 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912438656027pg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:58:02.497 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912438656027pg  [0;39m 参数值: ConfirmOrder [Hash = 988238291, id=1687825221022781440, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 21:58:02 CST 2023, tickets=null]
2023-08-05 21:58:02.498 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 21:58:02.499 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m ==> Parameters: S(String), 2023-08-05 21:58:02.497(Timestamp), 1687825221022781440(Long)
2023-08-05 21:58:02.663 INFO  io.seata.rm.AbstractResourceManager               :73   [32m16912438656027pg  [0;39m branch register success, xid:192.168.0.102:8091:7278238012553192708, branchId:7278238012553193027, lockKeys:confirm_order:1687825221022781440
2023-08-05 21:58:02.704 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912438656027pg  [0;39m <==    Updates: 1
2023-08-05 21:58:02.704 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912438656027pg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 21:58:02.705 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912438656027pg  [0;39m transaction 192.168.0.102:8091:7278238012553192708 will be commit
2023-08-05 21:58:02.802 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912438656027pg  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553192708
2023-08-05 21:58:02.802 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912438656027pg  [0;39m [192.168.0.102:8091:7278238012553192708] commit status: Committed
2023-08-05 21:58:02.803 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912438656027pg  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 21:58:02.803 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912438656027pg  [0;39m ------------- 结束 耗时：17198 ms -------------
2023-08-05 21:58:03.725 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192708', branchId=7278238012553192713, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='{"skipCheckLock":true}'}
2023-08-05 21:58:03.725 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192708 7278238012553192713 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business {"skipCheckLock":true}
2023-08-05 21:58:03.725 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:58:03.739 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192708', branchId=7278238012553193021, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:58:03.740 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192708 7278238012553193021 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:58:03.740 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:58:03.753 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192708', branchId=7278238012553193023, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:58:03.753 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192708 7278238012553193023 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:58:03.753 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 21:58:03.780 INFO  i.s.c.rpc.processor.client.RmBranchCommitProcessor:56   [32m                  [0;39m rm client handle branch commit process:BranchCommitRequest{xid='192.168.0.102:8091:7278238012553192708', branchId=7278238012553193027, branchType=AT, resourceId='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', applicationData='null'}
2023-08-05 21:58:03.780 INFO  io.seata.rm.AbstractRMHandler                     :96   [32m                  [0;39m Branch committing: 192.168.0.102:8091:7278238012553192708 7278238012553193027 jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business null
2023-08-05 21:58:03.780 INFO  io.seata.rm.AbstractRMHandler                     :104  [32m                  [0;39m Branch commit result: PhaseTwo_Committed
2023-08-05 22:02:34.534 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :102  [32m                  [0;39m [HttpClientBeanHolder] Start destroying common HttpClient
2023-08-05 22:02:34.534 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :136  [32m                  [0;39m [NotifyCenter] Start destroying Publisher
2023-08-05 22:02:34.535 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :153  [32m                  [0;39m [NotifyCenter] Destruction of the end
2023-08-05 22:02:34.535 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :111  [32m                  [0;39m [HttpClientBeanHolder] Destruction of the end
2023-08-05 22:02:34.589 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :95   [32m                  [0;39m De-registering from Nacos Server now...
2023-08-05 22:02:34.589 INFO  com.alibaba.nacos.client.naming                   :217  [32m                  [0;39m [DEREGISTER-SERVICE] train deregistering service business-service with instance: Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2023-08-05 22:02:34.593 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :115  [32m                  [0;39m De-registration finished.
2023-08-05 22:02:34.594 INFO  com.alibaba.nacos.client.naming                   :256  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2023-08-05 22:02:34.594 INFO  com.alibaba.nacos.client.naming                   :136  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2023-08-05 22:02:34.595 INFO  com.alibaba.nacos.client.naming                   :138  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2023-08-05 22:02:34.595 INFO  com.alibaba.nacos.client.naming                   :258  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2023-08-05 22:02:34.595 INFO  com.alibaba.nacos.client.naming                   :204  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2023-08-05 22:02:34.595 INFO  com.alibaba.nacos.client.naming                   :143  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2023-08-05 22:02:34.595 INFO  com.alibaba.nacos.client.naming                   :145  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.client.naming                   :194  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2023-08-05 22:02:34.596 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:02:34.596 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.client.naming                   :199  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.client.naming                   :484  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2023-08-05 22:02:34.596 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:02:34.596 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.client.naming                   :486  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.common.remote.client            :429  [32m                  [0;39m Shutdown rpc client, set status to shutdown
2023-08-05 22:02:34.596 INFO  com.alibaba.nacos.common.remote.client            :431  [32m                  [0;39m Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@651ad8fd[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2023-08-05 22:02:34.597 INFO  com.alibaba.nacos.common.remote.client            :584  [32m                  [0;39m Close current connection 1691243332621_127.0.0.1_59360
2023-08-05 22:02:34.598 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :63   [32m                  [0;39m [1691243332621_127.0.0.1_59360]Ignore complete event,isRunning:false,isAbandon=false
2023-08-05 22:02:34.604 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :159  [32m                  [0;39m Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@67aa6613[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 176]
2023-08-05 22:02:34.604 INFO  com.alibaba.nacos.client.naming                   :318  [32m                  [0;39m Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@156aa22[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 273]
2023-08-05 22:02:34.605 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :106  [32m                  [0;39m [null] CredentialWatcher is stopped
2023-08-05 22:02:34.605 INFO  c.a.n.client.auth.ram.identify.CredentialService  :100  [32m                  [0;39m [null] CredentialService is freed
2023-08-05 22:02:34.605 INFO  com.alibaba.nacos.client.naming                   :211  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2023-08-05 22:02:34.740 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m                  [0;39m HikariPool-1 - Shutdown initiated...
2023-08-05 22:02:34.754 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m                  [0;39m HikariPool-1 - Shutdown completed.
2023-08-05 22:02:34.755 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.755 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.755 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.756 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.756 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:02:34.756 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x31a5cc01, L:/192.168.0.102:59347 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:02:34.757 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.757 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.757 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.757 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]
2023-08-05 22:02:34.758 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:02:34.758 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x86b8be98, L:/192.168.0.102:59350 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:02:40.232 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:02:40.258 INFO  org.hibernate.validator.internal.util.Version     :21   [32m                  [0;39m HV000001: Hibernate Validator 8.0.0.Final
2023-08-05 22:02:40.352 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:02:40.410 INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor :250  [32m                  [0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-05 22:02:40.763 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:02:40.767 INFO  com.alibaba.nacos.client.utils.ParamUtil          :87   [32m                  [0;39m [settings] [req-serv] nacos-server port:8848
2023-08-05 22:02:40.768 INFO  com.alibaba.nacos.client.utils.ParamUtil          :98   [32m                  [0;39m [settings] [http-client] connect timeout:1000
2023-08-05 22:02:40.770 INFO  com.alibaba.nacos.client.utils.ParamUtil          :105  [32m                  [0;39m PER_TASK_CONFIG_SIZE: 3000.0
2023-08-05 22:02:40.827 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:02:40.827 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:02:40.832 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :165  [32m                  [0;39m null No credential found
2023-08-05 22:02:41.574 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:02:41.598 INFO  c.a.n.client.config.impl.LocalConfigInfoProcessor :63   [32m                  [0;39m LOCAL_SNAPSHOT_PATH:C:\Users\Administrator\nacos\config
2023-08-05 22:02:41.610 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 845271fe-bb8f-4386-8c25-70a5830a75c2_config-0
2023-08-05 22:02:41.657 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$589/0x0000000800f6fd00
2023-08-05 22:02:41.658 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$590/0x0000000800f70200
2023-08-05 22:02:41.659 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-05 22:02:41.660 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-05 22:02:41.677 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:02:41.734 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:02:43.853 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244163592_127.0.0.1_59788
2023-08-05 22:02:43.855 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Notify connected event to listeners.
2023-08-05 22:02:43.855 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Connected,notify listen context...
2023-08-05 22:02:43.855 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:02:43.856 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [845271fe-bb8f-4386-8c25-70a5830a75c2_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-05 22:02:43.937 INFO  com.alibaba.nacos.client.config.impl.Limiter      :62   [32m                  [0;39m limitTime:5.0
2023-08-05 22:02:43.962 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service] & group[DEFAULT_GROUP]
2023-08-05 22:02:43.972 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service.properties] & group[DEFAULT_GROUP]
2023-08-05 22:02:43.980 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service-dev.properties] & group[DEFAULT_GROUP]
2023-08-05 22:02:43.982 INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration    :108  [32m                  [0;39m Located property source: [BootstrapPropertySource {name='bootstrapProperties-business-service-dev.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service,DEFAULT_GROUP'}]
2023-08-05 22:02:44.019 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:02:44.021 INFO  com.jktickets.BusinessApplication                 :636  [32m                  [0;39m The following 1 profile is active: "dev"
2023-08-05 22:02:45.438 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :294  [32m                  [0;39m Multiple Spring Data modules found, entering strict repository configuration mode
2023-08-05 22:02:45.443 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :138  [32m                  [0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-08-05 22:02:45.507 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :208  [32m                  [0;39m Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2023-08-05 22:02:45.967 INFO  o.springframework.cloud.context.scope.GenericScope:282  [32m                  [0;39m BeanFactory id=b338b6a4-8c09-3a3c-8bbf-dfb37210bb07
2023-08-05 22:02:46.051 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'com.jktickets.feign.MemberFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.073 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.074 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.075 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.148 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.152 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.159 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.160 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$726/0x0000000801221360] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.161 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.165 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.168 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:02:46.172 INFO  i.s.s.boot.autoconfigure.SeataAutoConfiguration   :63   [32m                  [0;39m Automatically configure Seata
2023-08-05 22:02:46.272 INFO  io.seata.config.ConfigurationFactory              :64   [32m                  [0;39m load Configuration from :Spring Configuration
2023-08-05 22:02:46.282 INFO  io.seata.config.nacos.NacosConfiguration          :233  [32m                  [0;39m Nacos check auth with userName/password.
2023-08-05 22:02:46.295 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:02:46.296 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:02:46.428 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0
2023-08-05 22:02:46.429 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$589/0x0000000800f6fd00
2023-08-05 22:02:46.430 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$590/0x0000000800f70200
2023-08-05 22:02:46.430 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-05 22:02:46.430 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-05 22:02:46.431 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:02:46.432 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:02:46.560 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244166440_127.0.0.1_59791
2023-08-05 22:02:46.560 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:02:46.560 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Notify connected event to listeners.
2023-08-05 22:02:46.561 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Connected,notify listen context...
2023-08-05 22:02:46.561 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [022a2514-d92e-4766-b1bd-22e30a00bdfc_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-05 22:02:46.575 INFO  com.alibaba.nacos.client.config.utils.JvmUtil     :54   [32m                  [0;39m isMultiInstance:false
2023-08-05 22:02:46.587 INFO  com.alibaba.nacos.client.config.impl.CacheData    :67   [32m                  [0;39m nacos.cache.data.init.snapshot = true 
2023-08-05 22:02:46.590 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] seataServer.properties+SEATA_GROUP+train
2023-08-05 22:02:46.615 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=seataServer.properties, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:46.635 INFO  i.seata.spring.annotation.GlobalTransactionScanner:211  [32m                  [0;39m Initializing Global Transaction Clients ... 
2023-08-05 22:02:46.905 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableTmClientBatchSendRequest+SEATA_GROUP+train
2023-08-05 22:02:46.906 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:46.907 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-05 22:02:46.939 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-05 22:02:46.941 INFO  io.seata.discovery.registry.RegistryFactory       :50   [32m                  [0;39m use registry center type: nacos
2023-08-05 22:02:46.957 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.vgroupMapping.train-group+SEATA_GROUP+train
2023-08-05 22:02:46.958 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.vgroupMapping.train-group, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:46.975 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-05 22:02:46.995 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:02:46.995 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:02:47.133 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 1cb83dd0-9b20-41b3-b615-bf7404cb0103
2023-08-05 22:02:47.137 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-05 22:02:47.137 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-05 22:02:47.139 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-05 22:02:47.140 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:02:47.141 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:02:47.270 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244167148_127.0.0.1_59792
2023-08-05 22:02:47.270 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Notify connected event to listeners.
2023-08-05 22:02:47.270 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:02:47.271 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-05 22:02:47.271 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-05 22:02:47.272 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-05 22:02:47.296 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:02:47.298 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:02:47.304 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-05 22:02:47.306 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-05 22:02:47.503 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:TMROLE,address:192.168.0.102:8091,msg:< RegisterTMRequest{version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='ak=null
digest=train-group,192.168.0.102,1691244167500
timestamp=1691244167500
authVersion=V4
vgroup=train-group
ip=192.168.0.102
'} >
2023-08-05 22:02:47.873 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Receive server push request, request = NotifySubscriberRequest, requestId = 53
2023-08-05 22:02:47.874 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:02:47.875 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:02:47.877 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [1cb83dd0-9b20-41b3-b615-bf7404cb0103] Ack server push request, request = NotifySubscriberRequest, requestId = 53
2023-08-05 22:02:47.909 WARN  i.s.c.l.EnhancedServiceLoader$InnerEnhancedServiceLoader:545  [32m                  [0;39m Load [io.seata.serializer.hessian.HessianSerializer] class fail: com/caucho/hessian/io/AbstractHessianOutput
2023-08-05 22:02:47.983 INFO  io.seata.core.rpc.netty.TmNettyRemotingClient     :224  [32m                  [0;39m register TM success. client version:1.7.0, server version:1.6.1,channel:[id: 0xa59cd444, L:/192.168.0.102:59796 - R:/192.168.0.102:8091]
2023-08-05 22:02:47.995 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 144 ms, version:1.6.1,role:TMROLE,channel:[id: 0xa59cd444, L:/192.168.0.102:59796 - R:/192.168.0.102:8091]
2023-08-05 22:02:47.996 INFO  i.seata.spring.annotation.GlobalTransactionScanner:225  [32m                  [0;39m Transaction Manager Client is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-05 22:02:48.011 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableRmClientBatchSendRequest+SEATA_GROUP+train
2023-08-05 22:02:48.012 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:48.012 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-05 22:02:48.037 INFO  io.seata.rm.datasource.AsyncWorker                :73   [32m                  [0;39m Async Commit Buffer Limit: 10000
2023-08-05 22:02:48.038 INFO  io.seata.rm.datasource.xa.ResourceManagerXA       :59   [32m                  [0;39m ResourceManagerXA init ...
2023-08-05 22:02:48.048 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-05 22:02:48.049 INFO  i.seata.spring.annotation.GlobalTransactionScanner:230  [32m                  [0;39m Resource Manager is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-05 22:02:48.049 INFO  i.seata.spring.annotation.GlobalTransactionScanner:234  [32m                  [0;39m Global Transaction Clients are initialized. 
2023-08-05 22:02:49.472 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :114  [32m                  [0;39m Tomcat initialized with port(s): 8002 (http)
2023-08-05 22:02:49.486 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Initializing ProtocolHandler ["http-nio-8002"]
2023-08-05 22:02:49.487 INFO  org.apache.catalina.core.StandardService          :173  [32m                  [0;39m Starting service [Tomcat]
2023-08-05 22:02:49.488 INFO  org.apache.catalina.core.StandardEngine           :173  [32m                  [0;39m Starting Servlet engine: [Apache Tomcat/10.1.1]
2023-08-05 22:02:49.599 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring embedded WebApplicationContext
2023-08-05 22:02:49.600 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext    :291  [32m                  [0;39m Root WebApplicationContext: initialization completed in 5540 ms
2023-08-05 22:02:49.904 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32m                  [0;39m HikariPool-1 - Starting...
2023-08-05 22:02:50.334 INFO  com.zaxxer.hikari.pool.HikariPool                 :565  [32m                  [0;39m HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28fab36e
2023-08-05 22:02:50.337 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32m                  [0;39m HikariPool-1 - Start completed.
2023-08-05 22:02:50.489 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-05 22:02:50.489 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :276  [32m                  [0;39m RM will register :jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 22:02:50.490 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:RMROLE,address:192.168.0.102:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='null'} >
2023-08-05 22:02:50.564 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :177  [32m                  [0;39m register RM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x004a77b7, L:/192.168.0.102:59802 - R:/192.168.0.102:8091]
2023-08-05 22:02:50.564 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 72 ms, version:1.6.1,role:RMROLE,channel:[id: 0x004a77b7, L:/192.168.0.102:59802 - R:/192.168.0.102:8091]
2023-08-05 22:02:50.576 INFO  i.s.s.a.datasource.SeataAutoDataSourceProxyCreator:101  [32m                  [0;39m Auto proxy data source 'dataSource' by 'AT' mode.
2023-08-05 22:02:51.479 INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :59   [32m                  [0;39m LiveReload server is running on port 35729
2023-08-05 22:02:51.528 INFO  o.s.cloud.openfeign.FeignClientFactoryBean        :437  [32m                  [0;39m For 'member-service' URL not provided. Will try picking an instance via load-balancing.
2023-08-05 22:02:51.762 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] client.tm.degradeCheck+SEATA_GROUP+train
2023-08-05 22:02:51.763 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:51.763 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=2
2023-08-05 22:02:51.768 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.disableGlobalTransaction+SEATA_GROUP+train
2023-08-05 22:02:51.769 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=1
2023-08-05 22:02:51.769 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=2
2023-08-05 22:02:51.770 INFO  i.seata.spring.annotation.GlobalTransactionScanner:308  [32m                  [0;39m Bean [com.jktickets.service.impl.AfterConfirmOrderServiceImpl] with name [afterConfirmOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2023-08-05 22:02:51.776 INFO  i.seata.spring.annotation.GlobalTransactionScanner:308  [32m                  [0;39m Bean [com.jktickets.service.impl.ConfirmOrderServiceImpl] with name [confirmOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2023-08-05 22:02:54.294 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.github.pagehelper.autoconfigure.PageHelperStandardProperties
2023-08-05 22:02:55.638 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Starting ProtocolHandler ["http-nio-8002"]
2023-08-05 22:02:55.655 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :226  [32m                  [0;39m Tomcat started on port(s): 8002 (http) with context path '/business'
2023-08-05 22:02:55.657 INFO  com.alibaba.nacos.client.naming                   :62   [32m                  [0;39m initializer namespace from ans.namespace attribute : null
2023-08-05 22:02:55.658 INFO  com.alibaba.nacos.client.naming                   :66   [32m                  [0;39m initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2023-08-05 22:02:55.658 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-05 22:02:55.659 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:02:55.659 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:02:55.660 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of c40a2bf8-de75-482f-9c5b-f69a2f46794d
2023-08-05 22:02:55.661 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-05 22:02:55.661 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-05 22:02:55.661 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-05 22:02:55.662 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:02:55.662 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:02:55.775 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244175669_127.0.0.1_59826
2023-08-05 22:02:55.776 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Notify connected event to listeners.
2023-08-05 22:02:55.776 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-05 22:02:55.776 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:02:55.776 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [c40a2bf8-de75-482f-9c5b-f69a2f46794d] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$606/0x00000008010b8d08
2023-08-05 22:02:55.777 INFO  com.alibaba.nacos.client.naming                   :121  [32m                  [0;39m [REGISTER-SERVICE] train registering service business-service with instance Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2023-08-05 22:02:55.786 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :76   [32m                  [0;39m nacos registry, DEFAULT_GROUP business-service 192.168.0.102:8002 register finished
2023-08-05 22:02:56.231 INFO  com.jktickets.BusinessApplication                 :57   [32m                  [0;39m Started BusinessApplication in 17.443 seconds (process running for 18.952)
2023-08-05 22:02:56.234 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service+DEFAULT_GROUP+train
2023-08-05 22:02:56.234 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:02:56.234 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service, group=DEFAULT_GROUP
2023-08-05 22:02:56.235 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service.properties+DEFAULT_GROUP+train
2023-08-05 22:02:56.235 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service.properties, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:02:56.235 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service.properties, group=DEFAULT_GROUP
2023-08-05 22:02:56.235 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service-dev.properties+DEFAULT_GROUP+train
2023-08-05 22:02:56.235 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service-dev.properties, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:02:56.236 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service-dev.properties, group=DEFAULT_GROUP
2023-08-05 22:02:56.237 INFO  com.jktickets.BusinessApplication                 :27   [32m                  [0;39m 启动成功！！
2023-08-05 22:02:56.238 INFO  com.jktickets.BusinessApplication                 :29   [32m                  [0;39m 测试地址: 	http://127.0.0.1:8002/business/hello
2023-08-05 22:06:22.691 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :136  [32m                  [0;39m [NotifyCenter] Start destroying Publisher
2023-08-05 22:06:22.691 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :102  [32m                  [0;39m [HttpClientBeanHolder] Start destroying common HttpClient
2023-08-05 22:06:22.692 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :153  [32m                  [0;39m [NotifyCenter] Destruction of the end
2023-08-05 22:06:22.692 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :111  [32m                  [0;39m [HttpClientBeanHolder] Destruction of the end
2023-08-05 22:06:22.731 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :95   [32m                  [0;39m De-registering from Nacos Server now...
2023-08-05 22:06:22.731 INFO  com.alibaba.nacos.client.naming                   :217  [32m                  [0;39m [DEREGISTER-SERVICE] train deregistering service business-service with instance: Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2023-08-05 22:06:22.735 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :115  [32m                  [0;39m De-registration finished.
2023-08-05 22:06:22.736 INFO  com.alibaba.nacos.client.naming                   :256  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2023-08-05 22:06:22.736 INFO  com.alibaba.nacos.client.naming                   :136  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2023-08-05 22:06:22.737 INFO  com.alibaba.nacos.client.naming                   :138  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2023-08-05 22:06:22.737 INFO  com.alibaba.nacos.client.naming                   :258  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2023-08-05 22:06:22.737 INFO  com.alibaba.nacos.client.naming                   :204  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2023-08-05 22:06:22.738 INFO  com.alibaba.nacos.client.naming                   :143  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2023-08-05 22:06:22.738 INFO  com.alibaba.nacos.client.naming                   :145  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2023-08-05 22:06:22.738 INFO  com.alibaba.nacos.client.naming                   :194  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2023-08-05 22:06:22.738 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:06:22.738 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:06:22.738 INFO  com.alibaba.nacos.client.naming                   :199  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2023-08-05 22:06:22.738 INFO  com.alibaba.nacos.client.naming                   :484  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2023-08-05 22:06:22.738 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:06:22.738 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:06:22.739 INFO  com.alibaba.nacos.client.naming                   :486  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2023-08-05 22:06:22.739 INFO  com.alibaba.nacos.common.remote.client            :429  [32m                  [0;39m Shutdown rpc client, set status to shutdown
2023-08-05 22:06:22.739 INFO  com.alibaba.nacos.common.remote.client            :431  [32m                  [0;39m Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@771bd326[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2023-08-05 22:06:22.739 INFO  com.alibaba.nacos.common.remote.client            :584  [32m                  [0;39m Close current connection 1691244175669_127.0.0.1_59826
2023-08-05 22:06:22.743 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :63   [32m                  [0;39m [1691244175669_127.0.0.1_59826]Ignore complete event,isRunning:false,isAbandon=false
2023-08-05 22:06:22.748 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :159  [32m                  [0;39m Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@5fe7da77[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 52]
2023-08-05 22:06:22.748 INFO  com.alibaba.nacos.client.naming                   :318  [32m                  [0;39m Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@4911a902[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 68]
2023-08-05 22:06:22.748 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :106  [32m                  [0;39m [null] CredentialWatcher is stopped
2023-08-05 22:06:22.749 INFO  c.a.n.client.auth.ram.identify.CredentialService  :100  [32m                  [0;39m [null] CredentialService is freed
2023-08-05 22:06:22.749 INFO  com.alibaba.nacos.client.naming                   :211  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2023-08-05 22:06:22.777 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m                  [0;39m HikariPool-1 - Shutdown initiated...
2023-08-05 22:06:22.787 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m                  [0;39m HikariPool-1 - Shutdown completed.
2023-08-05 22:06:22.790 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.790 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.791 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.791 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.791 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:06:22.792 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa59cd444, L:/192.168.0.102:59796 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:06:22.792 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.792 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.792 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.793 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]
2023-08-05 22:06:22.793 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:06:22.793 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x004a77b7, L:/192.168.0.102:59802 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:06:32.366 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:06:32.395 INFO  org.hibernate.validator.internal.util.Version     :21   [32m                  [0;39m HV000001: Hibernate Validator 8.0.0.Final
2023-08-05 22:06:32.459 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:06:32.503 INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor :250  [32m                  [0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-08-05 22:06:32.798 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:06:32.801 INFO  com.alibaba.nacos.client.utils.ParamUtil          :87   [32m                  [0;39m [settings] [req-serv] nacos-server port:8848
2023-08-05 22:06:32.802 INFO  com.alibaba.nacos.client.utils.ParamUtil          :98   [32m                  [0;39m [settings] [http-client] connect timeout:1000
2023-08-05 22:06:32.803 INFO  com.alibaba.nacos.client.utils.ParamUtil          :105  [32m                  [0;39m PER_TASK_CONFIG_SIZE: 3000.0
2023-08-05 22:06:32.857 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:06:32.858 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:06:32.869 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :165  [32m                  [0;39m null No credential found
2023-08-05 22:06:33.499 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:06:33.522 INFO  c.a.n.client.config.impl.LocalConfigInfoProcessor :63   [32m                  [0;39m LOCAL_SNAPSHOT_PATH:C:\Users\Administrator\nacos\config
2023-08-05 22:06:33.529 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0
2023-08-05 22:06:33.560 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$601/0x0000000800f99540
2023-08-05 22:06:33.561 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$602/0x0000000800f99960
2023-08-05 22:06:33.562 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-05 22:06:33.563 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-05 22:06:33.574 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:06:33.625 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:06:35.229 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244394977_127.0.0.1_59973
2023-08-05 22:06:35.230 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Notify connected event to listeners.
2023-08-05 22:06:35.231 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Connected,notify listen context...
2023-08-05 22:06:35.231 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:06:35.232 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010de150
2023-08-05 22:06:35.304 INFO  com.alibaba.nacos.client.config.impl.Limiter      :62   [32m                  [0;39m limitTime:5.0
2023-08-05 22:06:35.325 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service] & group[DEFAULT_GROUP]
2023-08-05 22:06:35.334 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service.properties] & group[DEFAULT_GROUP]
2023-08-05 22:06:35.342 WARN  c.a.cloud.nacos.client.NacosPropertySourceBuilder :87   [32m                  [0;39m Ignore the empty nacos configuration and get it based on dataId[business-service-dev.properties] & group[DEFAULT_GROUP]
2023-08-05 22:06:35.343 INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration    :108  [32m                  [0;39m Located property source: [BootstrapPropertySource {name='bootstrapProperties-business-service-dev.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service.properties,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-business-service,DEFAULT_GROUP'}]
2023-08-05 22:06:35.373 WARN  com.alibaba.nacos.client.logging.NacosLogging     :64   [32m                  [0;39m Load Logback Configuration of Nacos fail, message: Could not initialize Logback Nacos logging from classpath:nacos-logback.xml
2023-08-05 22:06:35.374 INFO  com.jktickets.BusinessApplication                 :636  [32m                  [0;39m The following 1 profile is active: "dev"
2023-08-05 22:06:36.367 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :294  [32m                  [0;39m Multiple Spring Data modules found, entering strict repository configuration mode
2023-08-05 22:06:36.372 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :138  [32m                  [0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-08-05 22:06:36.419 INFO  o.s.d.r.config.RepositoryConfigurationDelegate    :208  [32m                  [0;39m Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2023-08-05 22:06:36.740 INFO  o.springframework.cloud.context.scope.GenericScope:282  [32m                  [0;39m BeanFactory id=b338b6a4-8c09-3a3c-8bbf-dfb37210bb07
2023-08-05 22:06:36.809 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'com.jktickets.feign.MemberFeign' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.825 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.826 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.827 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.883 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.887 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.894 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.896 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$738/0x0000000801223388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.898 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.902 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.904 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:409  [32m                  [0;39m Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-08-05 22:06:36.906 INFO  i.s.s.boot.autoconfigure.SeataAutoConfiguration   :63   [32m                  [0;39m Automatically configure Seata
2023-08-05 22:06:36.973 INFO  io.seata.config.ConfigurationFactory              :64   [32m                  [0;39m load Configuration from :Spring Configuration
2023-08-05 22:06:36.980 INFO  io.seata.config.nacos.NacosConfiguration          :233  [32m                  [0;39m Nacos check auth with userName/password.
2023-08-05 22:06:36.998 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:06:36.999 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:06:37.125 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0
2023-08-05 22:06:37.125 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$601/0x0000000800f99540
2023-08-05 22:06:37.126 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Register server push request handler:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$$Lambda$602/0x0000000800f99960
2023-08-05 22:06:37.126 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Registry connection listener to current client:com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$1
2023-08-05 22:06:37.126 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.config.impl.ClientWorker$ConfigRpcTransportClient$2
2023-08-05 22:06:37.127 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:06:37.128 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:06:37.246 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244397134_127.0.0.1_59975
2023-08-05 22:06:37.246 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:06:37.246 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010de150
2023-08-05 22:06:37.246 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Notify connected event to listeners.
2023-08-05 22:06:37.246 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :639  [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Connected,notify listen context...
2023-08-05 22:06:37.254 INFO  com.alibaba.nacos.client.config.utils.JvmUtil     :54   [32m                  [0;39m isMultiInstance:false
2023-08-05 22:06:37.263 INFO  com.alibaba.nacos.client.config.impl.CacheData    :67   [32m                  [0;39m nacos.cache.data.init.snapshot = true 
2023-08-05 22:06:37.265 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] seataServer.properties+SEATA_GROUP+train
2023-08-05 22:06:37.275 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=seataServer.properties, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:37.292 INFO  i.seata.spring.annotation.GlobalTransactionScanner:211  [32m                  [0;39m Initializing Global Transaction Clients ... 
2023-08-05 22:06:37.445 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableTmClientBatchSendRequest+SEATA_GROUP+train
2023-08-05 22:06:37.445 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:37.445 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableTmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-05 22:06:37.467 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-05 22:06:37.468 INFO  io.seata.discovery.registry.RegistryFactory       :50   [32m                  [0;39m use registry center type: nacos
2023-08-05 22:06:37.475 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.vgroupMapping.train-group+SEATA_GROUP+train
2023-08-05 22:06:37.476 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.vgroupMapping.train-group, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:37.486 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-05 22:06:37.497 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:06:37.498 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:06:37.596 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of 5ac38244-7216-45ec-aa83-9148d622e592
2023-08-05 22:06:37.598 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-05 22:06:37.599 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-05 22:06:37.599 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-05 22:06:37.600 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:06:37.600 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:06:37.789 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244397679_127.0.0.1_59976
2023-08-05 22:06:37.790 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:06:37.790 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Notify connected event to listeners.
2023-08-05 22:06:37.791 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-05 22:06:37.791 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010de150
2023-08-05 22:06:37.794 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-05 22:06:37.831 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:06:37.835 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server@@default -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:06:37.843 INFO  com.alibaba.nacos.client.naming                   :167  [32m                  [0;39m [SUBSCRIBE-SERVICE] service:seata-server, group:SEATA_GROUP, clusters:default 
2023-08-05 22:06:37.845 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-05 22:06:37.983 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:TMROLE,address:192.168.0.102:8091,msg:< RegisterTMRequest{version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='ak=null
digest=train-group,192.168.0.102,1691244397982
timestamp=1691244397982
authVersion=V4
vgroup=train-group
ip=192.168.0.102
'} >
2023-08-05 22:06:38.285 WARN  i.s.c.l.EnhancedServiceLoader$InnerEnhancedServiceLoader:545  [32m                  [0;39m Load [io.seata.serializer.hessian.HessianSerializer] class fail: com/caucho/hessian/io/AbstractHessianOutput
2023-08-05 22:06:38.319 INFO  io.seata.core.rpc.netty.TmNettyRemotingClient     :224  [32m                  [0;39m register TM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x32fbc52d, L:/192.168.0.102:59978 - R:/192.168.0.102:8091]
2023-08-05 22:06:38.327 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 80 ms, version:1.6.1,role:TMROLE,channel:[id: 0x32fbc52d, L:/192.168.0.102:59978 - R:/192.168.0.102:8091]
2023-08-05 22:06:38.328 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Receive server push request, request = NotifySubscriberRequest, requestId = 56
2023-08-05 22:06:38.329 INFO  com.alibaba.nacos.client.naming                   :184  [32m                  [0;39m init new ips(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:06:38.329 INFO  i.seata.spring.annotation.GlobalTransactionScanner:225  [32m                  [0;39m Transaction Manager Client is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-05 22:06:38.329 INFO  com.alibaba.nacos.client.naming                   :169  [32m                  [0;39m current ips:(1) service: SEATA_GROUP@@seata-server -> [{"instanceId":"192.168.0.102#8091#default#SEATA_GROUP@@seata-server","ip":"192.168.0.102","port":8091,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"default","serviceName":"SEATA_GROUP@@seata-server","metadata":{},"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:06:38.330 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Ack server push request, request = NotifySubscriberRequest, requestId = 56
2023-08-05 22:06:38.345 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] transport.enableRmClientBatchSendRequest+SEATA_GROUP+train
2023-08-05 22:06:38.345 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:38.346 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=transport.enableRmClientBatchSendRequest, group=SEATA_GROUP, cnt=2
2023-08-05 22:06:38.367 INFO  io.seata.rm.datasource.AsyncWorker                :73   [32m                  [0;39m Async Commit Buffer Limit: 10000
2023-08-05 22:06:38.368 INFO  io.seata.rm.datasource.xa.ResourceManagerXA       :59   [32m                  [0;39m ResourceManagerXA init ...
2023-08-05 22:06:38.377 INFO  io.seata.core.rpc.netty.NettyClientBootstrap      :147  [32m                  [0;39m NettyClientBootstrap has started
2023-08-05 22:06:38.377 INFO  i.seata.spring.annotation.GlobalTransactionScanner:230  [32m                  [0;39m Resource Manager is initialized. applicationId[business-service] txServiceGroup[train-group]
2023-08-05 22:06:38.377 INFO  i.seata.spring.annotation.GlobalTransactionScanner:234  [32m                  [0;39m Global Transaction Clients are initialized. 
2023-08-05 22:06:39.813 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :114  [32m                  [0;39m Tomcat initialized with port(s): 8002 (http)
2023-08-05 22:06:39.833 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Initializing ProtocolHandler ["http-nio-8002"]
2023-08-05 22:06:39.834 INFO  org.apache.catalina.core.StandardService          :173  [32m                  [0;39m Starting service [Tomcat]
2023-08-05 22:06:39.837 INFO  org.apache.catalina.core.StandardEngine           :173  [32m                  [0;39m Starting Servlet engine: [Apache Tomcat/10.1.1]
2023-08-05 22:06:40.066 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring embedded WebApplicationContext
2023-08-05 22:06:40.066 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext    :291  [32m                  [0;39m Root WebApplicationContext: initialization completed in 4660 ms
2023-08-05 22:06:40.456 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32m                  [0;39m HikariPool-1 - Starting...
2023-08-05 22:06:40.921 INFO  com.zaxxer.hikari.pool.HikariPool                 :565  [32m                  [0;39m HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b024f74
2023-08-05 22:06:40.923 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32m                  [0;39m HikariPool-1 - Start completed.
2023-08-05 22:06:41.047 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :105  [32m                  [0;39m will connect to 192.168.0.102:8091
2023-08-05 22:06:41.047 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :276  [32m                  [0;39m RM will register :jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business
2023-08-05 22:06:41.047 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :56   [32m                  [0;39m NettyPool create channel to transactionRole:RMROLE,address:192.168.0.102:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://rm-cn-uax39xxd10011clo.rwlb.rds.aliyuncs.com/train-business', version='1.7.0', applicationId='business-service', transactionServiceGroup='train-group', extraData='null'} >
2023-08-05 22:06:41.053 INFO  io.seata.core.rpc.netty.RmNettyRemotingClient     :177  [32m                  [0;39m register RM success. client version:1.7.0, server version:1.6.1,channel:[id: 0x3be7a907, L:/192.168.0.102:59983 - R:/192.168.0.102:8091]
2023-08-05 22:06:41.054 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :81   [32m                  [0;39m register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x3be7a907, L:/192.168.0.102:59983 - R:/192.168.0.102:8091]
2023-08-05 22:06:41.067 INFO  i.s.s.a.datasource.SeataAutoDataSourceProxyCreator:101  [32m                  [0;39m Auto proxy data source 'dataSource' by 'AT' mode.
2023-08-05 22:06:41.840 INFO  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :59   [32m                  [0;39m LiveReload server is running on port 35729
2023-08-05 22:06:41.882 INFO  o.s.cloud.openfeign.FeignClientFactoryBean        :437  [32m                  [0;39m For 'member-service' URL not provided. Will try picking an instance via load-balancing.
2023-08-05 22:06:42.085 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] client.tm.degradeCheck+SEATA_GROUP+train
2023-08-05 22:06:42.085 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:42.086 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=client.tm.degradeCheck, group=SEATA_GROUP, cnt=2
2023-08-05 22:06:42.093 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] service.disableGlobalTransaction+SEATA_GROUP+train
2023-08-05 22:06:42.094 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=1
2023-08-05 22:06:42.095 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=service.disableGlobalTransaction, group=SEATA_GROUP, cnt=2
2023-08-05 22:06:42.095 INFO  i.seata.spring.annotation.GlobalTransactionScanner:308  [32m                  [0;39m Bean [com.jktickets.service.impl.AfterConfirmOrderServiceImpl] with name [afterConfirmOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2023-08-05 22:06:45.104 WARN  o.s.core.LocalVariableTableParameterNameDiscoverer:123  [32m                  [0;39m Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.github.pagehelper.autoconfigure.PageHelperStandardProperties
2023-08-05 22:06:46.163 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m                  [0;39m Starting ProtocolHandler ["http-nio-8002"]
2023-08-05 22:06:46.180 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :226  [32m                  [0;39m Tomcat started on port(s): 8002 (http) with context path '/business'
2023-08-05 22:06:46.183 INFO  com.alibaba.nacos.client.naming                   :62   [32m                  [0;39m initializer namespace from ans.namespace attribute : null
2023-08-05 22:06:46.184 INFO  com.alibaba.nacos.client.naming                   :66   [32m                  [0;39m initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2023-08-05 22:06:46.185 INFO  com.alibaba.nacos.client.naming                   :73   [32m                  [0;39m initializer namespace from namespace attribute :null
2023-08-05 22:06:46.186 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2023-08-05 22:06:46.187 INFO  c.a.n.p.auth.spi.client.ClientAuthPluginManager   :56   [32m                  [0;39m [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2023-08-05 22:06:46.188 INFO  com.alibaba.nacos.common.remote.client            :108  [32m                  [0;39m [RpcClientFactory] create a new rpc client of d29de593-1a3a-40fa-bb4a-f0b1b485aee3
2023-08-05 22:06:46.188 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2023-08-05 22:06:46.189 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2023-08-05 22:06:46.189 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2023-08-05 22:06:46.190 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Try to connect to server on start up, server: {serverIp = '127.0.0.1', server main port = 8848}
2023-08-05 22:06:46.191 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:06:46.305 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Success to connect to server [127.0.0.1:8848] on start up, connectionId = 1691244406198_127.0.0.1_60003
2023-08-05 22:06:46.305 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2023-08-05 22:06:46.305 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Notify connected event to listeners.
2023-08-05 22:06:46.305 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$618/0x00000008010de150
2023-08-05 22:06:46.305 INFO  com.alibaba.nacos.client.naming                   :78   [32m                  [0;39m Grpc connection connect
2023-08-05 22:06:46.306 INFO  com.alibaba.nacos.client.naming                   :121  [32m                  [0;39m [REGISTER-SERVICE] train registering service business-service with instance Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2023-08-05 22:06:46.319 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :76   [32m                  [0;39m nacos registry, DEFAULT_GROUP business-service 192.168.0.102:8002 register finished
2023-08-05 22:06:46.764 INFO  com.jktickets.BusinessApplication                 :57   [32m                  [0;39m Started BusinessApplication in 15.598 seconds (process running for 16.769)
2023-08-05 22:06:46.767 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service+DEFAULT_GROUP+train
2023-08-05 22:06:46.767 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:06:46.768 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service, group=DEFAULT_GROUP
2023-08-05 22:06:46.768 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service.properties+DEFAULT_GROUP+train
2023-08-05 22:06:46.768 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service.properties, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:06:46.768 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service.properties, group=DEFAULT_GROUP
2023-08-05 22:06:46.769 INFO  com.alibaba.nacos.client.config.impl.ClientWorker :380  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [subscribe] business-service-dev.properties+DEFAULT_GROUP+train
2023-08-05 22:06:46.769 INFO  com.alibaba.nacos.client.config.impl.CacheData    :197  [32m                  [0;39m [fixed-train-127.0.0.1_8848] [add-listener] ok, tenant=train, dataId=business-service-dev.properties, group=DEFAULT_GROUP, cnt=1
2023-08-05 22:06:46.769 INFO  c.a.cloud.nacos.refresh.NacosContextRefresher     :129  [32m                  [0;39m [Nacos Config] Listening config: dataId=business-service-dev.properties, group=DEFAULT_GROUP
2023-08-05 22:06:46.770 INFO  com.jktickets.BusinessApplication                 :27   [32m                  [0;39m 启动成功！！
2023-08-05 22:06:46.771 INFO  com.jktickets.BusinessApplication                 :29   [32m                  [0;39m 测试地址: 	http://127.0.0.1:8002/business/hello
2023-08-05 22:06:52.723 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m                  [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-05 22:06:52.723 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m                  [0;39m Initializing Servlet 'dispatcherServlet'
2023-08-05 22:06:52.727 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m                  [0;39m Completed initialization in 3 ms
2023-08-05 22:06:52.788 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244412765t0k  [0;39m ------------- 开始 -------------
2023-08-05 22:06:52.790 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244412765t0k  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/train/queryAll GET
2023-08-05 22:06:52.790 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244412765t0k  [0;39m 类名方法: com.jktickets.controller.admin.TrainAdminController.queryAllTrainList
2023-08-05 22:06:52.791 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244412765t0k  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:06:52.864 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244412765t0k  [0;39m 请求参数: []
2023-08-05 22:06:52.865 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244412765t0k  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-05 22:06:52.865 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244412765t0k  [0;39m 参数值: com.jktickets.domain.TrainExample@24eb18e2
2023-08-05 22:06:52.897 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912444127651sq  [0;39m ------------- 开始 -------------
2023-08-05 22:06:52.898 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912444127651sq  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-05 22:06:52.899 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912444127651sq  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-05 22:06:52.899 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912444127651sq  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:06:52.935 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912444127651sq  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-05 22:06:52.948 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912444127651sq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-05 22:06:52.948 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912444127651sq  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@5cec6ee4
2023-08-05 22:06:52.977 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244412765t0k  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-05 22:06:53.211 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244412765t0k  [0;39m ==> Parameters: 
2023-08-05 22:06:53.254 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16912444127651sq  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-05 22:06:53.256 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16912444127651sq  [0;39m ==> Parameters: 
2023-08-05 22:06:53.361 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691244412765t0k  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-05 22:06:53.361 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m16912444127651sq  [0;39m <==    Columns: count(0)
2023-08-05 22:06:53.363 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m16912444127651sq  [0;39m <==        Row: 4
2023-08-05 22:06:53.372 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691244412765t0k  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-05 22:06:53.375 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m16912444127651sq  [0;39m <==      Total: 1
2023-08-05 22:06:53.376 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244412765t0k  [0;39m <==      Total: 1
2023-08-05 22:06:53.378 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244412765t0k  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-05 22:06:53.379 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16912444127651sq  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-05 22:06:53.381 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16912444127651sq  [0;39m ==> Parameters: 10(Integer)
2023-08-05 22:06:53.399 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16912444127651sq  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-05 22:06:53.407 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16912444127651sq  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-05 22:06:53.412 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16912444127651sq  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-05 22:06:53.417 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16912444127651sq  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-05 22:06:53.421 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m16912444127651sq  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-05 22:06:53.423 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m16912444127651sq  [0;39m <==      Total: 4
2023-08-05 22:06:53.423 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912444127651sq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-05 22:06:53.425 INFO  com.jktickets.service.DailyTrainService           :104  [32m16912444127651sq  [0;39m 总行数：4
2023-08-05 22:06:53.426 INFO  com.jktickets.service.DailyTrainService           :105  [32m16912444127651sq  [0;39m 总页数：1
2023-08-05 22:06:53.475 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244412765t0k  [0;39m 返回结果: {"code":0,"message":"","result":[{"code":"01","createTime":1689430563000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680219682084360192,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689430645462}],"success":true}
2023-08-05 22:06:53.475 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244412765t0k  [0;39m ------------- 结束 耗时：690 ms -------------
2023-08-05 22:06:53.477 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912444127651sq  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":4},"success":true}
2023-08-05 22:06:53.478 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912444127651sq  [0;39m ------------- 结束 耗时：581 ms -------------
2023-08-05 22:07:02.177 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244422171uzx  [0;39m ------------- 开始 -------------
2023-08-05 22:07:02.177 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244422171uzx  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/genDaily/2023-08-05 GET
2023-08-05 22:07:02.177 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244422171uzx  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.genDailyByDate
2023-08-05 22:07:02.177 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244422171uzx  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:02.178 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244422171uzx  [0;39m 请求参数: [1691164800000]
2023-08-05 22:07:02.179 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-05 22:07:02.179 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainExample@73224ff4
2023-08-05 22:07:02.201 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from train order by code desc
2023-08-05 22:07:02.203 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 
2023-08-05 22:07:02.220 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691244422171uzx  [0;39m <==    Columns: id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-05 22:07:02.222 TRACE com.jktickets.mapper.TrainMapper.selectByExample  :143  [32m1691244422171uzx  [0;39m <==        Row: 1680219682084360192, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-15 22:16:03, 2023-07-15 22:17:25.462
2023-08-05 22:07:02.223 DEBUG com.jktickets.mapper.TrainMapper.selectByExample  :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:02.224 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainMapper.selectByExample(TrainExample))
2023-08-05 22:07:02.423 INFO  com.jktickets.service.DailyTrainService           :146  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的信息开始
2023-08-05 22:07:02.425 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-05 22:07:02.426 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@42e80b35
2023-08-05 22:07:02.428 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691244422171uzx  [0;39m ==>  Preparing: delete from daily_train WHERE ( `date` = ? and code = ? )
2023-08-05 22:07:02.429 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String)
2023-08-05 22:07:02.460 DEBUG c.j.mapper.DailyTrainMapper.deleteByExample       :137  [32m1691244422171uzx  [0;39m <==    Updates: 0
2023-08-05 22:07:02.461 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainMapper.deleteByExample(DailyTrainExample))
2023-08-05 22:07:02.471 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-05 22:07:02.472 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrain [Hash = 1013418258, id=1687827556604186624, date=Sat Aug 05 00:00:00 CST 2023, code=01, type=G, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 01:00:02 CST 1970, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 02:00:00 CST 1970, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.473 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train (id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.474 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827556604186624(Long), 2023-08-05(Date), 01(String), G(String), 上海(String), shanghai(String), 01:00:02(Time), 温州(String), wenzhou(String), 02:00:00(Time), 2023-08-05 22:07:02.461(Timestamp), 2023-08-05 22:07:02.461(Timestamp)
2023-08-05 22:07:02.507 DEBUG com.jktickets.mapper.DailyTrainMapper.insert      :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.507 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainMapper.insert(DailyTrain))
2023-08-05 22:07:02.507 INFO  com.jktickets.service.DailyTrainStationService    :110  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的车站信息开始
2023-08-05 22:07:02.513 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-05 22:07:02.513 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainStationExample@1aa65f25
2023-08-05 22:07:02.515 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691244422171uzx  [0;39m ==>  Preparing: delete from daily_train_station WHERE ( `date` = ? and train_code = ? )
2023-08-05 22:07:02.516 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String)
2023-08-05 22:07:02.569 DEBUG c.j.mapper.DailyTrainStationMapper.deleteByExample:137  [32m1691244422171uzx  [0;39m <==    Updates: 0
2023-08-05 22:07:02.569 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainStationMapper.deleteByExample(DailyTrainStationExample))
2023-08-05 22:07:02.574 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:02.574 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainStationExample@5266f821
2023-08-05 22:07:02.577 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-05 22:07:02.577 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==> Parameters: 01(String)
2023-08-05 22:07:02.594 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-05 22:07:02.596 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-05 22:07:02.599 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-05 22:07:02.606 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-05 22:07:02.608 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m <==      Total: 3
2023-08-05 22:07:02.609 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:02.610 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.610 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainStation [Hash = 1268426044, id=1687827557187194880, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, index=0, name=上海, namePinyin=shanghai, inTime=Thu Jan 01 00:00:00 CST 1970, outTime=Thu Jan 01 00:02:00 CST 1970, stopTime=Thu Jan 01 00:02:00 CST 1970, km=12.00, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.611 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.612 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827557187194880(Long), 2023-08-05(Date), 01(String), 0(Integer), 上海(String), shanghai(String), 00:00:00(Time), 00:02:00(Time), 00:02:00(Time), 12.00(BigDecimal), 2023-08-05 22:07:02.609(Timestamp), 2023-08-05 22:07:02.609(Timestamp)
2023-08-05 22:07:02.644 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.644 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.645 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.645 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainStation [Hash = 1539419069, id=1687827557333995520, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, index=1, name=温州, namePinyin=wenzhou, inTime=Thu Jan 01 22:14:58 CST 1970, outTime=Thu Jan 01 22:15:03 CST 1970, stopTime=Thu Jan 01 00:00:05 CST 1970, km=1.00, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.645 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.646 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827557333995520(Long), 2023-08-05(Date), 01(String), 1(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 22:15:03(Time), 00:00:05(Time), 1.00(BigDecimal), 2023-08-05 22:07:02.644(Timestamp), 2023-08-05 22:07:02.644(Timestamp)
2023-08-05 22:07:02.678 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.678 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.679 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.679 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainStation [Hash = 1625479748, id=1687827557476601856, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, index=2, name=杭州, namePinyin=hangzhou, inTime=Thu Jan 01 15:00:00 CST 1970, outTime=Thu Jan 01 16:01:00 CST 1970, stopTime=Thu Jan 01 01:01:00 CST 1970, km=11.00, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.679 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_station (id, `date`, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.681 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827557476601856(Long), 2023-08-05(Date), 01(String), 2(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 16:01:00(Time), 01:01:00(Time), 11.00(BigDecimal), 2023-08-05 22:07:02.678(Timestamp), 2023-08-05 22:07:02.678(Timestamp)
2023-08-05 22:07:02.712 DEBUG c.jktickets.mapper.DailyTrainStationMapper.insert :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.713 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainStationMapper.insert(DailyTrainStation))
2023-08-05 22:07:02.713 INFO  com.jktickets.service.DailyTrainStationService    :136  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的车站信息结束
2023-08-05 22:07:02.738 INFO  com.jktickets.service.DailyTrainCarriageService   :122  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的车厢信息开始
2023-08-05 22:07:02.743 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-05 22:07:02.744 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@55f9e839
2023-08-05 22:07:02.748 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: delete from daily_train_carriage WHERE ( `date` = ? and train_code = ? )
2023-08-05 22:07:02.749 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String)
2023-08-05 22:07:02.779 DEBUG c.j.m.DailyTrainCarriageMapper.deleteByExample    :137  [32m1691244422171uzx  [0;39m <==    Updates: 0
2023-08-05 22:07:02.780 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.deleteByExample(DailyTrainCarriageExample))
2023-08-05 22:07:02.785 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-05 22:07:02.785 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainCarriageExample@32317fd3
2023-08-05 22:07:02.788 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from train_carriage WHERE ( train_code = ? ) order by `index` asc
2023-08-05 22:07:02.789 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 01(String)
2023-08-05 22:07:02.806 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: id, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:07:02.807 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 1680419230580871168, 01, 1, 1, 32, 8, 4, 2023-07-16 11:28:59, 2023-07-25 21:20:17.749
2023-08-05 22:07:02.809 TRACE c.j.mapper.TrainCarriageMapper.selectByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 1680491830979989504, 01, 2, 2, 25, 5, 5, 2023-07-16 16:17:29.155, 2023-07-16 16:17:29.155
2023-08-05 22:07:02.810 DEBUG c.j.mapper.TrainCarriageMapper.selectByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 2
2023-08-05 22:07:02.810 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainCarriageMapper.selectByExample(TrainCarriageExample))
2023-08-05 22:07:02.812 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-05 22:07:02.813 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainCarriage [Hash = 639945639, id=1687827558034444288, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, index=1, seatType=1, seatCount=32, rowCount=8, colCount=4, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.814 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.814 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827558034444288(Long), 2023-08-05(Date), 01(String), 1(Integer), 1(String), 32(Integer), 8(Integer), 4(Integer), 2023-08-05 22:07:02.811(Timestamp), 2023-08-05 22:07:02.811(Timestamp)
2023-08-05 22:07:02.848 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.849 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-05 22:07:02.850 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-05 22:07:02.850 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainCarriage [Hash = 942574602, id=1687827558193827840, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, index=2, seatType=2, seatCount=25, rowCount=5, colCount=5, createTime=2023-08-05 22:07:02, updateTime=2023-08-05 22:07:02]
2023-08-05 22:07:02.851 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_carriage (id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:02.852 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827558193827840(Long), 2023-08-05(Date), 01(String), 2(Integer), 2(String), 25(Integer), 5(Integer), 5(Integer), 2023-08-05 22:07:02.849(Timestamp), 2023-08-05 22:07:02.849(Timestamp)
2023-08-05 22:07:02.918 DEBUG c.jktickets.mapper.DailyTrainCarriageMapper.insert:137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:02.919 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainCarriageMapper.insert(DailyTrainCarriage))
2023-08-05 22:07:02.919 INFO  com.jktickets.service.DailyTrainCarriageService   :147  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的车厢信息结束
2023-08-05 22:07:02.969 INFO  com.jktickets.service.DailyTrainSeatService       :112  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的座位信息开始
2023-08-05 22:07:02.975 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-05 22:07:02.975 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@15210051
2023-08-05 22:07:02.977 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691244422171uzx  [0;39m ==>  Preparing: delete from daily_train_seat WHERE ( `date` = ? and train_code = ? )
2023-08-05 22:07:02.978 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String)
2023-08-05 22:07:03.010 DEBUG c.j.mapper.DailyTrainSeatMapper.deleteByExample   :137  [32m1691244422171uzx  [0;39m <==    Updates: 0
2023-08-05 22:07:03.011 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainSeatMapper.deleteByExample(DailyTrainSeatExample))
2023-08-05 22:07:03.011 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:03.011 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainStationExample@5c12ca3b
2023-08-05 22:07:03.012 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-05 22:07:03.013 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==> Parameters: 01(String)
2023-08-05 22:07:03.030 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-05 22:07:03.031 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-05 22:07:03.032 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-05 22:07:03.034 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-05 22:07:03.034 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m <==      Total: 3
2023-08-05 22:07:03.035 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:03.043 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-05 22:07:03.044 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainSeatExample@370a0c69
2023-08-05 22:07:03.045 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, create_time, update_time from train_seat WHERE ( train_code = ? ) order by `id` asc
2023-08-05 22:07:03.046 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691244422171uzx  [0;39m ==> Parameters: 01(String)
2023-08-05 22:07:03.066 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==    Columns: id, train_code, carriage_index, row, col, seat_type, carriage_seat_index, create_time, update_time
2023-08-05 22:07:03.066 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917643452223488, 01, 1, 01, A, 1, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.068 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917643703881728, 01, 1, 01, C, 1, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.069 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917643808739328, 01, 1, 01, D, 1, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.070 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917643913596928, 01, 1, 01, F, 1, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.071 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644010065920, 01, 1, 02, A, 1, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.071 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644119117824, 01, 1, 02, C, 1, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.072 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644215586816, 01, 1, 02, D, 1, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.072 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644316250112, 01, 1, 02, F, 1, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.073 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644458856448, 01, 1, 03, A, 1, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.073 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644551131136, 01, 1, 03, C, 1, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.074 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644647600128, 01, 1, 03, D, 1, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.075 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644752457728, 01, 1, 03, F, 1, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.076 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644844732416, 01, 1, 04, A, 1, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.077 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917644957978624, 01, 1, 04, C, 1, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.077 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645088002048, 01, 1, 04, D, 1, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.078 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645184471040, 01, 1, 04, F, 1, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.080 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645280940032, 01, 1, 05, A, 1, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.081 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645385797632, 01, 1, 05, C, 1, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.081 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645486460928, 01, 1, 05, D, 1, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.082 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645582929920, 01, 1, 05, F, 1, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.082 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645679398912, 01, 1, 06, A, 1, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.083 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645780062208, 01, 1, 06, C, 1, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.083 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917645897502720, 01, 1, 06, D, 1, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.084 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646002360320, 01, 1, 06, F, 1, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.085 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646132383744, 01, 1, 07, A, 1, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.086 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646300155904, 01, 1, 07, C, 1, 26, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.087 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646396624896, 01, 1, 07, D, 1, 27, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.088 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646526648320, 01, 1, 07, F, 1, 28, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.088 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646623117312, 01, 1, 08, A, 1, 29, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.089 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646732169216, 01, 1, 08, C, 1, 30, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.090 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646824443904, 01, 1, 08, D, 1, 31, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.090 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917646941884416, 01, 1, 08, F, 1, 32, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.091 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647038353408, 01, 2, 01, A, 2, 1, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.091 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647189348352, 01, 2, 01, B, 2, 2, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.092 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647327760384, 01, 2, 01, C, 2, 3, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.092 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647420035072, 01, 2, 01, D, 2, 4, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.093 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647524892672, 01, 2, 01, F, 2, 5, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.094 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647621361664, 01, 2, 02, A, 2, 6, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.094 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647763968000, 01, 2, 02, B, 2, 7, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.095 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647860436992, 01, 2, 02, C, 2, 8, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.095 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917647986266112, 01, 2, 02, D, 2, 9, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.096 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648082735104, 01, 2, 02, F, 2, 10, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.096 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648187592704, 01, 2, 03, A, 2, 11, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.097 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648435056640, 01, 2, 03, B, 2, 12, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.097 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648548302848, 01, 2, 03, C, 2, 13, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.097 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648695103488, 01, 2, 03, D, 2, 14, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.098 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648787378176, 01, 2, 03, F, 2, 15, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.098 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648888041472, 01, 2, 04, A, 2, 16, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.099 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917648984510464, 01, 2, 04, B, 2, 17, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.099 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649089368064, 01, 2, 04, C, 2, 18, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.100 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649181642752, 01, 2, 04, D, 2, 19, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.101 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649282306048, 01, 2, 04, F, 2, 20, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.102 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649424912384, 01, 2, 05, A, 2, 21, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.103 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649554935808, 01, 2, 05, B, 2, 22, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.104 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649814982656, 01, 2, 05, C, 2, 23, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.105 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917649919840256, 01, 2, 05, D, 2, 24, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.106 TRACE c.jktickets.mapper.TrainSeatMapper.selectByExample:143  [32m1691244422171uzx  [0;39m <==        Row: 1684917650012114944, 01, 2, 05, F, 2, 25, 2023-07-28 21:24:05.052, 2023-07-28 21:24:05.052
2023-08-05 22:07:03.107 DEBUG c.jktickets.mapper.TrainSeatMapper.selectByExample:137  [32m1691244422171uzx  [0;39m <==      Total: 57
2023-08-05 22:07:03.107 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainSeatMapper.selectByExample(TrainSeatExample))
2023-08-05 22:07:03.111 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.112 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 139217828, id=1687827559288541184, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=A, seatType=1, carriageSeatIndex=1, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.114 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.114 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827559288541184(Long), 2023-08-05(Date), 01(String), 1(Integer), 01(String), A(String), 1(String), 1(Integer), 00(String), 2023-08-05 22:07:03.109(Timestamp), 2023-08-05 22:07:03.109(Timestamp)
2023-08-05 22:07:03.148 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.149 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.149 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.150 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 42031448, id=1687827559447924736, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.150 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.152 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827559447924736(Long), 2023-08-05(Date), 01(String), 1(Integer), 01(String), C(String), 1(String), 2(Integer), 00(String), 2023-08-05 22:07:03.149(Timestamp), 2023-08-05 22:07:03.149(Timestamp)
2023-08-05 22:07:03.182 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.183 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.183 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.183 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1913951608, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.184 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.185 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827559590531072(Long), 2023-08-05(Date), 01(String), 1(Integer), 01(String), D(String), 1(String), 3(Integer), 00(String), 2023-08-05 22:07:03.183(Timestamp), 2023-08-05 22:07:03.183(Timestamp)
2023-08-05 22:07:03.218 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.218 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.219 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.219 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1679570134, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.220 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.220 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827559741526016(Long), 2023-08-05(Date), 01(String), 1(Integer), 01(String), F(String), 1(String), 4(Integer), 00(String), 2023-08-05 22:07:03.219(Timestamp), 2023-08-05 22:07:03.219(Timestamp)
2023-08-05 22:07:03.290 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.290 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.291 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.291 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1816722452, id=1687827560043515904, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.291 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.293 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560043515904(Long), 2023-08-05(Date), 01(String), 1(Integer), 02(String), A(String), 1(String), 5(Integer), 00(String), 2023-08-05 22:07:03.29(Timestamp), 2023-08-05 22:07:03.29(Timestamp)
2023-08-05 22:07:03.325 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.325 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.325 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.326 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1342861870, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.326 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.327 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560186122240(Long), 2023-08-05(Date), 01(String), 1(Integer), 02(String), C(String), 1(String), 6(Integer), 00(String), 2023-08-05 22:07:03.325(Timestamp), 2023-08-05 22:07:03.325(Timestamp)
2023-08-05 22:07:03.361 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.362 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.362 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.363 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 25310699, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.363 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.364 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560341311488(Long), 2023-08-05(Date), 01(String), 1(Integer), 02(String), D(String), 1(String), 7(Integer), 00(String), 2023-08-05 22:07:03.362(Timestamp), 2023-08-05 22:07:03.362(Timestamp)
2023-08-05 22:07:03.397 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.397 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.398 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.398 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1176686084, id=1687827560488112128, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=F, seatType=1, carriageSeatIndex=8, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.398 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.399 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560488112128(Long), 2023-08-05(Date), 01(String), 1(Integer), 02(String), F(String), 1(String), 8(Integer), 00(String), 2023-08-05 22:07:03.397(Timestamp), 2023-08-05 22:07:03.397(Timestamp)
2023-08-05 22:07:03.431 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.432 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.433 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.435 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1529716434, id=1687827560639107072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=A, seatType=1, carriageSeatIndex=9, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.436 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.438 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560639107072(Long), 2023-08-05(Date), 01(String), 1(Integer), 03(String), A(String), 1(String), 9(Integer), 00(String), 2023-08-05 22:07:03.432(Timestamp), 2023-08-05 22:07:03.432(Timestamp)
2023-08-05 22:07:03.470 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.471 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.472 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.473 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1056890284, id=1687827560802684928, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=C, seatType=1, carriageSeatIndex=10, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.474 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.477 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560802684928(Long), 2023-08-05(Date), 01(String), 1(Integer), 03(String), C(String), 1(String), 10(Integer), 00(String), 2023-08-05 22:07:03.472(Timestamp), 2023-08-05 22:07:03.472(Timestamp)
2023-08-05 22:07:03.509 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.510 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.511 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.512 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1347967612, id=1687827560966262784, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=D, seatType=1, carriageSeatIndex=11, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.514 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.516 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827560966262784(Long), 2023-08-05(Date), 01(String), 1(Integer), 03(String), D(String), 1(String), 11(Integer), 00(String), 2023-08-05 22:07:03.511(Timestamp), 2023-08-05 22:07:03.511(Timestamp)
2023-08-05 22:07:03.548 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.549 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.551 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.553 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1169161683, id=1687827561134034944, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=03, col=F, seatType=1, carriageSeatIndex=12, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.555 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.557 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827561134034944(Long), 2023-08-05(Date), 01(String), 1(Integer), 03(String), F(String), 1(String), 12(Integer), 00(String), 2023-08-05 22:07:03.55(Timestamp), 2023-08-05 22:07:03.55(Timestamp)
2023-08-05 22:07:03.589 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.589 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.590 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.591 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1991181271, id=1687827561297612800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=A, seatType=1, carriageSeatIndex=13, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.593 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.596 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827561297612800(Long), 2023-08-05(Date), 01(String), 1(Integer), 04(String), A(String), 1(String), 13(Integer), 00(String), 2023-08-05 22:07:03.59(Timestamp), 2023-08-05 22:07:03.59(Timestamp)
2023-08-05 22:07:03.651 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.653 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.654 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.655 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1833696481, id=1687827561566048256, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=C, seatType=1, carriageSeatIndex=14, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.656 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.658 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827561566048256(Long), 2023-08-05(Date), 01(String), 1(Integer), 04(String), C(String), 1(String), 14(Integer), 00(String), 2023-08-05 22:07:03.653(Timestamp), 2023-08-05 22:07:03.653(Timestamp)
2023-08-05 22:07:03.690 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.691 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.692 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.693 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 920889406, id=1687827561725431808, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=D, seatType=1, carriageSeatIndex=15, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.695 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.703 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827561725431808(Long), 2023-08-05(Date), 01(String), 1(Integer), 04(String), D(String), 1(String), 15(Integer), 00(String), 2023-08-05 22:07:03.691(Timestamp), 2023-08-05 22:07:03.691(Timestamp)
2023-08-05 22:07:03.735 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.736 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.748 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.749 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1990907836, id=1687827561960312832, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=04, col=F, seatType=1, carriageSeatIndex=16, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.751 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.758 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827561960312832(Long), 2023-08-05(Date), 01(String), 1(Integer), 04(String), F(String), 1(String), 16(Integer), 00(String), 2023-08-05 22:07:03.737(Timestamp), 2023-08-05 22:07:03.737(Timestamp)
2023-08-05 22:07:03.798 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.799 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.799 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.800 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 58446714, id=1687827562174222336, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=A, seatType=1, carriageSeatIndex=17, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.801 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.802 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562174222336(Long), 2023-08-05(Date), 01(String), 1(Integer), 05(String), A(String), 1(String), 17(Integer), 00(String), 2023-08-05 22:07:03.799(Timestamp), 2023-08-05 22:07:03.799(Timestamp)
2023-08-05 22:07:03.836 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.836 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.837 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.837 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 838359383, id=1687827562333605888, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=C, seatType=1, carriageSeatIndex=18, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.837 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.838 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562333605888(Long), 2023-08-05(Date), 01(String), 1(Integer), 05(String), C(String), 1(String), 18(Integer), 00(String), 2023-08-05 22:07:03.836(Timestamp), 2023-08-05 22:07:03.836(Timestamp)
2023-08-05 22:07:03.873 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.873 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.874 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.874 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1776693403, id=1687827562488795136, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=D, seatType=1, carriageSeatIndex=19, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.875 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.876 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562488795136(Long), 2023-08-05(Date), 01(String), 1(Integer), 05(String), D(String), 1(String), 19(Integer), 00(String), 2023-08-05 22:07:03.874(Timestamp), 2023-08-05 22:07:03.874(Timestamp)
2023-08-05 22:07:03.914 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.914 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.914 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.915 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1600343416, id=1687827562656567296, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=05, col=F, seatType=1, carriageSeatIndex=20, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.915 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.916 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562656567296(Long), 2023-08-05(Date), 01(String), 1(Integer), 05(String), F(String), 1(String), 20(Integer), 00(String), 2023-08-05 22:07:03.914(Timestamp), 2023-08-05 22:07:03.914(Timestamp)
2023-08-05 22:07:03.946 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.946 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.947 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.947 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1833154364, id=1687827562794979328, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=A, seatType=1, carriageSeatIndex=21, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.948 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.949 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562794979328(Long), 2023-08-05(Date), 01(String), 1(Integer), 06(String), A(String), 1(String), 21(Integer), 00(String), 2023-08-05 22:07:03.947(Timestamp), 2023-08-05 22:07:03.947(Timestamp)
2023-08-05 22:07:03.981 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:03.981 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.982 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:03.983 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 281937616, id=1687827562941779968, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=C, seatType=1, carriageSeatIndex=22, sell=00, createTime=2023-08-05 22:07:03, updateTime=2023-08-05 22:07:03]
2023-08-05 22:07:03.984 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:03.985 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827562941779968(Long), 2023-08-05(Date), 01(String), 1(Integer), 06(String), C(String), 1(String), 22(Integer), 00(String), 2023-08-05 22:07:03.982(Timestamp), 2023-08-05 22:07:03.982(Timestamp)
2023-08-05 22:07:04.016 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.016 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.017 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.018 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 471738731, id=1687827563088580608, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=D, seatType=1, carriageSeatIndex=23, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.019 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.020 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563088580608(Long), 2023-08-05(Date), 01(String), 1(Integer), 06(String), D(String), 1(String), 23(Integer), 00(String), 2023-08-05 22:07:04.017(Timestamp), 2023-08-05 22:07:04.017(Timestamp)
2023-08-05 22:07:04.055 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.055 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.056 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.056 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 897593385, id=1687827563252158464, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=06, col=F, seatType=1, carriageSeatIndex=24, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.057 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.058 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563252158464(Long), 2023-08-05(Date), 01(String), 1(Integer), 06(String), F(String), 1(String), 24(Integer), 00(String), 2023-08-05 22:07:04.056(Timestamp), 2023-08-05 22:07:04.056(Timestamp)
2023-08-05 22:07:04.089 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.090 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.090 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.091 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 279465002, id=1687827563394764800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=A, seatType=1, carriageSeatIndex=25, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.091 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.092 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563394764800(Long), 2023-08-05(Date), 01(String), 1(Integer), 07(String), A(String), 1(String), 25(Integer), 00(String), 2023-08-05 22:07:04.09(Timestamp), 2023-08-05 22:07:04.09(Timestamp)
2023-08-05 22:07:04.122 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.123 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.123 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.124 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 867450342, id=1687827563533176832, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=C, seatType=1, carriageSeatIndex=26, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.124 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.125 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563533176832(Long), 2023-08-05(Date), 01(String), 1(Integer), 07(String), C(String), 1(String), 26(Integer), 00(String), 2023-08-05 22:07:04.123(Timestamp), 2023-08-05 22:07:04.123(Timestamp)
2023-08-05 22:07:04.156 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.157 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.158 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.158 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 536718463, id=1687827563679977472, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=D, seatType=1, carriageSeatIndex=27, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.159 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.160 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563679977472(Long), 2023-08-05(Date), 01(String), 1(Integer), 07(String), D(String), 1(String), 27(Integer), 00(String), 2023-08-05 22:07:04.157(Timestamp), 2023-08-05 22:07:04.157(Timestamp)
2023-08-05 22:07:04.191 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.192 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.193 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.193 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 10101914, id=1687827563826778112, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=07, col=F, seatType=1, carriageSeatIndex=28, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.194 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.195 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563826778112(Long), 2023-08-05(Date), 01(String), 1(Integer), 07(String), F(String), 1(String), 28(Integer), 00(String), 2023-08-05 22:07:04.193(Timestamp), 2023-08-05 22:07:04.193(Timestamp)
2023-08-05 22:07:04.226 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.226 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.227 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.227 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 216651983, id=1687827563969384448, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=A, seatType=1, carriageSeatIndex=29, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.228 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.229 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827563969384448(Long), 2023-08-05(Date), 01(String), 1(Integer), 08(String), A(String), 1(String), 29(Integer), 00(String), 2023-08-05 22:07:04.227(Timestamp), 2023-08-05 22:07:04.227(Timestamp)
2023-08-05 22:07:04.260 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.261 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.261 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.262 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1423800713, id=1687827564111990784, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=C, seatType=1, carriageSeatIndex=30, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.262 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.264 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564111990784(Long), 2023-08-05(Date), 01(String), 1(Integer), 08(String), C(String), 1(String), 30(Integer), 00(String), 2023-08-05 22:07:04.261(Timestamp), 2023-08-05 22:07:04.261(Timestamp)
2023-08-05 22:07:04.295 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.296 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.297 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.298 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1074408744, id=1687827564262985728, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=D, seatType=1, carriageSeatIndex=31, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.299 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.300 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564262985728(Long), 2023-08-05(Date), 01(String), 1(Integer), 08(String), D(String), 1(String), 31(Integer), 00(String), 2023-08-05 22:07:04.296(Timestamp), 2023-08-05 22:07:04.296(Timestamp)
2023-08-05 22:07:04.338 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.339 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.340 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.341 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1805159533, id=1687827564443340800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=08, col=F, seatType=1, carriageSeatIndex=32, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.342 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.344 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564443340800(Long), 2023-08-05(Date), 01(String), 1(Integer), 08(String), F(String), 1(String), 32(Integer), 00(String), 2023-08-05 22:07:04.339(Timestamp), 2023-08-05 22:07:04.339(Timestamp)
2023-08-05 22:07:04.382 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.383 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.384 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.386 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1168246832, id=1687827564627890176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=A, seatType=2, carriageSeatIndex=1, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.387 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.390 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564627890176(Long), 2023-08-05(Date), 01(String), 2(Integer), 01(String), A(String), 2(String), 1(Integer), 00(String), 2023-08-05 22:07:04.383(Timestamp), 2023-08-05 22:07:04.383(Timestamp)
2023-08-05 22:07:04.421 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.422 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.423 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.424 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 185840120, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.425 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.427 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564791468032(Long), 2023-08-05(Date), 01(String), 2(Integer), 01(String), B(String), 2(String), 2(Integer), 00(String), 2023-08-05 22:07:04.423(Timestamp), 2023-08-05 22:07:04.423(Timestamp)
2023-08-05 22:07:04.463 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.464 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.465 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.466 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 180749143, id=1687827564967628800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=C, seatType=2, carriageSeatIndex=3, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.467 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.470 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827564967628800(Long), 2023-08-05(Date), 01(String), 2(Integer), 01(String), C(String), 2(String), 3(Integer), 00(String), 2023-08-05 22:07:04.465(Timestamp), 2023-08-05 22:07:04.465(Timestamp)
2023-08-05 22:07:04.507 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.508 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.509 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.509 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 88448868, id=1687827565152178176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.510 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.511 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565152178176(Long), 2023-08-05(Date), 01(String), 2(Integer), 01(String), D(String), 2(String), 4(Integer), 00(String), 2023-08-05 22:07:04.508(Timestamp), 2023-08-05 22:07:04.508(Timestamp)
2023-08-05 22:07:04.542 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.543 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.544 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.544 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1662509172, id=1687827565298978816, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.545 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.547 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565298978816(Long), 2023-08-05(Date), 01(String), 2(Integer), 01(String), F(String), 2(String), 5(Integer), 00(String), 2023-08-05 22:07:04.543(Timestamp), 2023-08-05 22:07:04.543(Timestamp)
2023-08-05 22:07:04.582 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.583 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.583 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.584 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 581138415, id=1687827565462556672, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.585 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.587 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565462556672(Long), 2023-08-05(Date), 01(String), 2(Integer), 02(String), A(String), 2(String), 6(Integer), 00(String), 2023-08-05 22:07:04.583(Timestamp), 2023-08-05 22:07:04.583(Timestamp)
2023-08-05 22:07:04.619 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.620 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.621 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.621 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 732598649, id=1687827565621940224, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.622 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.623 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565621940224(Long), 2023-08-05(Date), 01(String), 2(Integer), 02(String), B(String), 2(String), 7(Integer), 00(String), 2023-08-05 22:07:04.62(Timestamp), 2023-08-05 22:07:04.62(Timestamp)
2023-08-05 22:07:04.654 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.655 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.655 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.656 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 975797816, id=1687827565764546560, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.656 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.658 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565764546560(Long), 2023-08-05(Date), 01(String), 2(Integer), 02(String), C(String), 2(String), 8(Integer), 00(String), 2023-08-05 22:07:04.655(Timestamp), 2023-08-05 22:07:04.655(Timestamp)
2023-08-05 22:07:04.689 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.690 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.690 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.691 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 606697153, id=1687827565911347200, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=D, seatType=2, carriageSeatIndex=9, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.692 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.694 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827565911347200(Long), 2023-08-05(Date), 01(String), 2(Integer), 02(String), D(String), 2(String), 9(Integer), 00(String), 2023-08-05 22:07:04.69(Timestamp), 2023-08-05 22:07:04.69(Timestamp)
2023-08-05 22:07:04.729 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.729 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.730 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.731 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 889280715, id=1687827566079119360, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=F, seatType=2, carriageSeatIndex=10, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.731 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.732 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566079119360(Long), 2023-08-05(Date), 01(String), 2(Integer), 02(String), F(String), 2(String), 10(Integer), 00(String), 2023-08-05 22:07:04.73(Timestamp), 2023-08-05 22:07:04.73(Timestamp)
2023-08-05 22:07:04.796 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.796 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.797 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.797 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 969474913, id=1687827566360137728, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=A, seatType=2, carriageSeatIndex=11, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.798 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.799 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566360137728(Long), 2023-08-05(Date), 01(String), 2(Integer), 03(String), A(String), 2(String), 11(Integer), 00(String), 2023-08-05 22:07:04.796(Timestamp), 2023-08-05 22:07:04.796(Timestamp)
2023-08-05 22:07:04.835 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.835 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.836 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.836 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 61516855, id=1687827566523715584, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=B, seatType=2, carriageSeatIndex=12, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.837 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.837 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566523715584(Long), 2023-08-05(Date), 01(String), 2(Integer), 03(String), B(String), 2(String), 12(Integer), 00(String), 2023-08-05 22:07:04.836(Timestamp), 2023-08-05 22:07:04.836(Timestamp)
2023-08-05 22:07:04.868 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.869 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.870 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.870 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1802092360, id=1687827566666321920, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=C, seatType=2, carriageSeatIndex=13, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.871 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.871 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566666321920(Long), 2023-08-05(Date), 01(String), 2(Integer), 03(String), C(String), 2(String), 13(Integer), 00(String), 2023-08-05 22:07:04.869(Timestamp), 2023-08-05 22:07:04.869(Timestamp)
2023-08-05 22:07:04.908 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.908 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.909 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.910 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 308975794, id=1687827566829899776, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=D, seatType=2, carriageSeatIndex=14, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.910 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.911 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566829899776(Long), 2023-08-05(Date), 01(String), 2(Integer), 03(String), D(String), 2(String), 14(Integer), 00(String), 2023-08-05 22:07:04.909(Timestamp), 2023-08-05 22:07:04.909(Timestamp)
2023-08-05 22:07:04.942 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.942 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.943 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.943 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 2113347942, id=1687827566968311808, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=03, col=F, seatType=2, carriageSeatIndex=15, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.943 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.944 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827566968311808(Long), 2023-08-05(Date), 01(String), 2(Integer), 03(String), F(String), 2(String), 15(Integer), 00(String), 2023-08-05 22:07:04.942(Timestamp), 2023-08-05 22:07:04.942(Timestamp)
2023-08-05 22:07:04.976 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:04.976 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.976 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:04.977 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1173332410, id=1687827567110918144, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=A, seatType=2, carriageSeatIndex=16, sell=00, createTime=2023-08-05 22:07:04, updateTime=2023-08-05 22:07:04]
2023-08-05 22:07:04.977 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:04.977 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567110918144(Long), 2023-08-05(Date), 01(String), 2(Integer), 04(String), A(String), 2(String), 16(Integer), 00(String), 2023-08-05 22:07:04.976(Timestamp), 2023-08-05 22:07:04.976(Timestamp)
2023-08-05 22:07:05.010 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.011 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.011 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.012 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1214856397, id=1687827567257718784, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=B, seatType=2, carriageSeatIndex=17, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.012 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.012 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567257718784(Long), 2023-08-05(Date), 01(String), 2(Integer), 04(String), B(String), 2(String), 17(Integer), 00(String), 2023-08-05 22:07:05.011(Timestamp), 2023-08-05 22:07:05.011(Timestamp)
2023-08-05 22:07:05.044 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.044 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.045 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.045 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1127553552, id=1687827567400325120, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=C, seatType=2, carriageSeatIndex=18, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.045 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.046 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567400325120(Long), 2023-08-05(Date), 01(String), 2(Integer), 04(String), C(String), 2(String), 18(Integer), 00(String), 2023-08-05 22:07:05.044(Timestamp), 2023-08-05 22:07:05.044(Timestamp)
2023-08-05 22:07:05.079 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.079 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.080 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.080 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1080643875, id=1687827567547125760, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=D, seatType=2, carriageSeatIndex=19, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.080 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.081 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567547125760(Long), 2023-08-05(Date), 01(String), 2(Integer), 04(String), D(String), 2(String), 19(Integer), 00(String), 2023-08-05 22:07:05.079(Timestamp), 2023-08-05 22:07:05.079(Timestamp)
2023-08-05 22:07:05.127 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.128 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.128 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.128 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 742048466, id=1687827567748452352, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=04, col=F, seatType=2, carriageSeatIndex=20, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.129 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.129 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567748452352(Long), 2023-08-05(Date), 01(String), 2(Integer), 04(String), F(String), 2(String), 20(Integer), 00(String), 2023-08-05 22:07:05.128(Timestamp), 2023-08-05 22:07:05.128(Timestamp)
2023-08-05 22:07:05.164 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.164 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.165 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.165 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1541317933, id=1687827567903641600, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=A, seatType=2, carriageSeatIndex=21, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.165 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.166 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827567903641600(Long), 2023-08-05(Date), 01(String), 2(Integer), 05(String), A(String), 2(String), 21(Integer), 00(String), 2023-08-05 22:07:05.165(Timestamp), 2023-08-05 22:07:05.165(Timestamp)
2023-08-05 22:07:05.202 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.202 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.202 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.203 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1140005657, id=1687827568058830848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=B, seatType=2, carriageSeatIndex=22, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.203 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.204 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827568058830848(Long), 2023-08-05(Date), 01(String), 2(Integer), 05(String), B(String), 2(String), 22(Integer), 00(String), 2023-08-05 22:07:05.202(Timestamp), 2023-08-05 22:07:05.202(Timestamp)
2023-08-05 22:07:05.234 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.235 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.235 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.236 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 475805224, id=1687827568197242880, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=C, seatType=2, carriageSeatIndex=23, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.236 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.236 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827568197242880(Long), 2023-08-05(Date), 01(String), 2(Integer), 05(String), C(String), 2(String), 23(Integer), 00(String), 2023-08-05 22:07:05.235(Timestamp), 2023-08-05 22:07:05.235(Timestamp)
2023-08-05 22:07:05.267 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.268 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.268 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.270 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 1427011089, id=1687827568335654912, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=D, seatType=2, carriageSeatIndex=24, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.270 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.270 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827568335654912(Long), 2023-08-05(Date), 01(String), 2(Integer), 05(String), D(String), 2(String), 24(Integer), 00(String), 2023-08-05 22:07:05.268(Timestamp), 2023-08-05 22:07:05.268(Timestamp)
2023-08-05 22:07:05.302 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.303 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.303 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.303 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainSeat [Hash = 844461396, id=1687827568482455552, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=05, col=F, seatType=2, carriageSeatIndex=25, sell=00, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.304 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_seat (id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.304 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827568482455552(Long), 2023-08-05(Date), 01(String), 2(Integer), 05(String), F(String), 2(String), 25(Integer), 00(String), 2023-08-05 22:07:05.303(Timestamp), 2023-08-05 22:07:05.303(Timestamp)
2023-08-05 22:07:05.334 DEBUG com.jktickets.mapper.DailyTrainSeatMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.335 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainSeatMapper.insert(DailyTrainSeat))
2023-08-05 22:07:05.335 INFO  com.jktickets.service.DailyTrainSeatService       :142  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的座位信息结束
2023-08-05 22:07:05.385 INFO  com.jktickets.service.DailyTrainTicketService     :154  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的余票信息开始
2023-08-05 22:07:05.393 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-05 22:07:05.394 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@11b7a4e6
2023-08-05 22:07:05.396 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691244422171uzx  [0;39m ==>  Preparing: delete from daily_train_ticket WHERE ( `date` = ? and train_code = ? )
2023-08-05 22:07:05.396 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String)
2023-08-05 22:07:05.428 DEBUG c.j.mapper.DailyTrainTicketMapper.deleteByExample :137  [32m1691244422171uzx  [0;39m <==    Updates: 0
2023-08-05 22:07:05.429 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: deleteByExample | execution(int com.jktickets.mapper.DailyTrainTicketMapper.deleteByExample(DailyTrainTicketExample))
2023-08-05 22:07:05.430 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:05.430 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.TrainStationExample@5bea5b67
2023-08-05 22:07:05.431 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select id, train_code, `index`, `name`, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time from train_station WHERE ( train_code = ? ) order by `index` asc
2023-08-05 22:07:05.432 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m ==> Parameters: 01(String)
2023-08-05 22:07:05.449 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==    Columns: id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, update_time
2023-08-05 22:07:05.450 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680221469021442048, 01, 0, 上海, shanghai, 00:00:00, 00:02:00, 00:02:00, 12.00, 2023-07-15 22:23:09, 2023-07-15 23:30:42.560
2023-08-05 22:07:05.452 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680944224431902720, 01, 1, 温州, wenzhou, 22:14:58, 22:15:03, 00:00:05, 1.00, 2023-07-17 22:15:08.139, 2023-07-17 22:15:08.139
2023-08-05 22:07:05.453 TRACE c.j.mapper.TrainStationMapper.selectByExample     :143  [32m1691244422171uzx  [0;39m <==        Row: 1680491510900068352, 01, 2, 杭州, hangzhou, 15:00:00, 16:01:00, 01:01:00, 11.00, 2023-07-16 16:16:12.830, 2023-07-16 16:16:12.830
2023-08-05 22:07:05.454 DEBUG c.j.mapper.TrainStationMapper.selectByExample     :137  [32m1691244422171uzx  [0;39m <==      Total: 3
2023-08-05 22:07:05.455 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.TrainStationMapper.selectByExample(TrainStationExample))
2023-08-05 22:07:05.457 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.458 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2b1f9faf
2023-08-05 22:07:05.460 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.460 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:07:05.479 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.480 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 32
2023-08-05 22:07:05.481 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.482 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.482 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.483 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6797adf0
2023-08-05 22:07:05.485 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.486 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:07:05.502 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.503 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 25
2023-08-05 22:07:05.503 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.504 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.504 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.505 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3db9eefa
2023-08-05 22:07:05.506 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.507 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 3(String)
2023-08-05 22:07:05.523 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.524 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.524 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.525 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.525 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.525 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4ec7517
2023-08-05 22:07:05.526 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.527 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 4(String)
2023-08-05 22:07:05.543 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.544 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.544 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.544 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.551 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.551 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainTicket [Hash = 1544313956, id=1687827569119989760, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=温州, endPinyin=wenzhou, endTime=Thu Jan 01 22:14:58 CST 1970, endIndex=1, ydz=32, ydzPrice=0.48, edz=25, edzPrice=0.36, rw=-1, rwPrice=0.72, yw=-1, ywPrice=0.60, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.552 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.553 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827569119989760(Long), 2023-08-05(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 温州(String), wenzhou(String), 22:14:58(Time), 1(Integer), 32(Integer), 0.48(BigDecimal), 25(Integer), 0.36(BigDecimal), -1(Integer), 0.72(BigDecimal), -1(Integer), 0.60(BigDecimal), 2023-08-05 22:07:05.455(Timestamp), 2023-08-05 22:07:05.455(Timestamp)
2023-08-05 22:07:05.586 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.587 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.587 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.587 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@14c90f9b
2023-08-05 22:07:05.588 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.589 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:07:05.604 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.605 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 32
2023-08-05 22:07:05.605 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.605 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.606 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.606 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2b08224c
2023-08-05 22:07:05.607 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.607 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:07:05.625 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.625 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 25
2023-08-05 22:07:05.626 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.626 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.626 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.626 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@17bdc71
2023-08-05 22:07:05.628 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.628 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 3(String)
2023-08-05 22:07:05.644 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.645 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.645 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.646 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.646 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.646 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@742ae47d
2023-08-05 22:07:05.647 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.648 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 4(String)
2023-08-05 22:07:05.665 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.665 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.665 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.666 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.666 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.666 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainTicket [Hash = 424704785, id=1687827569673637888, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=上海, startPinyin=shanghai, startTime=Thu Jan 01 00:02:00 CST 1970, startIndex=0, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.76, edz=25, edzPrice=4.32, rw=-1, rwPrice=8.64, yw=-1, ywPrice=7.20, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.666 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.668 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827569673637888(Long), 2023-08-05(Date), 01(String), 上海(String), shanghai(String), 00:02:00(Time), 0(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.76(BigDecimal), 25(Integer), 4.32(BigDecimal), -1(Integer), 8.64(BigDecimal), -1(Integer), 7.20(BigDecimal), 2023-08-05 22:07:05.455(Timestamp), 2023-08-05 22:07:05.455(Timestamp)
2023-08-05 22:07:05.701 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.702 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.702 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.702 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7dae3f91
2023-08-05 22:07:05.703 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.704 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:07:05.719 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.719 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 32
2023-08-05 22:07:05.719 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.719 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.721 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.721 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@155a8eb1
2023-08-05 22:07:05.722 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.722 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:07:05.737 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.737 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 25
2023-08-05 22:07:05.738 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.738 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.738 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.738 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@690b956b
2023-08-05 22:07:05.739 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.740 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 3(String)
2023-08-05 22:07:05.778 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.779 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.779 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.779 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.779 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.779 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@60c07c56
2023-08-05 22:07:05.780 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==>  Preparing: select count(*) from daily_train_seat WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:07:05.781 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 4(String)
2023-08-05 22:07:05.797 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==    Columns: count(*)
2023-08-05 22:07:05.797 TRACE c.j.mapper.DailyTrainSeatMapper.countByExample    :143  [32m1691244422171uzx  [0;39m <==        Row: 0
2023-08-05 22:07:05.797 DEBUG c.j.mapper.DailyTrainSeatMapper.countByExample    :137  [32m1691244422171uzx  [0;39m <==      Total: 1
2023-08-05 22:07:05.798 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: countByExample | execution(long com.jktickets.mapper.DailyTrainSeatMapper.countByExample(DailyTrainSeatExample))
2023-08-05 22:07:05.798 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244422171uzx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.798 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244422171uzx  [0;39m 参数值: DailyTrainTicket [Hash = 455736988, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=2023-08-05 22:07:05, updateTime=2023-08-05 22:07:05]
2023-08-05 22:07:05.798 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==>  Preparing: insert into daily_train_ticket (id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:07:05.799 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m ==> Parameters: 1687827570155982848(Long), 2023-08-05(Date), 01(String), 温州(String), wenzhou(String), 22:15:03(Time), 1(Integer), 杭州(String), hangzhou(String), 15:00:00(Time), 2(Integer), 32(Integer), 5.28(BigDecimal), 25(Integer), 3.96(BigDecimal), -1(Integer), 7.92(BigDecimal), -1(Integer), 6.60(BigDecimal), 2023-08-05 22:07:05.455(Timestamp), 2023-08-05 22:07:05.455(Timestamp)
2023-08-05 22:07:05.831 DEBUG c.jktickets.mapper.DailyTrainTicketMapper.insert  :137  [32m1691244422171uzx  [0;39m <==    Updates: 1
2023-08-05 22:07:05.831 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244422171uzx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.DailyTrainTicketMapper.insert(DailyTrainTicket))
2023-08-05 22:07:05.831 INFO  com.jktickets.service.DailyTrainTicketService     :222  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的余票信息结束
2023-08-05 22:07:05.862 INFO  com.jktickets.service.DailyTrainService           :182  [32m1691244422171uzx  [0;39m 生成日期【2023-08-05】车次【01】的信息结束
2023-08-05 22:07:05.862 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244422171uzx  [0;39m 返回结果: {"code":0,"message":"","result":"生成每日火车成功","success":true}
2023-08-05 22:07:05.862 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244422171uzx  [0;39m ------------- 结束 耗时：3685 ms -------------
2023-08-05 22:07:05.937 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244425937tk8  [0;39m ------------- 开始 -------------
2023-08-05 22:07:05.938 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244425937tk8  [0;39m 请求地址: http://192.168.0.102:8002/business/admin/dailyTrain/queryList GET
2023-08-05 22:07:05.938 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244425937tk8  [0;39m 类名方法: com.jktickets.controller.admin.DailyTrainAdminController.queryDailyTrainList
2023-08-05 22:07:05.938 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244425937tk8  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:05.939 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244425937tk8  [0;39m 请求参数: [{"page":1,"size":10}]
2023-08-05 22:07:05.939 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244425937tk8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-05 22:07:05.939 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244425937tk8  [0;39m 参数值: com.jktickets.domain.DailyTrainExample@568b6dd9
2023-08-05 22:07:05.944 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691244425937tk8  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train
2023-08-05 22:07:05.945 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691244425937tk8  [0;39m ==> Parameters: 
2023-08-05 22:07:05.961 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691244425937tk8  [0;39m <==    Columns: count(0)
2023-08-05 22:07:05.962 TRACE c.j.mapper.DailyTrainMapper.selectByExample_COUNT :143  [32m1691244425937tk8  [0;39m <==        Row: 5
2023-08-05 22:07:05.962 DEBUG c.j.mapper.DailyTrainMapper.selectByExample_COUNT :137  [32m1691244425937tk8  [0;39m <==      Total: 1
2023-08-05 22:07:05.962 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691244425937tk8  [0;39m ==>  Preparing: select id, `date`, code, `type`, `start`, start_pinyin, start_time, `end`, end_pinyin, end_time, create_time, update_time from daily_train order by date desc,code asc LIMIT ?
2023-08-05 22:07:05.963 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691244425937tk8  [0;39m ==> Parameters: 10(Integer)
2023-08-05 22:07:05.979 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==    Columns: id, date, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, update_time
2023-08-05 22:07:05.981 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==        Row: 1687827556604186624, 2023-08-05, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-08-05 22:07:02.461, 2023-08-05 22:07:02.461
2023-08-05 22:07:05.983 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==        Row: 1684918058998697984, 2023-07-28, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-28 21:25:44.186, 2023-07-28 21:25:44.186
2023-08-05 22:07:05.984 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==        Row: 1683830333470019584, 2023-07-25, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-25 21:23:30.210, 2023-07-25 21:23:30.210
2023-08-05 22:07:05.985 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==        Row: 1680944271118700544, 2023-07-17, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-17 22:15:19.326, 2023-07-17 22:15:19.326
2023-08-05 22:07:05.986 TRACE c.j.mapper.DailyTrainMapper.selectByExample       :143  [32m1691244425937tk8  [0;39m <==        Row: 1680569709331877888, 2023-07-16, 01, G, 上海, shanghai, 01:00:02, 温州, wenzhou, 02:00:00, 2023-07-16 21:26:56.829, 2023-07-16 21:26:56.829
2023-08-05 22:07:05.986 DEBUG c.j.mapper.DailyTrainMapper.selectByExample       :137  [32m1691244425937tk8  [0;39m <==      Total: 5
2023-08-05 22:07:05.987 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244425937tk8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainMapper.selectByExample(DailyTrainExample))
2023-08-05 22:07:05.987 INFO  com.jktickets.service.DailyTrainService           :104  [32m1691244425937tk8  [0;39m 总行数：5
2023-08-05 22:07:05.987 INFO  com.jktickets.service.DailyTrainService           :105  [32m1691244425937tk8  [0;39m 总页数：1
2023-08-05 22:07:05.988 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244425937tk8  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"code":"01","createTime":1691244422461,"date":1691164800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1687827556604186624,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1691244422461},{"code":"01","createTime":1690550744186,"date":1690473600000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1684918058998697984,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690550744186},{"code":"01","createTime":1690291410210,"date":1690214400000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1683830333470019584,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1690291410210},{"code":"01","createTime":1689603319326,"date":1689523200000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680944271118700544,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689603319326},{"code":"01","createTime":1689514016829,"date":1689436800000,"end":"温州","endPinyin":"wenzhou","endTime":-21600000,"id":1680569709331877888,"start":"上海","startPinyin":"shanghai","startTime":-25198000,"type":"G","updateTime":1689514016829}],"total":5},"success":true}
2023-08-05 22:07:05.988 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244425937tk8  [0;39m ------------- 结束 耗时：51 ms -------------
2023-08-05 22:07:12.372 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244432372ucq  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:12.377 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244432377dmv  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:12.650 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244432377dmv  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.650 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244432372ucq  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.654 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244432377dmv  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.654 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244432372ucq  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.660 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244432372ucq  [0;39m ------------- 开始 -------------
2023-08-05 22:07:12.660 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244432372ucq  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:07:12.660 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244432372ucq  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:07:12.660 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244432372ucq  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:12.660 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244432372ucq  [0;39m 请求参数: []
2023-08-05 22:07:12.661 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244432372ucq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:12.661 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244432372ucq  [0;39m 参数值: com.jktickets.domain.StationExample@3e9a7421
2023-08-05 22:07:12.674 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244432377dmv  [0;39m ------------- 开始 -------------
2023-08-05 22:07:12.674 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244432377dmv  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:07:12.674 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244432377dmv  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:07:12.674 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244432377dmv  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:12.677 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244432377dmv  [0;39m 请求参数: [{"date":1690473600000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:07:12.682 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432372ucq  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:07:12.683 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432372ucq  [0;39m ==> Parameters: 
2023-08-05 22:07:12.699 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432372ucq  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:07:12.700 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432372ucq  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:07:12.701 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432372ucq  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:07:12.701 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432372ucq  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:07:12.701 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432372ucq  [0;39m <==      Total: 3
2023-08-05 22:07:12.702 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244432372ucq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:12.709 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244432372ucq  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:07:12.709 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244432372ucq  [0;39m ------------- 结束 耗时：49 ms -------------
2023-08-05 22:07:12.728 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244432728lub  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:12.729 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244432728lub  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.730 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244432728lub  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:12.730 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244432728lub  [0;39m ------------- 开始 -------------
2023-08-05 22:07:12.731 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244432728lub  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:07:12.731 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244432728lub  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:07:12.731 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244432728lub  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:12.732 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244432728lub  [0;39m 请求参数: []
2023-08-05 22:07:12.732 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244432728lub  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:12.733 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244432728lub  [0;39m 参数值: com.jktickets.domain.StationExample@7016a438
2023-08-05 22:07:12.734 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432728lub  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:07:12.734 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432728lub  [0;39m ==> Parameters: 
2023-08-05 22:07:12.750 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432728lub  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:07:12.751 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432728lub  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:07:12.752 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432728lub  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:07:12.753 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244432728lub  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:07:12.754 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244432728lub  [0;39m <==      Total: 3
2023-08-05 22:07:12.755 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244432728lub  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:12.755 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244432728lub  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:07:12.756 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244432728lub  [0;39m ------------- 结束 耗时：26 ms -------------
2023-08-05 22:07:13.220 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244432377dmv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:07:13.221 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244432377dmv  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4d15fdf6
2023-08-05 22:07:13.241 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244432377dmv  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket WHERE (`date` = ? AND `start` = ? AND `end` = ?)
2023-08-05 22:07:13.241 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244432377dmv  [0;39m ==> Parameters: 2023-07-28(Date), 温州(String), 杭州(String)
2023-08-05 22:07:13.257 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244432377dmv  [0;39m <==    Columns: count(0)
2023-08-05 22:07:13.257 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244432377dmv  [0;39m <==        Row: 1
2023-08-05 22:07:13.257 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244432377dmv  [0;39m <==      Total: 1
2023-08-05 22:07:13.258 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244432377dmv  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and `start` = ? and `end` = ? ) order by id desc LIMIT ?
2023-08-05 22:07:13.258 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244432377dmv  [0;39m ==> Parameters: 2023-07-28(Date), 温州(String), 杭州(String), 10(Integer)
2023-08-05 22:07:13.284 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244432377dmv  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:07:13.285 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244432377dmv  [0;39m <==        Row: 1684918068104531968, 2023-07-28, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -79, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-07-28 21:25:46.171, 2023-07-28 21:25:46.171
2023-08-05 22:07:13.286 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244432377dmv  [0;39m <==      Total: 1
2023-08-05 22:07:13.286 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244432377dmv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:07:13.286 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691244432377dmv  [0;39m 总行数：1
2023-08-05 22:07:13.286 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691244432377dmv  [0;39m 总页数：1
2023-08-05 22:07:13.328 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244432377dmv  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1690550746171,"date":1690473600000,"edz":-6,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1684918068104531968,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1690550746171,"ydz":-79,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:07:13.328 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244432377dmv  [0;39m ------------- 结束 耗时：654 ms -------------
2023-08-05 22:07:45.141 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244465141kbz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:45.141 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912444651416jz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:45.141 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912444651416jz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.141 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244465141kbz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.142 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244465141kbz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.142 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912444651416jz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.142 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244465141kbz  [0;39m ------------- 开始 -------------
2023-08-05 22:07:45.142 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244465141kbz  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244465141kbz  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244465141kbz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244465141kbz  [0;39m 请求参数: []
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912444651416jz  [0;39m ------------- 开始 -------------
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912444651416jz  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:07:45.143 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244465141kbz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:45.144 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912444651416jz  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:07:45.144 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244465141kbz  [0;39m 参数值: com.jktickets.domain.StationExample@683611cb
2023-08-05 22:07:45.144 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912444651416jz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:45.144 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912444651416jz  [0;39m 请求参数: [{"date":1690473600000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:07:45.159 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465141kbz  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:07:45.159 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465141kbz  [0;39m ==> Parameters: 
2023-08-05 22:07:45.162 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912444651416jz  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1690550746171,"date":1690473600000,"edz":-6,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1684918068104531968,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1690550746171,"ydz":-79,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:07:45.162 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912444651416jz  [0;39m ------------- 结束 耗时：19 ms -------------
2023-08-05 22:07:45.176 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465141kbz  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:07:45.177 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465141kbz  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:07:45.178 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465141kbz  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:07:45.178 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465141kbz  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:07:45.179 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465141kbz  [0;39m <==      Total: 3
2023-08-05 22:07:45.180 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244465141kbz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:45.181 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244465141kbz  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:07:45.182 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244465141kbz  [0;39m ------------- 结束 耗时：40 ms -------------
2023-08-05 22:07:45.193 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244465193u1a  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:45.194 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244465193u1a  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.194 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244465193u1a  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:45.194 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244465193u1a  [0;39m ------------- 开始 -------------
2023-08-05 22:07:45.195 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244465193u1a  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:07:45.195 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244465193u1a  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:07:45.195 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244465193u1a  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:45.195 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244465193u1a  [0;39m 请求参数: []
2023-08-05 22:07:45.195 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244465193u1a  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:45.196 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244465193u1a  [0;39m 参数值: com.jktickets.domain.StationExample@166b9f23
2023-08-05 22:07:45.196 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465193u1a  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:07:45.197 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465193u1a  [0;39m ==> Parameters: 
2023-08-05 22:07:45.213 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465193u1a  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:07:45.214 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465193u1a  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:07:45.214 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465193u1a  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:07:45.215 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244465193u1a  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:07:45.215 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244465193u1a  [0;39m <==      Total: 3
2023-08-05 22:07:45.216 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244465193u1a  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:07:45.216 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244465193u1a  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:07:45.216 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244465193u1a  [0;39m ------------- 结束 耗时：22 ms -------------
2023-08-05 22:07:48.937 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244468937nyh  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:07:48.938 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244468937nyh  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:48.938 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244468937nyh  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:07:48.940 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244468937nyh  [0;39m ------------- 开始 -------------
2023-08-05 22:07:48.941 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244468937nyh  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:07:48.941 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244468937nyh  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:07:48.942 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244468937nyh  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:07:48.942 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244468937nyh  [0;39m 请求参数: [{"date":1691164800000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:07:48.956 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244468937nyh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:07:48.956 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244468937nyh  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@316f798b
2023-08-05 22:07:48.978 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244468937nyh  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket WHERE (`date` = ? AND `start` = ? AND `end` = ?)
2023-08-05 22:07:48.978 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244468937nyh  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String)
2023-08-05 22:07:48.996 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244468937nyh  [0;39m <==    Columns: count(0)
2023-08-05 22:07:48.997 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244468937nyh  [0;39m <==        Row: 1
2023-08-05 22:07:48.997 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244468937nyh  [0;39m <==      Total: 1
2023-08-05 22:07:48.997 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244468937nyh  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and `start` = ? and `end` = ? ) order by id desc LIMIT ?
2023-08-05 22:07:48.997 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244468937nyh  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String), 10(Integer)
2023-08-05 22:07:49.018 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244468937nyh  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:07:49.019 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244468937nyh  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 32, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:07:49.020 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244468937nyh  [0;39m <==      Total: 1
2023-08-05 22:07:49.021 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244468937nyh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:07:49.021 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691244468937nyh  [0;39m 总行数：1
2023-08-05 22:07:49.021 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691244468937nyh  [0;39m 总页数：1
2023-08-05 22:07:49.038 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244468937nyh  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691244425455,"date":1691164800000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":32,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:07:49.039 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244468937nyh  [0;39m ------------- 结束 耗时：99 ms -------------
2023-08-05 22:08:02.001 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244482001e5w  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:02.002 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244482001e5w  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:02.002 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244482001e5w  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:02.025 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244482001e5w  [0;39m ------------- 开始 -------------
2023-08-05 22:08:02.025 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244482001e5w  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:02.026 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244482001e5w  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:02.026 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244482001e5w  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:02.032 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244482001e5w  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:02.066 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:02.067 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: ConfirmOrder [Hash = 106292297, id=1687827806559539200, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:02, updateTime=2023-08-05 22:08:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:02.068 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244482001e5w  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:02.069 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244482001e5w  [0;39m ==> Parameters: 1687827806559539200(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:02.065(Timestamp), 2023-08-05 22:08:02.065(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:02.113 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244482001e5w  [0;39m <==    Updates: 1
2023-08-05 22:08:02.114 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:02.114 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:02.114 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5e314760
2023-08-05 22:08:02.116 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244482001e5w  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:02.117 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244482001e5w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:02.134 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244482001e5w  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:02.135 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 32, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:02.136 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244482001e5w  [0;39m <==      Total: 1
2023-08-05 22:08:02.136 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:02.136 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244482001e5w  [0;39m 查出余票记录:DailyTrainTicket [Hash = 874700177, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=32, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:02.138 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244482001e5w  [0;39m 本次购票没有选座
2023-08-05 22:08:02.139 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:02.139 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@15c27d33
2023-08-05 22:08:02.140 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244482001e5w  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:02.140 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244482001e5w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:02.156 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244482001e5w  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:02.157 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:02.157 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244482001e5w  [0;39m <==      Total: 1
2023-08-05 22:08:02.157 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:02.158 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244482001e5w  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:02.158 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244482001e5w  [0;39m 从车厢1选座
2023-08-05 22:08:02.158 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:02.158 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@602ad13c
2023-08-05 22:08:02.159 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244482001e5w  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:02.159 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244482001e5w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:02.178 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:02.179 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 00, 2023-08-05 22:07:03.109, 2023-08-05 22:07:03.109
2023-08-05 22:08:02.180 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 00, 2023-08-05 22:07:03.149, 2023-08-05 22:07:03.149
2023-08-05 22:08:02.181 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:02.183 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:02.183 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:02.184 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:02.185 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:02.186 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:02.186 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:02.187 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:02.187 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:02.187 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:02.188 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:02.189 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:02.189 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:02.190 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:02.190 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:02.191 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:02.192 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:02.192 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:02.192 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:02.193 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:02.193 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:02.194 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:02.194 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:02.195 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:02.195 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:02.195 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:02.196 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:02.197 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:02.197 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:02.198 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244482001e5w  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:02.199 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244482001e5w  [0;39m <==      Total: 32
2023-08-05 22:08:02.199 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:02.200 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244482001e5w  [0;39m 车厢1的座位数:32
2023-08-05 22:08:02.200 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244482001e5w  [0;39m 无选座
2023-08-05 22:08:02.200 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244482001e5w  [0;39m 座位1在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:02.201 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244482001e5w  [0;39m 座位1被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:02.201 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244482001e5w  [0;39m 选中座位
2023-08-05 22:08:02.202 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244482001e5w  [0;39m 最终选座:[DailyTrainSeat [Hash = 1989780640, id=1687827559288541184, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=A, seatType=1, carriageSeatIndex=1, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:02.220 INFO  io.seata.tm.TransactionManagerHolder              :40   [32m1691244482001e5w  [0;39m TransactionManager Singleton io.seata.tm.DefaultTransactionManager@5e307ebd
2023-08-05 22:08:02.246 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244482001e5w  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193146]
2023-08-05 22:08:02.246 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244482001e5w  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193146
2023-08-05 22:08:02.246 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:02.247 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: DailyTrainSeat [Hash = 1700533209, id=1687827559288541184, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:02 CST 2023]
2023-08-05 22:08:02.249 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:02.249 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:02.246(Timestamp), 1687827559288541184(Long)
2023-08-05 22:08:02.279 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m <==    Updates: 1
2023-08-05 22:08:02.280 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:02.280 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244482001e5w  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:02.281 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244482001e5w  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:02.286 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244482001e5w  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:02.286 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244482001e5w  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:02.317 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244482001e5w  [0;39m <==    Updates: 3
2023-08-05 22:08:02.396 INFO  com.alibaba.nacos.client.naming                   :167  [32m1691244482001e5w  [0;39m [SUBSCRIBE-SERVICE] service:member-service, group:DEFAULT_GROUP, clusters: 
2023-08-05 22:08:02.401 INFO  com.alibaba.nacos.client.naming                   :184  [32m1691244482001e5w  [0;39m init new ips(1) service: DEFAULT_GROUP@@member-service -> [{"ip":"192.168.0.102","port":8001,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@member-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:08:02.402 INFO  com.alibaba.nacos.client.naming                   :169  [32m1691244482001e5w  [0;39m current ips:(1) service: DEFAULT_GROUP@@member-service -> [{"ip":"192.168.0.102","port":8001,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@member-service","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000,"ipDeleteTimeout":30000}]
2023-08-05 22:08:02.927 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Receive server push request, request = NotifySubscriberRequest, requestId = 59
2023-08-05 22:08:02.927 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Ack server push request, request = NotifySubscriberRequest, requestId = 59
2023-08-05 22:08:03.187 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244482001e5w  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:03.190 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244482001e5w  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:03.190 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244482001e5w  [0;39m 参数值: ConfirmOrder [Hash = 77272962, id=1687827806559539200, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:03 CST 2023, tickets=null]
2023-08-05 22:08:03.191 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:03.192 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:03.19(Timestamp), 1687827806559539200(Long)
2023-08-05 22:08:03.232 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244482001e5w  [0;39m <==    Updates: 1
2023-08-05 22:08:03.233 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244482001e5w  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:03.233 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244482001e5w  [0;39m transaction 192.168.0.102:8091:7278238012553193146 will be commit
2023-08-05 22:08:03.302 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244482001e5w  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193146
2023-08-05 22:08:03.302 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244482001e5w  [0;39m [192.168.0.102:8091:7278238012553193146] commit status: Committed
2023-08-05 22:08:03.335 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244482001e5w  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:03.335 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244482001e5w  [0;39m ------------- 结束 耗时：1310 ms -------------
2023-08-05 22:08:51.000 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531000v7z  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.001 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531000v7z  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.001 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531000v7z  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.003 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531000v7z  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.004 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531000v7z  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.004 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531000v7z  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.004 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531000v7z  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.004 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531000v7z  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.034 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.035 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: ConfirmOrder [Hash = 1745682270, id=1687828011950411776, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.036 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531000v7z  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.037 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531000v7z  [0;39m ==> Parameters: 1687828011950411776(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.034(Timestamp), 2023-08-05 22:08:51.034(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.067 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531000v7z  [0;39m <==    Updates: 1
2023-08-05 22:08:51.067 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.068 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.068 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3dd33798
2023-08-05 22:08:51.069 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531000v7z  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.070 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531000v7z  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.087 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531000v7z  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.088 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 31, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.088 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531000v7z  [0;39m <==      Total: 1
2023-08-05 22:08:51.089 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.089 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531000v7z  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1739095360, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=31, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.089 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531000v7z  [0;39m 本次购票没有选座
2023-08-05 22:08:51.090 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.090 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@54e53510
2023-08-05 22:08:51.091 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531000v7z  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.092 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531000v7z  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.100 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531100728  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.101 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531100728  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.101 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531100728  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.102 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531100728  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.102 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531100728  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.102 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531100728  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.103 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531100728  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.103 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531100728  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.108 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531000v7z  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.108 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.108 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531000v7z  [0;39m <==      Total: 1
2023-08-05 22:08:51.108 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.108 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531000v7z  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.108 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531000v7z  [0;39m 从车厢1选座
2023-08-05 22:08:51.108 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.110 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@75080494
2023-08-05 22:08:51.110 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531000v7z  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.111 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531000v7z  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.129 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.130 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.130 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 00, 2023-08-05 22:07:03.149, 2023-08-05 22:07:03.149
2023-08-05 22:08:51.131 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.132 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.132 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.132 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.133 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.134 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.134 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.135 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: ConfirmOrder [Hash = 1529762446, id=1687828012369842176, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.135 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531100728  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.135 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.136 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.136 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531100728  [0;39m ==> Parameters: 1687828012369842176(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.134(Timestamp), 2023-08-05 22:08:51.134(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.137 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.137 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.138 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.138 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.139 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.139 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.139 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.140 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.141 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.141 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.142 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.142 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531000v7z  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.147 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531000v7z  [0;39m <==      Total: 32
2023-08-05 22:08:51.147 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531000v7z  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531000v7z  [0;39m 无选座
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531000v7z  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531000v7z  [0;39m 无选座
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531000v7z  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531000v7z  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531000v7z  [0;39m 选中座位
2023-08-05 22:08:51.148 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531000v7z  [0;39m 最终选座:[DailyTrainSeat [Hash = 744408960, id=1687827559447924736, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.168 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531100728  [0;39m <==    Updates: 1
2023-08-05 22:08:51.169 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.169 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.169 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@205aa84a
2023-08-05 22:08:51.170 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531100728  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.170 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531100728  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.187 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531100728  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.187 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531100728  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 31, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.188 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531100728  [0;39m <==      Total: 1
2023-08-05 22:08:51.188 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.188 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531100728  [0;39m 查出余票记录:DailyTrainTicket [Hash = 772805612, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=31, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.189 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531100728  [0;39m 本次购票没有选座
2023-08-05 22:08:51.189 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.189 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@45abd7b6
2023-08-05 22:08:51.191 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531100728  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.192 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531100728  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.199 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531199ino  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.199 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531199ino  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.199 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531000v7z  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193152]
2023-08-05 22:08:51.199 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531199ino  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.200 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531000v7z  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193152
2023-08-05 22:08:51.200 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.200 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: DailyTrainSeat [Hash = 1360857816, id=1687827559447924736, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.200 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.201 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.2(Timestamp), 1687827559447924736(Long)
2023-08-05 22:08:51.201 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531199ino  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.201 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531199ino  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.201 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531199ino  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.201 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531199ino  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.202 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531199ino  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.208 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531100728  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.209 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531100728  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.209 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531100728  [0;39m <==      Total: 1
2023-08-05 22:08:51.209 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.210 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531100728  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.210 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531100728  [0;39m 从车厢1选座
2023-08-05 22:08:51.210 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.210 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@45441392
2023-08-05 22:08:51.211 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531100728  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.212 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531100728  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.230 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.231 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.231 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: ConfirmOrder [Hash = 771276290, id=1687828012772495360, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.231 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.232 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531199ino  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.232 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 00, 2023-08-05 22:07:03.149, 2023-08-05 22:07:03.149
2023-08-05 22:08:51.232 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.233 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531199ino  [0;39m ==> Parameters: 1687828012772495360(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.23(Timestamp), 2023-08-05 22:08:51.23(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.233 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.233 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m <==    Updates: 1
2023-08-05 22:08:51.233 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.234 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531000v7z  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:51.234 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.234 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531000v7z  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:51.235 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.235 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531000v7z  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:51.235 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531000v7z  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:51.235 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.236 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.237 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.237 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.238 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.239 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.239 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.240 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.240 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.241 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.241 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.242 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.242 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.243 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.244 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.244 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.244 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.245 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.245 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.246 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.247 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.248 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.248 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.249 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.249 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.250 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531100728  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.250 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531100728  [0;39m <==      Total: 32
2023-08-05 22:08:51.251 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531100728  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531100728  [0;39m 无选座
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531100728  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531100728  [0;39m 无选座
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531100728  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531100728  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531100728  [0;39m 选中座位
2023-08-05 22:08:51.251 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531100728  [0;39m 最终选座:[DailyTrainSeat [Hash = 475376583, id=1687827559447924736, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.258 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531199ino  [0;39m <==    Updates: 1
2023-08-05 22:08:51.259 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.259 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.259 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@58be9f93
2023-08-05 22:08:51.260 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531199ino  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.261 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531199ino  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.267 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531000v7z  [0;39m <==    Updates: 3
2023-08-05 22:08:51.268 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531100728  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193153]
2023-08-05 22:08:51.268 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531100728  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193153
2023-08-05 22:08:51.268 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.268 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: DailyTrainSeat [Hash = 692693061, id=1687827559447924736, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.269 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.269 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.268(Timestamp), 1687827559447924736(Long)
2023-08-05 22:08:51.296 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531296z9e  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.297 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531296z9e  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.297 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531296z9e  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.299 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531296z9e  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.299 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531296z9e  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.299 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531296z9e  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.299 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531296z9e  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.299 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531296z9e  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.325 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531199ino  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.327 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531199ino  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 31, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.327 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531199ino  [0;39m <==      Total: 1
2023-08-05 22:08:51.327 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.328 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531199ino  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1456362500, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=31, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.328 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531199ino  [0;39m 本次购票没有选座
2023-08-05 22:08:51.328 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.328 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2a393f35
2023-08-05 22:08:51.329 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531199ino  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.329 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531199ino  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.339 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.339 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: ConfirmOrder [Hash = 2066575340, id=1687828013225480192, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.339 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531296z9e  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.340 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531296z9e  [0;39m ==> Parameters: 1687828013225480192(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.338(Timestamp), 2023-08-05 22:08:51.338(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.342 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531199ino  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.342 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531199ino  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.343 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531199ino  [0;39m <==      Total: 1
2023-08-05 22:08:51.343 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.343 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531199ino  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.344 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531199ino  [0;39m 从车厢1选座
2023-08-05 22:08:51.344 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.344 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@47d95266
2023-08-05 22:08:51.345 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531199ino  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.345 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531199ino  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.362 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.363 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.364 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 00, 2023-08-05 22:07:03.149, 2023-08-05 22:07:03.149
2023-08-05 22:08:51.365 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.365 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.366 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.366 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.367 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.367 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.368 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.368 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.369 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.369 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.370 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.370 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.371 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.371 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.372 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.373 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.373 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.374 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.374 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.374 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.375 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.376 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.376 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.376 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.377 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.377 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.378 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.378 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.379 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.379 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531199ino  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.379 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531199ino  [0;39m <==      Total: 32
2023-08-05 22:08:51.379 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.379 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531199ino  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531199ino  [0;39m 无选座
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531199ino  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531199ino  [0;39m 无选座
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531199ino  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531199ino  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531199ino  [0;39m 选中座位
2023-08-05 22:08:51.380 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531199ino  [0;39m 最终选座:[DailyTrainSeat [Hash = 11537197, id=1687827559447924736, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.398 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445313981hu  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.399 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531199ino  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193156]
2023-08-05 22:08:51.399 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531199ino  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193156
2023-08-05 22:08:51.399 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445313981hu  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.399 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.399 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445313981hu  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.399 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: DailyTrainSeat [Hash = 1034251394, id=1687827559447924736, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.400 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.400 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.399(Timestamp), 1687827559447924736(Long)
2023-08-05 22:08:51.400 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445313981hu  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.401 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445313981hu  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.401 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445313981hu  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.401 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445313981hu  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.402 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445313981hu  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.428 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.429 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: ConfirmOrder [Hash = 2026947615, id=1687828013602967552, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.429 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445313981hu  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.430 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445313981hu  [0;39m ==> Parameters: 1687828013602967552(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.428(Timestamp), 2023-08-05 22:08:51.428(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.457 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445313981hu  [0;39m <==    Updates: 1
2023-08-05 22:08:51.457 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.458 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.458 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1c391059
2023-08-05 22:08:51.459 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445313981hu  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.459 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445313981hu  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.472 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445313981hu  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.473 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445313981hu  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 31, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.474 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445313981hu  [0;39m <==      Total: 1
2023-08-05 22:08:51.474 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.475 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445313981hu  [0;39m 查出余票记录:DailyTrainTicket [Hash = 174291123, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=31, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.475 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445313981hu  [0;39m 本次购票没有选座
2023-08-05 22:08:51.475 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.475 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2be00fb7
2023-08-05 22:08:51.476 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445313981hu  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.477 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445313981hu  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.490 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445313981hu  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.491 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445313981hu  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.492 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445313981hu  [0;39m <==      Total: 1
2023-08-05 22:08:51.492 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.493 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445313981hu  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.493 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445313981hu  [0;39m 从车厢1选座
2023-08-05 22:08:51.493 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.493 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7cbe104a
2023-08-05 22:08:51.495 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445313981hu  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.495 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445313981hu  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.499 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531000v7z  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:51.500 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531000v7z  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:51.500 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531000v7z  [0;39m 参数值: ConfirmOrder [Hash = 1010959244, id=1687828011950411776, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023, tickets=null]
2023-08-05 22:08:51.500 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531500uhv  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.500 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:51.501 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531500uhv  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.501 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:51.5(Timestamp), 1687828011950411776(Long)
2023-08-05 22:08:51.501 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531500uhv  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.502 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531500uhv  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.502 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531500uhv  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.503 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531500uhv  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.503 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531500uhv  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.503 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531500uhv  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 00, 2023-08-05 22:07:03.149, 2023-08-05 22:07:03.149
2023-08-05 22:08:51.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.518 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.518 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.518 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.520 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.520 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.523 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.523 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.525 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.525 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.525 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.526 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445313981hu  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.526 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445313981hu  [0;39m <==      Total: 32
2023-08-05 22:08:51.526 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.526 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445313981hu  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.526 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445313981hu  [0;39m 无选座
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445313981hu  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445313981hu  [0;39m 无选座
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445313981hu  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445313981hu  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445313981hu  [0;39m 选中座位
2023-08-05 22:08:51.527 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445313981hu  [0;39m 最终选座:[DailyTrainSeat [Hash = 1495448496, id=1687827559447924736, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=C, seatType=1, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.531 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.531 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: ConfirmOrder [Hash = 1135459467, id=1687828014034980864, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.531 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531000v7z  [0;39m <==    Updates: 1
2023-08-05 22:08:51.531 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531500uhv  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.532 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531000v7z  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:51.532 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531000v7z  [0;39m transaction 192.168.0.102:8091:7278238012553193152 will be commit
2023-08-05 22:08:51.532 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531500uhv  [0;39m ==> Parameters: 1687828014034980864(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.531(Timestamp), 2023-08-05 22:08:51.531(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.564 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531500uhv  [0;39m <==    Updates: 1
2023-08-05 22:08:51.565 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.565 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.565 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7558bfcc
2023-08-05 22:08:51.566 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531500uhv  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.567 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531500uhv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.577 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445313981hu  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193157]
2023-08-05 22:08:51.577 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445313981hu  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193157
2023-08-05 22:08:51.577 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.577 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: DailyTrainSeat [Hash = 1550783276, id=1687827559447924736, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.578 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.578 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.577(Timestamp), 1687827559447924736(Long)
2023-08-05 22:08:51.582 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531500uhv  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.582 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 31, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.583 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531500uhv  [0;39m <==      Total: 1
2023-08-05 22:08:51.583 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.583 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531500uhv  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1305440878, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=31, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.584 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531500uhv  [0;39m 本次购票没有选座
2023-08-05 22:08:51.584 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.584 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2dcc2bd2
2023-08-05 22:08:51.585 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531500uhv  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.585 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531500uhv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.592 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531000v7z  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193152
2023-08-05 22:08:51.593 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531000v7z  [0;39m [192.168.0.102:8091:7278238012553193152] commit status: Committed
2023-08-05 22:08:51.593 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531296z9e  [0;39m <==    Updates: 1
2023-08-05 22:08:51.593 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.594 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.594 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5a43842d
2023-08-05 22:08:51.595 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531296z9e  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.595 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531296z9e  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.597 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445315970hh  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.597 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531500uhv  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.598 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445315970hh  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.598 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.598 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445315970hh  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.598 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531500uhv  [0;39m <==      Total: 1
2023-08-05 22:08:51.598 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.599 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531500uhv  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.599 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531500uhv  [0;39m 从车厢1选座
2023-08-05 22:08:51.599 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445315970hh  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.599 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.600 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445315970hh  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.600 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3e264797
2023-08-05 22:08:51.600 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445315970hh  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.600 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445315970hh  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.601 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531500uhv  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.601 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445315970hh  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.601 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531500uhv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.612 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m <==    Updates: 1
2023-08-05 22:08:51.612 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531296z9e  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.612 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.612 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531100728  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:51.613 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531100728  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:51.613 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 30, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.613 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531100728  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:51.613 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531296z9e  [0;39m <==      Total: 1
2023-08-05 22:08:51.614 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.614 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531100728  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:51.614 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531296z9e  [0;39m 查出余票记录:DailyTrainTicket [Hash = 256471676, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=30, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.615 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531296z9e  [0;39m 本次购票没有选座
2023-08-05 22:08:51.615 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.615 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1eb8d7f3
2023-08-05 22:08:51.615 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531296z9e  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.616 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531296z9e  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:51.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.628 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.629 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.629 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.630 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.630 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.630 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.631 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.631 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.633 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.633 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531000v7z  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:51.633 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531296z9e  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.634 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531000v7z  [0;39m ------------- 结束 耗时：631 ms -------------
2023-08-05 22:08:51.634 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.634 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.635 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531296z9e  [0;39m <==      Total: 1
2023-08-05 22:08:51.635 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.635 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.635 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531296z9e  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.635 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531296z9e  [0;39m 从车厢1选座
2023-08-05 22:08:51.635 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.636 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.636 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1ccda692
2023-08-05 22:08:51.636 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.636 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531296z9e  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.637 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.637 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531296z9e  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.637 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.639 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.639 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.640 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.640 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.641 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.642 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.642 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.642 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.643 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.643 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.644 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531500uhv  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.644 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531500uhv  [0;39m <==      Total: 32
2023-08-05 22:08:51.644 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.644 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531500uhv  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.644 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531500uhv  [0;39m 无选座
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531500uhv  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531500uhv  [0;39m 无选座
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531500uhv  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531500uhv  [0;39m 无选座
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531500uhv  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531500uhv  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531500uhv  [0;39m 选中座位
2023-08-05 22:08:51.645 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531500uhv  [0;39m 最终选座:[DailyTrainSeat [Hash = 1142044255, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.649 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.649 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: ConfirmOrder [Hash = 891684162, id=1687828014529908736, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.649 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445315970hh  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.650 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445315970hh  [0;39m ==> Parameters: 1687828014529908736(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.649(Timestamp), 2023-08-05 22:08:51.649(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.673 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531100728  [0;39m <==    Updates: 3
2023-08-05 22:08:51.695 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244531695e7b  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.696 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244531695e7b  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.696 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244531695e7b  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.697 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244531695e7b  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.697 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531500uhv  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193159]
2023-08-05 22:08:51.698 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244531695e7b  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.698 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531500uhv  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193159
2023-08-05 22:08:51.698 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244531695e7b  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.698 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.698 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244531695e7b  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.698 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: DailyTrainSeat [Hash = 188536866, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.699 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244531695e7b  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.699 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.699 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.698(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:51.706 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.707 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.708 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:51.708 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.708 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.709 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.710 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.710 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.710 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.711 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.711 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.711 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445315970hh  [0;39m <==    Updates: 1
2023-08-05 22:08:51.712 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.712 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.712 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.712 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2bd4a5af
2023-08-05 22:08:51.713 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.713 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445315970hh  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.713 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.714 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445315970hh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.714 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.715 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.715 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.716 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: ConfirmOrder [Hash = 3152146, id=1687828014806732800, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.716 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.716 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531695e7b  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.716 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.717 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531695e7b  [0;39m ==> Parameters: 1687828014806732800(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.715(Timestamp), 2023-08-05 22:08:51.715(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.717 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.717 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.718 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.719 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.719 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.720 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.720 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.721 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.722 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.722 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.723 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.723 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.723 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.724 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.725 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531296z9e  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.725 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531296z9e  [0;39m <==      Total: 32
2023-08-05 22:08:51.725 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.725 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531296z9e  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.725 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531296z9e  [0;39m 无选座
2023-08-05 22:08:51.725 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531296z9e  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531296z9e  [0;39m 无选座
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531296z9e  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531296z9e  [0;39m 无选座
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531296z9e  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531296z9e  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531296z9e  [0;39m 选中座位
2023-08-05 22:08:51.726 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531296z9e  [0;39m 最终选座:[DailyTrainSeat [Hash = 831059, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.737 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m <==    Updates: 1
2023-08-05 22:08:51.737 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445315970hh  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.737 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.738 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531500uhv  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:51.738 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445315970hh  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 30, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.738 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531500uhv  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:51.738 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445315970hh  [0;39m <==      Total: 1
2023-08-05 22:08:51.739 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531500uhv  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:51.739 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.739 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445315970hh  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1796667849, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=30, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.739 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531500uhv  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:51.740 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445315970hh  [0;39m 本次购票没有选座
2023-08-05 22:08:51.740 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.740 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1771c4ef
2023-08-05 22:08:51.741 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445315970hh  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.741 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445315970hh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.750 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531296z9e  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193164]
2023-08-05 22:08:51.750 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531296z9e  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193164
2023-08-05 22:08:51.750 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.751 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: DailyTrainSeat [Hash = 989698005, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.751 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.752 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.75(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:51.755 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244531695e7b  [0;39m <==    Updates: 1
2023-08-05 22:08:51.755 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.755 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.755 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3f28a479
2023-08-05 22:08:51.756 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445315970hh  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.756 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531695e7b  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.756 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445315970hh  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.756 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531695e7b  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.756 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445315970hh  [0;39m <==      Total: 1
2023-08-05 22:08:51.757 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.757 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445315970hh  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.757 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445315970hh  [0;39m 从车厢1选座
2023-08-05 22:08:51.757 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.757 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5ad4c978
2023-08-05 22:08:51.758 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445315970hh  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.758 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445315970hh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.772 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.772 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.773 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:51.773 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531695e7b  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.774 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.774 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 30, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.774 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.774 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244531695e7b  [0;39m <==      Total: 1
2023-08-05 22:08:51.775 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.775 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.776 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.776 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244531695e7b  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1184299059, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=30, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.776 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244531695e7b  [0;39m 本次购票没有选座
2023-08-05 22:08:51.776 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.776 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.777 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@6580cdc2
2023-08-05 22:08:51.777 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.777 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.777 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531695e7b  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.778 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.778 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531695e7b  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.778 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445315970hh  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.787 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445315970hh  [0;39m <==      Total: 32
2023-08-05 22:08:51.787 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.787 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445315970hh  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.787 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445315970hh  [0;39m 无选座
2023-08-05 22:08:51.787 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445315970hh  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445315970hh  [0;39m 无选座
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445315970hh  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445315970hh  [0;39m 无选座
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445315970hh  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445315970hh  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445315970hh  [0;39m 选中座位
2023-08-05 22:08:51.788 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445315970hh  [0;39m 最终选座:[DailyTrainSeat [Hash = 1296514412, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.793 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531695e7b  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.794 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.795 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244531695e7b  [0;39m <==      Total: 1
2023-08-05 22:08:51.795 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.795 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244531695e7b  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.795 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244531695e7b  [0;39m 从车厢1选座
2023-08-05 22:08:51.796 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.796 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@26880f74
2023-08-05 22:08:51.797 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531695e7b  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.798 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531695e7b  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.806 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445318065t1  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.807 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445315970hh  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193168]
2023-08-05 22:08:51.807 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445315970hh  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193168
2023-08-05 22:08:51.807 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.807 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445318065t1  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.808 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445318065t1  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.808 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: DailyTrainSeat [Hash = 1322173925, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.808 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.809 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.807(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:51.810 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445318065t1  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.810 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445318065t1  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.810 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445318065t1  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.811 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445318065t1  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.811 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445318065t1  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.816 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:51.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.821 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.821 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.822 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.822 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.825 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.825 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.826 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.826 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.827 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.827 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.828 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.828 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.830 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.830 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.831 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.831 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.831 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.832 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244531695e7b  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.832 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244531695e7b  [0;39m <==      Total: 32
2023-08-05 22:08:51.833 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244531695e7b  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531695e7b  [0;39m 无选座
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531695e7b  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531695e7b  [0;39m 无选座
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244531695e7b  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244531695e7b  [0;39m 无选座
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244531695e7b  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.833 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244531695e7b  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.834 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244531695e7b  [0;39m 选中座位
2023-08-05 22:08:51.834 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244531695e7b  [0;39m 最终选座:[DailyTrainSeat [Hash = 883098908, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.836 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.836 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: ConfirmOrder [Hash = 1052323748, id=1687828015314243584, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.837 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318065t1  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.837 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318065t1  [0;39m ==> Parameters: 1687828015314243584(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.836(Timestamp), 2023-08-05 22:08:51.836(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.852 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244531695e7b  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193169]
2023-08-05 22:08:51.852 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244531695e7b  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193169
2023-08-05 22:08:51.852 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.852 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: DailyTrainSeat [Hash = 653479777, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.853 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.853 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.852(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:51.862 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318065t1  [0;39m <==    Updates: 1
2023-08-05 22:08:51.863 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.863 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.863 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@47e916e9
2023-08-05 22:08:51.864 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318065t1  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.864 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318065t1  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.879 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445318065t1  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.880 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445318065t1  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 30, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.880 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318065t1  [0;39m <==      Total: 1
2023-08-05 22:08:51.881 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.881 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445318065t1  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1892080411, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=30, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.881 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445318065t1  [0;39m 本次购票没有选座
2023-08-05 22:08:51.881 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.882 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@16d79f81
2023-08-05 22:08:51.882 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318065t1  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.882 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318065t1  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:51.894 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445318065t1  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:51.895 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445318065t1  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:51.896 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318065t1  [0;39m <==      Total: 1
2023-08-05 22:08:51.896 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445318962dj  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:08:51.896 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.896 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445318065t1  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:51.897 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445318962dj  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.897 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445318065t1  [0;39m 从车厢1选座
2023-08-05 22:08:51.897 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445318962dj  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:08:51.898 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.898 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@17788045
2023-08-05 22:08:51.898 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318065t1  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:51.898 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445318962dj  [0;39m ------------- 开始 -------------
2023-08-05 22:08:51.899 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445318962dj  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:08:51.899 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445318962dj  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:08:51.899 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318065t1  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:51.899 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445318962dj  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:08:51.899 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445318962dj  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:08:51.912 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:51.913 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:51.914 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:51.915 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:51.915 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531100728  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:51.915 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531100728  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:51.915 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531100728  [0;39m 参数值: ConfirmOrder [Hash = 1513758846, id=1687828012369842176, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023, tickets=null]
2023-08-05 22:08:51.915 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:51.916 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:51.916 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:51.917 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:51.918 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:51.915(Timestamp), 1687828012369842176(Long)
2023-08-05 22:08:51.918 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:51.918 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:51.919 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:51.919 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:51.920 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:51.920 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:51.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:51.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:51.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:51.922 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:51.922 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:51.923 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:51.923 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:51.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:51.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:51.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:51.925 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:51.925 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:51.925 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.926 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:51.926 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: ConfirmOrder [Hash = 1607929183, id=1687828015687536640, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:08:51, updateTime=2023-08-05 22:08:51, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:08:51.926 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318962dj  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:08:51.926 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:51.927 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:51.927 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318962dj  [0;39m ==> Parameters: 1687828015687536640(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:08:51.925(Timestamp), 2023-08-05 22:08:51.925(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:08:51.927 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:51.928 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:51.929 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:51.929 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:51.929 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318065t1  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:51.929 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318065t1  [0;39m <==      Total: 32
2023-08-05 22:08:51.930 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:51.930 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445318065t1  [0;39m 车厢1的座位数:32
2023-08-05 22:08:51.930 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318065t1  [0;39m 无选座
2023-08-05 22:08:51.930 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445318065t1  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.930 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318065t1  [0;39m 无选座
2023-08-05 22:08:51.931 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445318065t1  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:51.931 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318065t1  [0;39m 无选座
2023-08-05 22:08:51.931 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445318065t1  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:51.932 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445318065t1  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:51.932 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445318065t1  [0;39m 选中座位
2023-08-05 22:08:51.932 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445318065t1  [0;39m 最终选座:[DailyTrainSeat [Hash = 2074159488, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:51.946 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531100728  [0;39m <==    Updates: 1
2023-08-05 22:08:51.947 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531100728  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:51.947 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531100728  [0;39m transaction 192.168.0.102:8091:7278238012553193153 will be commit
2023-08-05 22:08:51.953 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445318962dj  [0;39m <==    Updates: 1
2023-08-05 22:08:51.953 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:08:51.953 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.953 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@763883c6
2023-08-05 22:08:51.954 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318962dj  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:08:51.954 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318962dj  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:08:51.967 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445318065t1  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193170]
2023-08-05 22:08:51.967 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445318065t1  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193170
2023-08-05 22:08:51.967 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:51.968 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: DailyTrainSeat [Hash = 1304468081, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:51 CST 2023]
2023-08-05 22:08:51.968 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:51.968 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:51.967(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:51.969 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445318962dj  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:08:51.970 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445318962dj  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 30, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:08:51.970 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445318962dj  [0;39m <==      Total: 1
2023-08-05 22:08:51.970 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:08:51.970 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445318962dj  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1287020073, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=30, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:08:51.971 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445318962dj  [0;39m 本次购票没有选座
2023-08-05 22:08:51.971 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:51.971 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4b7e9589
2023-08-05 22:08:51.971 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318962dj  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:08:51.972 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318962dj  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:08:52.207 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445318962dj  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:08:52.208 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445318962dj  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:08:52.208 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445318962dj  [0;39m <==      Total: 1
2023-08-05 22:08:52.208 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:08:52.208 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445318962dj  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:08:52.209 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445318962dj  [0;39m 从车厢1选座
2023-08-05 22:08:52.209 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:52.209 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1bc9879a
2023-08-05 22:08:52.210 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318962dj  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:08:52.210 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318962dj  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:08:52.224 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:08:52.225 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:08:52.225 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.200
2023-08-05 22:08:52.226 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 00, 2023-08-05 22:07:03.183, 2023-08-05 22:07:03.183
2023-08-05 22:08:52.226 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:08:52.227 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:08:52.228 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:08:52.228 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:08:52.229 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:08:52.229 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:08:52.230 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:08:52.230 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:08:52.231 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:08:52.231 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:08:52.231 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:08:52.232 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:08:52.233 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:08:52.233 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:08:52.233 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:08:52.234 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:08:52.234 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:08:52.235 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:08:52.235 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:08:52.236 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531100728  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193153
2023-08-05 22:08:52.236 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531100728  [0;39m [192.168.0.102:8091:7278238012553193153] commit status: Committed
2023-08-05 22:08:52.236 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:08:52.237 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:08:52.237 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:08:52.238 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:08:52.238 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:08:52.239 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:08:52.239 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:08:52.240 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:08:52.240 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:08:52.241 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445318962dj  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:08:52.241 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445318962dj  [0;39m <==      Total: 32
2023-08-05 22:08:52.242 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445318962dj  [0;39m 车厢1的座位数:32
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318962dj  [0;39m 无选座
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445318962dj  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318962dj  [0;39m 无选座
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445318962dj  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:08:52.243 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445318962dj  [0;39m 无选座
2023-08-05 22:08:52.244 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445318962dj  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:08:52.244 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445318962dj  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:08:52.244 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445318962dj  [0;39m 选中座位
2023-08-05 22:08:52.244 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445318962dj  [0;39m 最终选座:[DailyTrainSeat [Hash = 1520293430, id=1687827559590531072, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=D, seatType=1, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:08:52.250 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m <==    Updates: 1
2023-08-05 22:08:52.250 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531500uhv  [0;39m <==    Updates: 3
2023-08-05 22:08:52.250 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:52.250 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531199ino  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:52.250 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531199ino  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:52.251 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531199ino  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:52.251 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531199ino  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:52.262 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445318962dj  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193172]
2023-08-05 22:08:52.263 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445318962dj  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193172
2023-08-05 22:08:52.263 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:52.263 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: DailyTrainSeat [Hash = 355379740, id=1687827559590531072, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:08:52 CST 2023]
2023-08-05 22:08:52.264 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:08:52.264 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m ==> Parameters: 01(String), 2023-08-05 22:08:52.263(Timestamp), 1687827559590531072(Long)
2023-08-05 22:08:52.267 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531100728  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:52.267 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531100728  [0;39m ------------- 结束 耗时：1165 ms -------------
2023-08-05 22:08:52.464 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531500uhv  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:52.464 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531500uhv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:52.464 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531500uhv  [0;39m 参数值: ConfirmOrder [Hash = 1100527779, id=1687828014034980864, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:52 CST 2023, tickets=null]
2023-08-05 22:08:52.465 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:52.465 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:52.464(Timestamp), 1687828014034980864(Long)
2023-08-05 22:08:52.494 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531500uhv  [0;39m <==    Updates: 1
2023-08-05 22:08:52.494 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531500uhv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:52.494 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531500uhv  [0;39m transaction 192.168.0.102:8091:7278238012553193159 will be commit
2023-08-05 22:08:52.557 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531500uhv  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193159
2023-08-05 22:08:52.557 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531500uhv  [0;39m [192.168.0.102:8091:7278238012553193159] commit status: Committed
2023-08-05 22:08:52.570 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531199ino  [0;39m <==    Updates: 3
2023-08-05 22:08:52.570 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m <==    Updates: 1
2023-08-05 22:08:52.570 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:52.571 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531296z9e  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:52.571 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531296z9e  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:52.571 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531296z9e  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:52.572 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531296z9e  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:52.581 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531500uhv  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:52.582 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531500uhv  [0;39m ------------- 结束 耗时：1080 ms -------------
2023-08-05 22:08:52.815 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531199ino  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:52.815 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531199ino  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:52.816 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531199ino  [0;39m 参数值: ConfirmOrder [Hash = 836137611, id=1687828012772495360, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:52 CST 2023, tickets=null]
2023-08-05 22:08:52.817 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:52.817 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:52.815(Timestamp), 1687828012772495360(Long)
2023-08-05 22:08:52.843 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531199ino  [0;39m <==    Updates: 1
2023-08-05 22:08:52.844 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531199ino  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:52.844 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531199ino  [0;39m transaction 192.168.0.102:8091:7278238012553193156 will be commit
2023-08-05 22:08:52.910 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531199ino  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193156
2023-08-05 22:08:52.910 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531199ino  [0;39m [192.168.0.102:8091:7278238012553193156] commit status: Committed
2023-08-05 22:08:52.923 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m <==    Updates: 1
2023-08-05 22:08:52.924 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531296z9e  [0;39m <==    Updates: 3
2023-08-05 22:08:52.924 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:52.924 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445313981hu  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:52.924 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445313981hu  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:52.924 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445313981hu  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:52.925 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445313981hu  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:52.935 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531199ino  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:52.935 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531199ino  [0;39m ------------- 结束 耗时：1734 ms -------------
2023-08-05 22:08:53.213 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531296z9e  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:53.213 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531296z9e  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:53.213 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531296z9e  [0;39m 参数值: ConfirmOrder [Hash = 1627783569, id=1687828013225480192, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:53 CST 2023, tickets=null]
2023-08-05 22:08:53.214 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:53.214 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:53.213(Timestamp), 1687828013225480192(Long)
2023-08-05 22:08:53.238 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531296z9e  [0;39m <==    Updates: 1
2023-08-05 22:08:53.239 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531296z9e  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:53.239 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531296z9e  [0;39m transaction 192.168.0.102:8091:7278238012553193164 will be commit
2023-08-05 22:08:53.329 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531296z9e  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193164
2023-08-05 22:08:53.330 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531296z9e  [0;39m [192.168.0.102:8091:7278238012553193164] commit status: Committed
2023-08-05 22:08:53.345 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m <==    Updates: 1
2023-08-05 22:08:53.345 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445313981hu  [0;39m <==    Updates: 3
2023-08-05 22:08:53.345 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:53.346 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445315970hh  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:53.346 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445315970hh  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:53.347 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445315970hh  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:53.347 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445315970hh  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:53.356 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531296z9e  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:53.356 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531296z9e  [0;39m ------------- 结束 耗时：2058 ms -------------
2023-08-05 22:08:53.610 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445313981hu  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:53.611 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445313981hu  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:53.611 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445313981hu  [0;39m 参数值: ConfirmOrder [Hash = 1240319086, id=1687828013602967552, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:53 CST 2023, tickets=null]
2023-08-05 22:08:53.612 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:53.613 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:53.611(Timestamp), 1687828013602967552(Long)
2023-08-05 22:08:53.646 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445313981hu  [0;39m <==    Updates: 1
2023-08-05 22:08:53.647 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445313981hu  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:53.647 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445313981hu  [0;39m transaction 192.168.0.102:8091:7278238012553193157 will be commit
2023-08-05 22:08:53.714 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445313981hu  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193157
2023-08-05 22:08:53.715 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445313981hu  [0;39m [192.168.0.102:8091:7278238012553193157] commit status: Committed
2023-08-05 22:08:53.731 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445315970hh  [0;39m <==    Updates: 3
2023-08-05 22:08:53.751 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445313981hu  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:53.751 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445313981hu  [0;39m ------------- 结束 耗时：2351 ms -------------
2023-08-05 22:08:54.019 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445315970hh  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:54.019 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445315970hh  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.020 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445315970hh  [0;39m 参数值: ConfirmOrder [Hash = 996085699, id=1687828014529908736, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:54 CST 2023, tickets=null]
2023-08-05 22:08:54.020 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:54.021 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:54.019(Timestamp), 1687828014529908736(Long)
2023-08-05 22:08:54.058 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445315970hh  [0;39m <==    Updates: 1
2023-08-05 22:08:54.059 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445315970hh  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.059 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445315970hh  [0;39m transaction 192.168.0.102:8091:7278238012553193168 will be commit
2023-08-05 22:08:54.134 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445315970hh  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193168
2023-08-05 22:08:54.134 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445315970hh  [0;39m [192.168.0.102:8091:7278238012553193168] commit status: Committed
2023-08-05 22:08:54.152 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m <==    Updates: 1
2023-08-05 22:08:54.152 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:54.153 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244531695e7b  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:54.153 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244531695e7b  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:54.153 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531695e7b  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:54.154 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531695e7b  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:54.162 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445315970hh  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:54.162 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445315970hh  [0;39m ------------- 结束 耗时：2563 ms -------------
2023-08-05 22:08:54.186 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244531695e7b  [0;39m <==    Updates: 3
2023-08-05 22:08:54.420 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244531695e7b  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:54.420 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244531695e7b  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.421 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244531695e7b  [0;39m 参数值: ConfirmOrder [Hash = 286657357, id=1687828014806732800, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:54 CST 2023, tickets=null]
2023-08-05 22:08:54.422 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:54.423 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:54.42(Timestamp), 1687828014806732800(Long)
2023-08-05 22:08:54.454 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244531695e7b  [0;39m <==    Updates: 1
2023-08-05 22:08:54.455 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244531695e7b  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.456 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244531695e7b  [0;39m transaction 192.168.0.102:8091:7278238012553193169 will be commit
2023-08-05 22:08:54.538 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244531695e7b  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193169
2023-08-05 22:08:54.538 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244531695e7b  [0;39m [192.168.0.102:8091:7278238012553193169] commit status: Committed
2023-08-05 22:08:54.561 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m <==    Updates: 1
2023-08-05 22:08:54.561 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:54.562 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445318065t1  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:54.562 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445318065t1  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:54.562 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318065t1  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:54.563 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318065t1  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:54.580 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244531695e7b  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:54.580 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244531695e7b  [0;39m ------------- 结束 耗时：2883 ms -------------
2023-08-05 22:08:54.587 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318065t1  [0;39m <==    Updates: 3
2023-08-05 22:08:54.853 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445318065t1  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:54.853 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318065t1  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.854 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318065t1  [0;39m 参数值: ConfirmOrder [Hash = 686676168, id=1687828015314243584, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:54 CST 2023, tickets=null]
2023-08-05 22:08:54.854 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:54.854 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:54.853(Timestamp), 1687828015314243584(Long)
2023-08-05 22:08:54.880 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318065t1  [0;39m <==    Updates: 1
2023-08-05 22:08:54.881 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318065t1  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:54.881 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445318065t1  [0;39m transaction 192.168.0.102:8091:7278238012553193170 will be commit
2023-08-05 22:08:54.958 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445318065t1  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193170
2023-08-05 22:08:54.958 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445318065t1  [0;39m [192.168.0.102:8091:7278238012553193170] commit status: Committed
2023-08-05 22:08:55.000 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m <==    Updates: 1
2023-08-05 22:08:55.000 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:08:55.001 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445318962dj  [0;39m 影响出发站区间:0-1
2023-08-05 22:08:55.001 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445318962dj  [0;39m 影响到达站区间:0-2
2023-08-05 22:08:55.001 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318962dj  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:08:55.002 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318962dj  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:08:55.015 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445318065t1  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:55.015 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445318065t1  [0;39m ------------- 结束 耗时：3205 ms -------------
2023-08-05 22:08:55.030 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445318962dj  [0;39m <==    Updates: 3
2023-08-05 22:08:55.292 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445318962dj  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:08:55.292 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445318962dj  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:55.292 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445318962dj  [0;39m 参数值: ConfirmOrder [Hash = 567765747, id=1687828015687536640, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:08:55 CST 2023, tickets=null]
2023-08-05 22:08:55.293 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:08:55.294 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m ==> Parameters: S(String), 2023-08-05 22:08:55.292(Timestamp), 1687828015687536640(Long)
2023-08-05 22:08:55.318 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445318962dj  [0;39m <==    Updates: 1
2023-08-05 22:08:55.319 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445318962dj  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:08:55.319 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445318962dj  [0;39m transaction 192.168.0.102:8091:7278238012553193172 will be commit
2023-08-05 22:08:55.422 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445318962dj  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193172
2023-08-05 22:08:55.423 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445318962dj  [0;39m [192.168.0.102:8091:7278238012553193172] commit status: Committed
2023-08-05 22:08:55.447 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445318962dj  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:08:55.447 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445318962dj  [0;39m ------------- 结束 耗时：3549 ms -------------
2023-08-05 22:09:05.734 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445457348sk  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:05.735 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445457348sk  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.736 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445457348sk  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.738 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445457348sk  [0;39m ------------- 开始 -------------
2023-08-05 22:09:05.739 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445457348sk  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:05.739 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445457348sk  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:05.739 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445457348sk  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:05.740 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445457348sk  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:05.773 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:05.773 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: ConfirmOrder [Hash = 1813103912, id=1687828073766064128, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:05, updateTime=2023-08-05 22:09:05, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:05.774 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445457348sk  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:05.774 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445457348sk  [0;39m ==> Parameters: 1687828073766064128(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:05.772(Timestamp), 2023-08-05 22:09:05.772(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:05.805 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445457348sk  [0;39m <==    Updates: 1
2023-08-05 22:09:05.805 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:05.806 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:05.806 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1fbbd2fd
2023-08-05 22:09:05.807 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445457348sk  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:05.808 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445457348sk  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:05.825 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445457348sk  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:05.826 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445457348sk  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:05.827 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445457348sk  [0;39m <==      Total: 1
2023-08-05 22:09:05.827 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:05.827 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445457348sk  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1346780744, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:05.827 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445457348sk  [0;39m 本次购票没有选座
2023-08-05 22:09:05.827 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:05.828 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@26b4f4b3
2023-08-05 22:09:05.828 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445457348sk  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:05.828 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445457348sk  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:05.846 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244545846npl  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:05.846 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445457348sk  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:05.846 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244545846npl  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.846 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244545846npl  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.847 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445457348sk  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:05.847 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445457348sk  [0;39m <==      Total: 1
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244545846npl  [0;39m ------------- 开始 -------------
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244545846npl  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244545846npl  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:05.848 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445457348sk  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244545846npl  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:05.848 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445457348sk  [0;39m 从车厢1选座
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244545846npl  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:05.848 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:05.849 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@46fd72a9
2023-08-05 22:09:05.849 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445457348sk  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:05.850 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445457348sk  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:05.866 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:05.866 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:05.867 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:05.868 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:05.868 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:05.868 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:05.869 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:05.869 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:05.870 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:05.871 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:05.872 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:05.872 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:05.873 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:05.873 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:05.874 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:05.874 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:05.875 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:05.875 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:05.875 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:05.876 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:05.876 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:05.877 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:05.877 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:05.878 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:05.878 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:05.878 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: ConfirmOrder [Hash = 1420760593, id=1687828074210660352, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:05, updateTime=2023-08-05 22:09:05, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:05.879 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:05.879 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545846npl  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:05.879 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:05.880 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545846npl  [0;39m ==> Parameters: 1687828074210660352(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:05.878(Timestamp), 2023-08-05 22:09:05.878(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:05.880 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:05.880 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:05.880 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:05.881 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:05.882 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:05.882 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:05.882 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445457348sk  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:05.882 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445457348sk  [0;39m <==      Total: 32
2023-08-05 22:09:05.883 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445457348sk  [0;39m 车厢1的座位数:32
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445457348sk  [0;39m 无选座
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445457348sk  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445457348sk  [0;39m 无选座
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445457348sk  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445457348sk  [0;39m 无选座
2023-08-05 22:09:05.883 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445457348sk  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.884 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445457348sk  [0;39m 无选座
2023-08-05 22:09:05.884 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445457348sk  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:05.884 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445457348sk  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:05.884 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445457348sk  [0;39m 选中座位
2023-08-05 22:09:05.884 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445457348sk  [0;39m 最终选座:[DailyTrainSeat [Hash = 649648490, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:05.902 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445457348sk  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193220]
2023-08-05 22:09:05.903 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445457348sk  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193220
2023-08-05 22:09:05.903 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:05.903 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: DailyTrainSeat [Hash = 1931462906, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:05 CST 2023]
2023-08-05 22:09:05.904 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:05.904 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:05.903(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:05.909 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545846npl  [0;39m <==    Updates: 1
2023-08-05 22:09:05.909 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:05.910 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:05.910 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@61dbe320
2023-08-05 22:09:05.911 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545846npl  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:05.911 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545846npl  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:05.927 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244545846npl  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:05.928 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244545846npl  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:05.928 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545846npl  [0;39m <==      Total: 1
2023-08-05 22:09:05.929 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:05.929 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244545846npl  [0;39m 查出余票记录:DailyTrainTicket [Hash = 279968265, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:05.930 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244545846npl  [0;39m 本次购票没有选座
2023-08-05 22:09:05.930 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:05.930 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@44686d2d
2023-08-05 22:09:05.930 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545846npl  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:05.931 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545846npl  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:05.934 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m <==    Updates: 1
2023-08-05 22:09:05.935 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:05.935 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445457348sk  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:05.935 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445457348sk  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:05.936 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445457348sk  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:05.937 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445457348sk  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:05.939 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244545939t7o  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:05.940 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244545939t7o  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.940 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244545939t7o  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:05.941 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244545939t7o  [0;39m ------------- 开始 -------------
2023-08-05 22:09:05.941 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244545939t7o  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:05.941 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244545939t7o  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:05.942 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244545939t7o  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:05.942 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244545939t7o  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:05.949 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244545846npl  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:05.950 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244545846npl  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:05.950 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545846npl  [0;39m <==      Total: 1
2023-08-05 22:09:05.951 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:05.951 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244545846npl  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:05.951 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244545846npl  [0;39m 从车厢1选座
2023-08-05 22:09:05.951 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:05.952 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@58af2674
2023-08-05 22:09:05.953 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545846npl  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:05.953 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545846npl  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:05.966 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:05.966 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: ConfirmOrder [Hash = 1983079189, id=1687828074579759104, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:05, updateTime=2023-08-05 22:09:05, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:05.967 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545939t7o  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:05.967 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445457348sk  [0;39m <==    Updates: 3
2023-08-05 22:09:05.968 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545939t7o  [0;39m ==> Parameters: 1687828074579759104(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:05.966(Timestamp), 2023-08-05 22:09:05.966(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:05.970 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:05.971 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:05.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:05.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:05.973 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:05.973 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:05.974 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:05.975 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:05.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:05.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:05.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:05.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:05.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:05.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:05.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:05.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:05.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:05.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:05.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:05.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:05.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:05.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:05.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:05.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:05.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:05.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:05.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:05.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:05.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:05.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:05.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:05.991 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:05.992 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545846npl  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:05.992 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545846npl  [0;39m <==      Total: 32
2023-08-05 22:09:05.993 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:05.993 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244545846npl  [0;39m 车厢1的座位数:32
2023-08-05 22:09:05.993 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545846npl  [0;39m 无选座
2023-08-05 22:09:05.993 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545846npl  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545846npl  [0;39m 无选座
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545846npl  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545846npl  [0;39m 无选座
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545846npl  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545846npl  [0;39m 无选座
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244545846npl  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:05.994 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244545846npl  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:05.995 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244545846npl  [0;39m 选中座位
2023-08-05 22:09:05.995 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244545846npl  [0;39m 最终选座:[DailyTrainSeat [Hash = 809099781, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.023 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244545939t7o  [0;39m <==    Updates: 1
2023-08-05 22:09:06.023 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.024 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.024 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@548f9729
2023-08-05 22:09:06.025 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545939t7o  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.026 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545939t7o  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.043 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244545939t7o  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.043 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.047 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244546047xey  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.048 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244546047xey  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.048 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244545939t7o  [0;39m <==      Total: 1
2023-08-05 22:09:06.048 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244546047xey  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.048 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.049 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244545939t7o  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1464418164, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.049 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244545939t7o  [0;39m 本次购票没有选座
2023-08-05 22:09:06.050 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.050 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244546047xey  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.050 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@dd95518
2023-08-05 22:09:06.050 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244546047xey  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.051 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244546047xey  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.051 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545939t7o  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.051 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244546047xey  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.052 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244546047xey  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.052 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545939t7o  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.065 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244545939t7o  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.065 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.068 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244545846npl  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193221]
2023-08-05 22:09:06.068 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244545846npl  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193221
2023-08-05 22:09:06.068 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244545939t7o  [0;39m <==      Total: 1
2023-08-05 22:09:06.068 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.068 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.068 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: DailyTrainSeat [Hash = 1178167363, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.068 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244545939t7o  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.069 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244545939t7o  [0;39m 从车厢1选座
2023-08-05 22:09:06.069 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.069 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.069 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7bb6b382
2023-08-05 22:09:06.069 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.068(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:06.070 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545939t7o  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.070 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545939t7o  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.074 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.075 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: ConfirmOrder [Hash = 1200098698, id=1687828075032743936, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.075 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546047xey  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.076 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546047xey  [0;39m ==> Parameters: 1687828075032743936(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.074(Timestamp), 2023-08-05 22:09:06.074(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.082 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.084 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:06.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.086 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.087 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.087 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.089 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.089 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.090 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.090 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.091 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.091 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.092 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.092 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.092 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.093 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.093 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.094 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.094 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.095 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.095 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.095 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.096 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.096 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.097 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.097 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244545939t7o  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.098 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244545939t7o  [0;39m <==      Total: 32
2023-08-05 22:09:06.098 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.098 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244545939t7o  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.098 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545939t7o  [0;39m 无选座
2023-08-05 22:09:06.098 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545939t7o  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.098 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545939t7o  [0;39m 无选座
2023-08-05 22:09:06.098 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545939t7o  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545939t7o  [0;39m 无选座
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244545939t7o  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244545939t7o  [0;39m 无选座
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244545939t7o  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244545939t7o  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244545939t7o  [0;39m 选中座位
2023-08-05 22:09:06.099 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244545939t7o  [0;39m 最终选座:[DailyTrainSeat [Hash = 711491740, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.101 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546047xey  [0;39m <==    Updates: 1
2023-08-05 22:09:06.102 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.102 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.103 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7248ddb0
2023-08-05 22:09:06.104 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546047xey  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.104 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546047xey  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.117 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546047xey  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.118 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546047xey  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.119 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546047xey  [0;39m <==      Total: 1
2023-08-05 22:09:06.119 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.119 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244546047xey  [0;39m 查出余票记录:DailyTrainTicket [Hash = 997318024, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.119 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244546047xey  [0;39m 本次购票没有选座
2023-08-05 22:09:06.120 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.120 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@79f2805d
2023-08-05 22:09:06.121 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546047xey  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.122 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546047xey  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.123 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244545939t7o  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193224]
2023-08-05 22:09:06.123 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244545939t7o  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193224
2023-08-05 22:09:06.123 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.124 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: DailyTrainSeat [Hash = 1925730662, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.124 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.125 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.123(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:06.135 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445461354r8  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.135 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546047xey  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.136 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445461354r8  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.136 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445461354r8  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.136 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546047xey  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.137 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546047xey  [0;39m <==      Total: 1
2023-08-05 22:09:06.137 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.137 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244546047xey  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.137 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244546047xey  [0;39m 从车厢1选座
2023-08-05 22:09:06.137 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.138 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@339816e3
2023-08-05 22:09:06.138 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546047xey  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.139 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546047xey  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.140 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445461354r8  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.141 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445461354r8  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.141 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445461354r8  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.141 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445461354r8  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.141 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445461354r8  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.164 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.165 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.165 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.166 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.166 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:06.166 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.167 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.170 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.170 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.171 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.171 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.173 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.173 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.174 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.174 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.175 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.175 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.176 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.176 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.177 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: ConfirmOrder [Hash = 594136760, id=1687828075460562944, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.177 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.177 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445461354r8  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.178 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.178 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445461354r8  [0;39m ==> Parameters: 1687828075460562944(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.176(Timestamp), 2023-08-05 22:09:06.176(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.178 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.179 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.180 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.180 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.181 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.181 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.181 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.182 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546047xey  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.182 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546047xey  [0;39m <==      Total: 32
2023-08-05 22:09:06.182 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244546047xey  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546047xey  [0;39m 无选座
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546047xey  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546047xey  [0;39m 无选座
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546047xey  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.183 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546047xey  [0;39m 无选座
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546047xey  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546047xey  [0;39m 无选座
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244546047xey  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244546047xey  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244546047xey  [0;39m 选中座位
2023-08-05 22:09:06.184 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244546047xey  [0;39m 最终选座:[DailyTrainSeat [Hash = 792199358, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.203 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445461354r8  [0;39m <==    Updates: 1
2023-08-05 22:09:06.203 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.204 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.204 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@12e1f396
2023-08-05 22:09:06.205 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445461354r8  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.205 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445461354r8  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.207 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244546047xey  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193225]
2023-08-05 22:09:06.208 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244546047xey  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193225
2023-08-05 22:09:06.208 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.208 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: DailyTrainSeat [Hash = 468059212, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.209 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.210 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.208(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:06.219 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445461354r8  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.220 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445461354r8  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.220 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445461354r8  [0;39m <==      Total: 1
2023-08-05 22:09:06.221 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.221 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445461354r8  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1433389709, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.221 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445461354r8  [0;39m 本次购票没有选座
2023-08-05 22:09:06.222 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.222 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@31c24fbd
2023-08-05 22:09:06.223 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445461354r8  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.223 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445461354r8  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.233 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244546233iuw  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.234 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244546233iuw  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.234 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244546233iuw  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.236 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244546233iuw  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.236 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445461354r8  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.236 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244546233iuw  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.236 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244546233iuw  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.237 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244546233iuw  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.237 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445461354r8  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.237 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244546233iuw  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.237 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445461354r8  [0;39m <==      Total: 1
2023-08-05 22:09:06.238 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.238 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445461354r8  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.238 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445461354r8  [0;39m 从车厢1选座
2023-08-05 22:09:06.238 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.238 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6ae71d7c
2023-08-05 22:09:06.240 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445461354r8  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.240 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445461354r8  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.246 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445457348sk  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:06.246 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445457348sk  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:06.246 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445457348sk  [0;39m 参数值: ConfirmOrder [Hash = 81764961, id=1687828073766064128, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023, tickets=null]
2023-08-05 22:09:06.248 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:06.248 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:06.246(Timestamp), 1687828073766064128(Long)
2023-08-05 22:09:06.255 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.256 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.256 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.257 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.257 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:06.258 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.259 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.259 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.260 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.261 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.261 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.261 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.262 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: ConfirmOrder [Hash = 24648568, id=1687828075817078784, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.262 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.262 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546233iuw  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.262 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.263 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546233iuw  [0;39m ==> Parameters: 1687828075817078784(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.261(Timestamp), 2023-08-05 22:09:06.261(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.263 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.264 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.264 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.265 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.265 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.266 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.267 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.267 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.268 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.268 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.268 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.269 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.270 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.270 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.270 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.271 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.271 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.272 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.272 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.272 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445461354r8  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.273 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445461354r8  [0;39m <==      Total: 32
2023-08-05 22:09:06.273 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.274 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445461354r8  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.274 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445461354r8  [0;39m 无选座
2023-08-05 22:09:06.274 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445461354r8  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445461354r8  [0;39m 无选座
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445461354r8  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445461354r8  [0;39m 无选座
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445461354r8  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445461354r8  [0;39m 无选座
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445461354r8  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445461354r8  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.275 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445461354r8  [0;39m 选中座位
2023-08-05 22:09:06.276 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445461354r8  [0;39m 最终选座:[DailyTrainSeat [Hash = 47911176, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.279 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445457348sk  [0;39m <==    Updates: 1
2023-08-05 22:09:06.280 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445457348sk  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:06.280 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445457348sk  [0;39m transaction 192.168.0.102:8091:7278238012553193220 will be commit
2023-08-05 22:09:06.290 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546233iuw  [0;39m <==    Updates: 1
2023-08-05 22:09:06.290 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.291 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.291 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2537f370
2023-08-05 22:09:06.291 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546233iuw  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.292 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546233iuw  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.295 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445461354r8  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193226]
2023-08-05 22:09:06.296 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445461354r8  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193226
2023-08-05 22:09:06.296 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.296 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: DailyTrainSeat [Hash = 934358471, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.297 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.297 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.296(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:06.305 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546233iuw  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.306 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 21, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.306 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546233iuw  [0;39m <==      Total: 1
2023-08-05 22:09:06.307 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.307 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244546233iuw  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1044492399, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=21, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.307 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244546233iuw  [0;39m 本次购票没有选座
2023-08-05 22:09:06.307 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.307 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@32cfd3b7
2023-08-05 22:09:06.308 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546233iuw  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.308 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546233iuw  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.323 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546233iuw  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.324 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.325 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546233iuw  [0;39m <==      Total: 1
2023-08-05 22:09:06.325 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.325 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244546233iuw  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.325 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244546233iuw  [0;39m 从车厢1选座
2023-08-05 22:09:06.326 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.326 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@609f16a0
2023-08-05 22:09:06.327 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546233iuw  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.327 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546233iuw  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.333 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244546333s1t  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.334 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244546333s1t  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.335 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244546333s1t  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.336 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244546333s1t  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.336 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244546333s1t  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.336 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244546333s1t  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.336 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244546333s1t  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.336 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244546333s1t  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 00, 2023-08-05 22:07:03.219, 2023-08-05 22:07:03.219
2023-08-05 22:09:06.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.348 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445457348sk  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193220
2023-08-05 22:09:06.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.349 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445457348sk  [0;39m [192.168.0.102:8091:7278238012553193220] commit status: Committed
2023-08-05 22:09:06.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546233iuw  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.356 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546233iuw  [0;39m <==      Total: 32
2023-08-05 22:09:06.356 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244546233iuw  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546233iuw  [0;39m 无选座
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546233iuw  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546233iuw  [0;39m 无选座
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546233iuw  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.356 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546233iuw  [0;39m 无选座
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546233iuw  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546233iuw  [0;39m 无选座
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244546233iuw  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244546233iuw  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244546233iuw  [0;39m 选中座位
2023-08-05 22:09:06.357 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244546233iuw  [0;39m 最终选座:[DailyTrainSeat [Hash = 535831461, id=1687827559741526016, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=01, col=F, seatType=1, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.362 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.362 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: ConfirmOrder [Hash = 1528379367, id=1687828076240703488, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.363 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546333s1t  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.363 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546333s1t  [0;39m ==> Parameters: 1687828076240703488(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.362(Timestamp), 2023-08-05 22:09:06.362(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.365 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m <==    Updates: 1
2023-08-05 22:09:06.365 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.365 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244545846npl  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:06.365 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244545846npl  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:06.366 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545846npl  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:06.366 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545846npl  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:06.409 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445457348sk  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:06.410 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445457348sk  [0;39m ------------- 结束 耗时：672 ms -------------
2023-08-05 22:09:06.411 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244546233iuw  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193228]
2023-08-05 22:09:06.412 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244546233iuw  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193228
2023-08-05 22:09:06.412 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.412 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: DailyTrainSeat [Hash = 2134797508, id=1687827559741526016, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.413 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.414 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.412(Timestamp), 1687827559741526016(Long)
2023-08-05 22:09:06.418 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546333s1t  [0;39m <==    Updates: 1
2023-08-05 22:09:06.419 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.419 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.419 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@140e003e
2023-08-05 22:09:06.420 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546333s1t  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.420 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546333s1t  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.424 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545846npl  [0;39m <==    Updates: 3
2023-08-05 22:09:06.434 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244546434yes  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.434 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244546434yes  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.435 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244546434yes  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.435 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546333s1t  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.436 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 20, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.436 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244546434yes  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.437 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244546434yes  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.436 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546333s1t  [0;39m <==      Total: 1
2023-08-05 22:09:06.438 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244546434yes  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.438 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244546434yes  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.438 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.439 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244546434yes  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.439 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244546333s1t  [0;39m 查出余票记录:DailyTrainTicket [Hash = 358578096, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=20, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.439 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244546333s1t  [0;39m 本次购票没有选座
2023-08-05 22:09:06.440 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.440 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@57c22b8f
2023-08-05 22:09:06.441 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546333s1t  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.441 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546333s1t  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.453 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546333s1t  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.454 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.454 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546333s1t  [0;39m <==      Total: 1
2023-08-05 22:09:06.454 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.455 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244546333s1t  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.455 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244546333s1t  [0;39m 从车厢1选座
2023-08-05 22:09:06.455 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.455 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@609a2b88
2023-08-05 22:09:06.455 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546333s1t  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.456 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546333s1t  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.456 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.457 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: ConfirmOrder [Hash = 1955470331, id=1687828076634968064, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.457 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546434yes  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.457 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546434yes  [0;39m ==> Parameters: 1687828076634968064(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.456(Timestamp), 2023-08-05 22:09:06.456(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.468 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:05.903
2023-08-05 22:09:06.471 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.471 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.471 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.472 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.473 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.473 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.474 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.474 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.475 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.475 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.476 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.476 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.476 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.477 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.478 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.478 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.479 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.479 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.479 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.483 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.483 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546333s1t  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.483 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546333s1t  [0;39m <==      Total: 32
2023-08-05 22:09:06.483 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244546333s1t  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546333s1t  [0;39m 无选座
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546333s1t  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546333s1t  [0;39m 无选座
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546333s1t  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546333s1t  [0;39m 无选座
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546333s1t  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546333s1t  [0;39m 无选座
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546333s1t  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.484 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546333s1t  [0;39m 无选座
2023-08-05 22:09:06.485 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244546333s1t  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.485 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244546333s1t  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.485 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244546333s1t  [0;39m 选中座位
2023-08-05 22:09:06.485 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244546333s1t  [0;39m 最终选座:[DailyTrainSeat [Hash = 1221525186, id=1687827560043515904, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.490 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546434yes  [0;39m <==    Updates: 1
2023-08-05 22:09:06.490 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.490 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.491 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7c1494d0
2023-08-05 22:09:06.491 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546434yes  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.492 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546434yes  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.503 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244546333s1t  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193229]
2023-08-05 22:09:06.504 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244546333s1t  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193229
2023-08-05 22:09:06.504 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.504 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: DailyTrainSeat [Hash = 904899956, id=1687827560043515904, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.504 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.505 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.504(Timestamp), 1687827560043515904(Long)
2023-08-05 22:09:06.508 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546434yes  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.509 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546434yes  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 20, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.509 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546434yes  [0;39m <==      Total: 1
2023-08-05 22:09:06.509 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.509 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244546434yes  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2034825192, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=20, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.510 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244546434yes  [0;39m 本次购票没有选座
2023-08-05 22:09:06.510 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.510 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3543651f
2023-08-05 22:09:06.510 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546434yes  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.511 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546434yes  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.527 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546434yes  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.529 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546434yes  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.530 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546434yes  [0;39m <==      Total: 1
2023-08-05 22:09:06.531 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.531 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244546434yes  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.531 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244546434yes  [0;39m 从车厢1选座
2023-08-05 22:09:06.532 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.532 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1d538be5
2023-08-05 22:09:06.533 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546434yes  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.534 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546434yes  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.535 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m <==    Updates: 1
2023-08-05 22:09:06.536 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445465364le  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.536 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.537 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445465364le  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.537 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244546333s1t  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:06.538 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445465364le  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.538 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244546333s1t  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:06.539 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546333s1t  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:06.540 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445465364le  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.540 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445465364le  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.540 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546333s1t  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:06.540 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445465364le  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.540 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445465364le  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.541 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445465364le  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.551 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.552 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.553 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.553 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.554 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:05.903
2023-08-05 22:09:06.555 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.556 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.557 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.558 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.559 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.560 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.561 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.565 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.567 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.568 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: ConfirmOrder [Hash = 722590151, id=1687828077100535808, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.568 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.568 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445465364le  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.569 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.569 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445465364le  [0;39m ==> Parameters: 1687828077100535808(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.567(Timestamp), 2023-08-05 22:09:06.567(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.573 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.574 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.575 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.575 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.576 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.577 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.577 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.578 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.578 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.579 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546434yes  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.579 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546434yes  [0;39m <==      Total: 32
2023-08-05 22:09:06.579 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.579 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244546434yes  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546434yes  [0;39m 无选座
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546434yes  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546434yes  [0;39m 无选座
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546434yes  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546434yes  [0;39m 无选座
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546434yes  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.580 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546434yes  [0;39m 无选座
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546434yes  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546434yes  [0;39m 无选座
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244546434yes  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244546434yes  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244546434yes  [0;39m 选中座位
2023-08-05 22:09:06.581 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244546434yes  [0;39m 最终选座:[DailyTrainSeat [Hash = 224344801, id=1687827560043515904, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.593 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445465364le  [0;39m <==    Updates: 1
2023-08-05 22:09:06.593 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.593 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.593 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@6a521047
2023-08-05 22:09:06.594 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445465364le  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.594 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445465364le  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.602 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244546434yes  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193232]
2023-08-05 22:09:06.603 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244546434yes  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193232
2023-08-05 22:09:06.603 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.603 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: DailyTrainSeat [Hash = 788456564, id=1687827560043515904, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.604 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.605 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.603(Timestamp), 1687827560043515904(Long)
2023-08-05 22:09:06.607 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445465364le  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.608 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445465364le  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 20, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.609 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445465364le  [0;39m <==      Total: 1
2023-08-05 22:09:06.609 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.609 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445465364le  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2106756668, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=20, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.609 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912445465364le  [0;39m 本次购票没有选座
2023-08-05 22:09:06.610 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.610 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@414db167
2023-08-05 22:09:06.610 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445465364le  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.611 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445465364le  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.624 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445465364le  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.625 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912445465364le  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.625 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912445465364le  [0;39m <==      Total: 1
2023-08-05 22:09:06.625 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.626 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912445465364le  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.626 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912445465364le  [0;39m 从车厢1选座
2023-08-05 22:09:06.626 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.626 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@35d89c1d
2023-08-05 22:09:06.627 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445465364le  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.628 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445465364le  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.638 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244546638y42  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:06.639 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244546638y42  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.639 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244546638y42  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:06.640 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244546638y42  [0;39m ------------- 开始 -------------
2023-08-05 22:09:06.640 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244546638y42  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:06.640 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244546638y42  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:06.640 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244546638y42  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:06.640 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.641 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244546638y42  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:06.641 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.641 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.642 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.643 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:05.903
2023-08-05 22:09:06.643 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.643 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.644 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.644 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.645 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.645 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.645 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.646 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.647 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.647 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244545846npl  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:06.647 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545846npl  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:06.647 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.647 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545846npl  [0;39m 参数值: ConfirmOrder [Hash = 1365841698, id=1687828074210660352, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023, tickets=null]
2023-08-05 22:09:06.648 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:06.648 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.648 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:06.647(Timestamp), 1687828074210660352(Long)
2023-08-05 22:09:06.648 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.649 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.649 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.650 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.650 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.651 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.651 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.652 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.653 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.653 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.653 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.654 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.654 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.655 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.655 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.656 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.656 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912445465364le  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.656 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912445465364le  [0;39m <==      Total: 32
2023-08-05 22:09:06.657 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912445465364le  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445465364le  [0;39m 无选座
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445465364le  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445465364le  [0;39m 无选座
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445465364le  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445465364le  [0;39m 无选座
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445465364le  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.657 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445465364le  [0;39m 无选座
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912445465364le  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912445465364le  [0;39m 无选座
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912445465364le  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912445465364le  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912445465364le  [0;39m 选中座位
2023-08-05 22:09:06.658 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912445465364le  [0;39m 最终选座:[DailyTrainSeat [Hash = 1891124096, id=1687827560043515904, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.666 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.667 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: ConfirmOrder [Hash = 1412953287, id=1687828077515771904, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:06, updateTime=2023-08-05 22:09:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:06.667 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546638y42  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:06.668 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546638y42  [0;39m ==> Parameters: 1687828077515771904(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:06.666(Timestamp), 2023-08-05 22:09:06.666(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:06.676 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912445465364le  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193233]
2023-08-05 22:09:06.676 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912445465364le  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193233
2023-08-05 22:09:06.677 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.677 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: DailyTrainSeat [Hash = 1901591279, id=1687827560043515904, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.677 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.677 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.677(Timestamp), 1687827560043515904(Long)
2023-08-05 22:09:06.678 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545846npl  [0;39m <==    Updates: 1
2023-08-05 22:09:06.678 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545846npl  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:06.679 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244545846npl  [0;39m transaction 192.168.0.102:8091:7278238012553193221 will be commit
2023-08-05 22:09:06.694 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244546638y42  [0;39m <==    Updates: 1
2023-08-05 22:09:06.694 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:06.695 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.695 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@70052e2e
2023-08-05 22:09:06.696 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546638y42  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:06.697 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546638y42  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:06.755 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546638y42  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:06.757 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244546638y42  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 20, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:06.759 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244546638y42  [0;39m <==      Total: 1
2023-08-05 22:09:06.759 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:06.760 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244546638y42  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2065081910, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=20, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:06.760 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244546638y42  [0;39m 本次购票没有选座
2023-08-05 22:09:06.761 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.761 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5017920f
2023-08-05 22:09:06.762 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546638y42  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:06.763 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546638y42  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:06.777 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546638y42  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:06.778 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244546638y42  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:06.779 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244546638y42  [0;39m <==      Total: 1
2023-08-05 22:09:06.780 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:06.780 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244546638y42  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:06.780 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244546638y42  [0;39m 从车厢1选座
2023-08-05 22:09:06.781 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.781 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@694c702a
2023-08-05 22:09:06.782 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546638y42  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:06.782 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546638y42  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:06.811 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:06.812 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244545846npl  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193221
2023-08-05 22:09:06.812 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:06.812 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244545846npl  [0;39m [192.168.0.102:8091:7278238012553193221] commit status: Committed
2023-08-05 22:09:06.813 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:06.813 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:06.813 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:05.903
2023-08-05 22:09:06.814 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 00, 2023-08-05 22:07:03.290, 2023-08-05 22:07:03.290
2023-08-05 22:09:06.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:06.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:06.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:06.816 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:06.816 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:06.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:06.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:06.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:06.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:06.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:06.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:06.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:06.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:06.821 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:06.822 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:06.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:06.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:06.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:06.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:06.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:06.825 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:06.826 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m <==    Updates: 1
2023-08-05 22:09:06.826 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546333s1t  [0;39m <==    Updates: 3
2023-08-05 22:09:06.826 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.826 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:06.826 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244545939t7o  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:06.827 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244545939t7o  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:06.827 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:06.827 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545939t7o  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:06.828 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:06.828 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545939t7o  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:06.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:06.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:06.830 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244546638y42  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:06.831 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244546638y42  [0;39m <==      Total: 32
2023-08-05 22:09:06.831 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:06.831 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244546638y42  [0;39m 车厢1的座位数:32
2023-08-05 22:09:06.831 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546638y42  [0;39m 无选座
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546638y42  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546638y42  [0;39m 无选座
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546638y42  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546638y42  [0;39m 无选座
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546638y42  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546638y42  [0;39m 无选座
2023-08-05 22:09:06.832 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244546638y42  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:06.833 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244546638y42  [0;39m 无选座
2023-08-05 22:09:06.833 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244546638y42  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:06.833 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244546638y42  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:06.833 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244546638y42  [0;39m 选中座位
2023-08-05 22:09:06.834 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244546638y42  [0;39m 最终选座:[DailyTrainSeat [Hash = 1271805234, id=1687827560043515904, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=A, seatType=1, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:06.843 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244545846npl  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:06.843 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244545846npl  [0;39m ------------- 结束 耗时：995 ms -------------
2023-08-05 22:09:06.849 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244546638y42  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193244]
2023-08-05 22:09:06.850 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244546638y42  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193244
2023-08-05 22:09:06.850 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:06.850 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: DailyTrainSeat [Hash = 398155628, id=1687827560043515904, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:06 CST 2023]
2023-08-05 22:09:06.851 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:06.851 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:06.85(Timestamp), 1687827560043515904(Long)
2023-08-05 22:09:07.043 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244546333s1t  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:07.044 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546333s1t  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.045 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546333s1t  [0;39m 参数值: ConfirmOrder [Hash = 151873178, id=1687828076240703488, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:07 CST 2023, tickets=null]
2023-08-05 22:09:07.046 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:07.047 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:07.044(Timestamp), 1687828076240703488(Long)
2023-08-05 22:09:07.073 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546333s1t  [0;39m <==    Updates: 1
2023-08-05 22:09:07.074 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546333s1t  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.075 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244546333s1t  [0;39m transaction 192.168.0.102:8091:7278238012553193229 will be commit
2023-08-05 22:09:07.138 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244546333s1t  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193229
2023-08-05 22:09:07.139 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244546333s1t  [0;39m [192.168.0.102:8091:7278238012553193229] commit status: Committed
2023-08-05 22:09:07.157 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244545939t7o  [0;39m <==    Updates: 3
2023-08-05 22:09:07.163 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m <==    Updates: 1
2023-08-05 22:09:07.164 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:07.165 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244546434yes  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:07.166 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244546434yes  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:07.168 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546434yes  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:07.169 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244546333s1t  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:07.170 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244546333s1t  [0;39m ------------- 结束 耗时：834 ms -------------
2023-08-05 22:09:07.170 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546434yes  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:07.393 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244545939t7o  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:07.394 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244545939t7o  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.396 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244545939t7o  [0;39m 参数值: ConfirmOrder [Hash = 2098923876, id=1687828074579759104, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:07 CST 2023, tickets=null]
2023-08-05 22:09:07.397 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:07.398 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:07.394(Timestamp), 1687828074579759104(Long)
2023-08-05 22:09:07.424 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244545939t7o  [0;39m <==    Updates: 1
2023-08-05 22:09:07.424 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244545939t7o  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.425 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244545939t7o  [0;39m transaction 192.168.0.102:8091:7278238012553193224 will be commit
2023-08-05 22:09:07.491 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244545939t7o  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193224
2023-08-05 22:09:07.492 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244545939t7o  [0;39m [192.168.0.102:8091:7278238012553193224] commit status: Committed
2023-08-05 22:09:07.505 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m <==    Updates: 1
2023-08-05 22:09:07.506 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:07.506 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244546047xey  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:07.507 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244546047xey  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:07.507 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546047xey  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:07.508 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546047xey  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:07.518 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244545939t7o  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:07.518 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546434yes  [0;39m <==    Updates: 3
2023-08-05 22:09:07.519 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244545939t7o  [0;39m ------------- 结束 耗时：1578 ms -------------
2023-08-05 22:09:07.749 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244546434yes  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:07.749 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546434yes  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.750 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546434yes  [0;39m 参数值: ConfirmOrder [Hash = 1408419911, id=1687828076634968064, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:07 CST 2023, tickets=null]
2023-08-05 22:09:07.750 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:07.751 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:07.749(Timestamp), 1687828076634968064(Long)
2023-08-05 22:09:07.781 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546434yes  [0;39m <==    Updates: 1
2023-08-05 22:09:07.781 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546434yes  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:07.781 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244546434yes  [0;39m transaction 192.168.0.102:8091:7278238012553193232 will be commit
2023-08-05 22:09:07.836 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244546434yes  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193232
2023-08-05 22:09:07.836 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244546434yes  [0;39m [192.168.0.102:8091:7278238012553193232] commit status: Committed
2023-08-05 22:09:07.877 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546047xey  [0;39m <==    Updates: 3
2023-08-05 22:09:07.877 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m <==    Updates: 1
2023-08-05 22:09:07.877 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:07.878 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445465364le  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:07.878 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445465364le  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:07.878 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445465364le  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:07.879 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445465364le  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:07.895 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244546434yes  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:07.895 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244546434yes  [0;39m ------------- 结束 耗时：1459 ms -------------
2023-08-05 22:09:08.083 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244546047xey  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:08.084 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546047xey  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.085 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546047xey  [0;39m 参数值: ConfirmOrder [Hash = 859539314, id=1687828075032743936, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:08 CST 2023, tickets=null]
2023-08-05 22:09:08.086 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:08.088 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:08.084(Timestamp), 1687828075032743936(Long)
2023-08-05 22:09:08.117 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546047xey  [0;39m <==    Updates: 1
2023-08-05 22:09:08.118 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546047xey  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.118 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244546047xey  [0;39m transaction 192.168.0.102:8091:7278238012553193225 will be commit
2023-08-05 22:09:08.178 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244546047xey  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193225
2023-08-05 22:09:08.179 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244546047xey  [0;39m [192.168.0.102:8091:7278238012553193225] commit status: Committed
2023-08-05 22:09:08.228 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445465364le  [0;39m <==    Updates: 3
2023-08-05 22:09:08.231 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m <==    Updates: 1
2023-08-05 22:09:08.233 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:08.234 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912445461354r8  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:08.235 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912445461354r8  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:08.236 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445461354r8  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:08.238 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445461354r8  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:08.241 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244546047xey  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:08.241 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244546047xey  [0;39m ------------- 结束 耗时：2191 ms -------------
2023-08-05 22:09:08.445 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445465364le  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:08.445 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445465364le  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.446 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445465364le  [0;39m 参数值: ConfirmOrder [Hash = 1076406417, id=1687828077100535808, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:08 CST 2023, tickets=null]
2023-08-05 22:09:08.447 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:08.448 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:08.445(Timestamp), 1687828077100535808(Long)
2023-08-05 22:09:08.477 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445465364le  [0;39m <==    Updates: 1
2023-08-05 22:09:08.478 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445465364le  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.478 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445465364le  [0;39m transaction 192.168.0.102:8091:7278238012553193233 will be commit
2023-08-05 22:09:08.534 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445465364le  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193233
2023-08-05 22:09:08.534 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445465364le  [0;39m [192.168.0.102:8091:7278238012553193233] commit status: Committed
2023-08-05 22:09:08.548 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m <==    Updates: 1
2023-08-05 22:09:08.548 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912445461354r8  [0;39m <==    Updates: 3
2023-08-05 22:09:08.549 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:08.549 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244546638y42  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:08.550 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244546638y42  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:08.550 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546638y42  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:08.551 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546638y42  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:08.558 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445465364le  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:08.558 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445465364le  [0;39m ------------- 结束 耗时：2018 ms -------------
2023-08-05 22:09:08.757 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912445461354r8  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:08.757 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445461354r8  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.757 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445461354r8  [0;39m 参数值: ConfirmOrder [Hash = 423205030, id=1687828075460562944, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:08 CST 2023, tickets=null]
2023-08-05 22:09:08.758 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:08.759 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:08.757(Timestamp), 1687828075460562944(Long)
2023-08-05 22:09:08.789 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912445461354r8  [0;39m <==    Updates: 1
2023-08-05 22:09:08.789 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445461354r8  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:08.789 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912445461354r8  [0;39m transaction 192.168.0.102:8091:7278238012553193226 will be commit
2023-08-05 22:09:08.846 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912445461354r8  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193226
2023-08-05 22:09:08.846 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912445461354r8  [0;39m [192.168.0.102:8091:7278238012553193226] commit status: Committed
2023-08-05 22:09:08.859 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546638y42  [0;39m <==    Updates: 3
2023-08-05 22:09:08.860 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m <==    Updates: 1
2023-08-05 22:09:08.860 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:08.860 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244546233iuw  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:08.860 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244546233iuw  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:08.861 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546233iuw  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:08.861 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546233iuw  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:08.870 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912445461354r8  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:08.870 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912445461354r8  [0;39m ------------- 结束 耗时：2730 ms -------------
2023-08-05 22:09:09.054 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244546638y42  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:09.055 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546638y42  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:09.055 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546638y42  [0;39m 参数值: ConfirmOrder [Hash = 1273545576, id=1687828077515771904, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:09 CST 2023, tickets=null]
2023-08-05 22:09:09.056 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:09.056 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:09.055(Timestamp), 1687828077515771904(Long)
2023-08-05 22:09:09.082 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546638y42  [0;39m <==    Updates: 1
2023-08-05 22:09:09.083 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546638y42  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:09.083 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244546638y42  [0;39m transaction 192.168.0.102:8091:7278238012553193244 will be commit
2023-08-05 22:09:09.186 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244546638y42  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193244
2023-08-05 22:09:09.187 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244546638y42  [0;39m [192.168.0.102:8091:7278238012553193244] commit status: Committed
2023-08-05 22:09:09.201 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244546233iuw  [0;39m <==    Updates: 3
2023-08-05 22:09:09.212 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244546638y42  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:09.212 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244546638y42  [0;39m ------------- 结束 耗时：2572 ms -------------
2023-08-05 22:09:09.437 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244546233iuw  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:09.438 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244546233iuw  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:09.438 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244546233iuw  [0;39m 参数值: ConfirmOrder [Hash = 1376826610, id=1687828075817078784, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:09 CST 2023, tickets=null]
2023-08-05 22:09:09.439 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:09.439 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:09.438(Timestamp), 1687828075817078784(Long)
2023-08-05 22:09:09.464 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244546233iuw  [0;39m <==    Updates: 1
2023-08-05 22:09:09.464 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244546233iuw  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:09.465 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244546233iuw  [0;39m transaction 192.168.0.102:8091:7278238012553193228 will be commit
2023-08-05 22:09:09.522 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244546233iuw  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193228
2023-08-05 22:09:09.522 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244546233iuw  [0;39m [192.168.0.102:8091:7278238012553193228] commit status: Committed
2023-08-05 22:09:09.550 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244546233iuw  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:09.550 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244546233iuw  [0;39m ------------- 结束 耗时：3314 ms -------------
2023-08-05 22:09:17.209 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557209aaa  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.210 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557209aaa  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.210 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557209aaa  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.211 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557209aaa  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.212 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557209aaa  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.212 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557209aaa  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.212 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557209aaa  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.212 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557209aaa  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.242 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.242 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: ConfirmOrder [Hash = 644409791, id=1687828121874731008, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.242 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557209aaa  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.243 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557209aaa  [0;39m ==> Parameters: 1687828121874731008(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.241(Timestamp), 2023-08-05 22:09:17.241(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.273 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557209aaa  [0;39m <==    Updates: 1
2023-08-05 22:09:17.274 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.274 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.274 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@536f7f5c
2023-08-05 22:09:17.275 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557209aaa  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.275 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557209aaa  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.293 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557209aaa  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.294 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.295 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557209aaa  [0;39m <==      Total: 1
2023-08-05 22:09:17.295 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.295 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557209aaa  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1590148445, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.296 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557209aaa  [0;39m 本次购票没有选座
2023-08-05 22:09:17.296 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.296 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2c496110
2023-08-05 22:09:17.297 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557209aaa  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.297 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557209aaa  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.314 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557209aaa  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.315 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.315 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557209aaa  [0;39m <==      Total: 1
2023-08-05 22:09:17.316 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.316 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557209aaa  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.316 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557316emv  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.316 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557209aaa  [0;39m 从车厢1选座
2023-08-05 22:09:17.316 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.316 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6c3b70e2
2023-08-05 22:09:17.316 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557316emv  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.317 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557316emv  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.317 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557209aaa  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.318 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557209aaa  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.318 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557316emv  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.319 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557316emv  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.319 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557316emv  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.319 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557316emv  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.319 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557316emv  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.335 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.336 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.337 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.338 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.338 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:17.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.340 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.348 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.348 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: ConfirmOrder [Hash = 1174555273, id=1687828122319327232, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.348 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557316emv  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.349 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557316emv  [0;39m ==> Parameters: 1687828122319327232(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.348(Timestamp), 2023-08-05 22:09:17.348(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557209aaa  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.351 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557209aaa  [0;39m <==      Total: 32
2023-08-05 22:09:17.352 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.352 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557209aaa  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.352 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.352 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557209aaa  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.352 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.352 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557209aaa  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557209aaa  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557209aaa  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557209aaa  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557209aaa  [0;39m 无选座
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557209aaa  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557209aaa  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.353 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557209aaa  [0;39m 选中座位
2023-08-05 22:09:17.354 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557209aaa  [0;39m 最终选座:[DailyTrainSeat [Hash = 1758700658, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.373 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557209aaa  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193287]
2023-08-05 22:09:17.373 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557209aaa  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193287
2023-08-05 22:09:17.374 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.374 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: DailyTrainSeat [Hash = 1341292956, id=1687827560186122240, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.375 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.375 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.374(Timestamp), 1687827560186122240(Long)
2023-08-05 22:09:17.410 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557410v3f  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.411 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557410v3f  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.411 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557410v3f  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.412 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557410v3f  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.412 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557410v3f  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.412 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557410v3f  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.412 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557410v3f  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.413 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557410v3f  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.418 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557316emv  [0;39m <==    Updates: 1
2023-08-05 22:09:17.418 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.418 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.418 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@38159fe5
2023-08-05 22:09:17.419 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557316emv  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.420 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557316emv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.435 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m <==    Updates: 1
2023-08-05 22:09:17.435 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557316emv  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.436 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.436 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557316emv  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.436 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557209aaa  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:17.436 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.436 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557209aaa  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:17.436 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: ConfirmOrder [Hash = 1023571058, id=1687828122688425984, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.436 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557316emv  [0;39m <==      Total: 1
2023-08-05 22:09:17.437 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557410v3f  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.437 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557209aaa  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:17.437 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.437 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557316emv  [0;39m 查出余票记录:DailyTrainTicket [Hash = 132588417, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.437 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557410v3f  [0;39m ==> Parameters: 1687828122688425984(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.436(Timestamp), 2023-08-05 22:09:17.436(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.437 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557316emv  [0;39m 本次购票没有选座
2023-08-05 22:09:17.437 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557209aaa  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:17.438 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.438 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@138d0cc1
2023-08-05 22:09:17.439 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557316emv  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.440 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557316emv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.455 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557316emv  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.456 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557316emv  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.456 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557316emv  [0;39m <==      Total: 1
2023-08-05 22:09:17.457 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.457 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557316emv  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.457 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557316emv  [0;39m 从车厢1选座
2023-08-05 22:09:17.457 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.457 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@55559bdc
2023-08-05 22:09:17.458 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557316emv  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.458 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557316emv  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.461 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557410v3f  [0;39m <==    Updates: 1
2023-08-05 22:09:17.462 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.462 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.462 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@d61b906
2023-08-05 22:09:17.463 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557410v3f  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.463 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557410v3f  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.468 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557209aaa  [0;39m <==    Updates: 3
2023-08-05 22:09:17.478 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.478 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557410v3f  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.479 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.479 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.480 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557410v3f  [0;39m <==      Total: 1
2023-08-05 22:09:17.480 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.480 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557410v3f  [0;39m 查出余票记录:DailyTrainTicket [Hash = 141107504, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.481 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557410v3f  [0;39m 本次购票没有选座
2023-08-05 22:09:17.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.481 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.482 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@198e4c34
2023-08-05 22:09:17.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.482 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557410v3f  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:17.483 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557410v3f  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.483 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.483 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.483 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.484 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.485 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.485 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.485 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.486 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.487 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.487 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.487 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.488 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.488 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.490 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.490 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.490 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.491 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.493 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.493 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.494 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.495 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557316emv  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.495 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557410v3f  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.495 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557316emv  [0;39m <==      Total: 32
2023-08-05 22:09:17.495 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.495 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.495 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557316emv  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.495 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.495 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557410v3f  [0;39m <==      Total: 1
2023-08-05 22:09:17.495 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557316emv  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.496 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557316emv  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557410v3f  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557410v3f  [0;39m 从车厢1选座
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557316emv  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.496 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.496 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4d74768f
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557316emv  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557316emv  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.496 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557316emv  [0;39m 无选座
2023-08-05 22:09:17.497 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557410v3f  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.497 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557316emv  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.497 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557316emv  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.497 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557316emv  [0;39m 选中座位
2023-08-05 22:09:17.497 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557410v3f  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.497 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557316emv  [0;39m 最终选座:[DailyTrainSeat [Hash = 276865899, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.508 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557508bhz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.508 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557508bhz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.508 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557508bhz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.509 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557508bhz  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.510 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557508bhz  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.510 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557508bhz  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.510 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557508bhz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.510 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557508bhz  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:17.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.515 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.515 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557316emv  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193288]
2023-08-05 22:09:17.516 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557316emv  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193288
2023-08-05 22:09:17.516 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.516 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: DailyTrainSeat [Hash = 233905866, id=1687827560186122240, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.517 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.517 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.516(Timestamp), 1687827560186122240(Long)
2023-08-05 22:09:17.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.518 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.519 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.520 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.520 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.521 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.521 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.522 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.523 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.523 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.524 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.524 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.525 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.526 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.527 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.527 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.528 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.528 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557410v3f  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.529 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557410v3f  [0;39m <==      Total: 32
2023-08-05 22:09:17.529 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.529 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557410v3f  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.529 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.529 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557410v3f  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557410v3f  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557410v3f  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557410v3f  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557410v3f  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557410v3f  [0;39m 无选座
2023-08-05 22:09:17.530 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557410v3f  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.531 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557410v3f  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.531 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557410v3f  [0;39m 选中座位
2023-08-05 22:09:17.531 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557410v3f  [0;39m 最终选座:[DailyTrainSeat [Hash = 1741794546, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.535 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.535 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: ConfirmOrder [Hash = 1455351115, id=1687828123103662080, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.536 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557508bhz  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.536 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557508bhz  [0;39m ==> Parameters: 1687828123103662080(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.535(Timestamp), 2023-08-05 22:09:17.535(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.550 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557410v3f  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193289]
2023-08-05 22:09:17.551 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557410v3f  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193289
2023-08-05 22:09:17.551 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.551 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: DailyTrainSeat [Hash = 1168655533, id=1687827560186122240, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.551 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.552 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.551(Timestamp), 1687827560186122240(Long)
2023-08-05 22:09:17.561 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557508bhz  [0;39m <==    Updates: 1
2023-08-05 22:09:17.561 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.561 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.561 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@48db5dbc
2023-08-05 22:09:17.562 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557508bhz  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.562 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557508bhz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.575 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557508bhz  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.575 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.576 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557508bhz  [0;39m <==      Total: 1
2023-08-05 22:09:17.576 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.576 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557508bhz  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1712793865, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.576 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557508bhz  [0;39m 本次购票没有选座
2023-08-05 22:09:17.577 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.577 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@499d1669
2023-08-05 22:09:17.577 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557508bhz  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.578 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557508bhz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.601 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557508bhz  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.601 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.602 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557508bhz  [0;39m <==      Total: 1
2023-08-05 22:09:17.602 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.603 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557508bhz  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.603 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557508bhz  [0;39m 从车厢1选座
2023-08-05 22:09:17.603 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.603 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4127fe98
2023-08-05 22:09:17.604 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557508bhz  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.605 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557508bhz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.610 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557610gpx  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.610 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557610gpx  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.610 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557610gpx  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.611 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557610gpx  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.611 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557610gpx  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.611 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557610gpx  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.611 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557610gpx  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.611 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557610gpx  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.619 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.620 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.620 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.620 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.621 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.621 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.622 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:17.623 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.623 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.623 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.624 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.624 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.625 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.625 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.626 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.627 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.628 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.628 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.628 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.629 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.629 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.630 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.630 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.631 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.631 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.632 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.633 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.633 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557508bhz  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.634 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557508bhz  [0;39m <==      Total: 32
2023-08-05 22:09:17.634 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.634 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557508bhz  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.634 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557508bhz  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557508bhz  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557508bhz  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557508bhz  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.635 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557508bhz  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.636 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557508bhz  [0;39m 无选座
2023-08-05 22:09:17.636 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557508bhz  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.636 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557508bhz  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.636 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557508bhz  [0;39m 选中座位
2023-08-05 22:09:17.636 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557508bhz  [0;39m 最终选座:[DailyTrainSeat [Hash = 1059633959, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.638 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.638 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: ConfirmOrder [Hash = 1874550213, id=1687828123535675392, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.639 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557610gpx  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.640 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557610gpx  [0;39m ==> Parameters: 1687828123535675392(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.637(Timestamp), 2023-08-05 22:09:17.637(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.655 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557508bhz  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193292]
2023-08-05 22:09:17.655 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557508bhz  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193292
2023-08-05 22:09:17.656 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.656 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: DailyTrainSeat [Hash = 681864133, id=1687827560186122240, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.656 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.656 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.655(Timestamp), 1687827560186122240(Long)
2023-08-05 22:09:17.664 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557610gpx  [0;39m <==    Updates: 1
2023-08-05 22:09:17.664 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.665 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.665 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@17323928
2023-08-05 22:09:17.666 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557610gpx  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.666 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557610gpx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.678 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557610gpx  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.679 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.680 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557610gpx  [0;39m <==      Total: 1
2023-08-05 22:09:17.680 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.680 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557610gpx  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1557744309, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.680 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557610gpx  [0;39m 本次购票没有选座
2023-08-05 22:09:17.681 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.681 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@93e3718
2023-08-05 22:09:17.681 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557610gpx  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.682 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557610gpx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.688 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557209aaa  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:17.688 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557209aaa  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:17.688 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557209aaa  [0;39m 参数值: ConfirmOrder [Hash = 409937326, id=1687828121874731008, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023, tickets=null]
2023-08-05 22:09:17.689 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:17.689 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:17.688(Timestamp), 1687828121874731008(Long)
2023-08-05 22:09:17.695 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557610gpx  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.696 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.696 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557610gpx  [0;39m <==      Total: 1
2023-08-05 22:09:17.696 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.697 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557610gpx  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.697 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557610gpx  [0;39m 从车厢1选座
2023-08-05 22:09:17.697 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.697 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3df8c713
2023-08-05 22:09:17.697 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557610gpx  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.698 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557610gpx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.709 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557709t33  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.710 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557709t33  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.710 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557709t33  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.711 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557709t33  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.711 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557709t33  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.711 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557709t33  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.711 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557709t33  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.712 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557709t33  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.711 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.712 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.712 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.713 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.714 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.714 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.714 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 00, 2023-08-05 22:07:03.325, 2023-08-05 22:07:03.325
2023-08-05 22:09:17.715 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.715 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.716 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.716 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.717 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.717 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.718 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.718 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.719 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.719 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.720 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.720 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.721 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557209aaa  [0;39m <==    Updates: 1
2023-08-05 22:09:17.721 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.722 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557209aaa  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:17.722 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557209aaa  [0;39m transaction 192.168.0.102:8091:7278238012553193287 will be commit
2023-08-05 22:09:17.722 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.723 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.724 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.735 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.737 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.738 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.738 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.739 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.740 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.741 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.742 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.742 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.743 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557610gpx  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.743 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557610gpx  [0;39m <==      Total: 32
2023-08-05 22:09:17.743 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.744 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557610gpx  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.744 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.745 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557610gpx  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.745 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.745 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557610gpx  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.745 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557610gpx  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557610gpx  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557610gpx  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557610gpx  [0;39m 无选座
2023-08-05 22:09:17.746 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557610gpx  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.747 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557610gpx  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.747 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557610gpx  [0;39m 选中座位
2023-08-05 22:09:17.747 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557610gpx  [0;39m 最终选座:[DailyTrainSeat [Hash = 1402788472, id=1687827560186122240, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=C, seatType=1, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.748 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.749 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: ConfirmOrder [Hash = 716320926, id=1687828123997048832, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.749 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557709t33  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.750 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557709t33  [0;39m ==> Parameters: 1687828123997048832(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.748(Timestamp), 2023-08-05 22:09:17.748(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.766 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557610gpx  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193297]
2023-08-05 22:09:17.766 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557610gpx  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193297
2023-08-05 22:09:17.766 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.767 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: DailyTrainSeat [Hash = 1106175153, id=1687827560186122240, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.767 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.767 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.766(Timestamp), 1687827560186122240(Long)
2023-08-05 22:09:17.776 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557709t33  [0;39m <==    Updates: 1
2023-08-05 22:09:17.776 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.777 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.777 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3f433c72
2023-08-05 22:09:17.778 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557709t33  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.778 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557709t33  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.791 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557209aaa  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193287
2023-08-05 22:09:17.791 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557209aaa  [0;39m [192.168.0.102:8091:7278238012553193287] commit status: Committed
2023-08-05 22:09:17.791 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557709t33  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.792 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557709t33  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 11, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.793 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557709t33  [0;39m <==      Total: 1
2023-08-05 22:09:17.793 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.793 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557709t33  [0;39m 查出余票记录:DailyTrainTicket [Hash = 574247485, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=11, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.794 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557709t33  [0;39m 本次购票没有选座
2023-08-05 22:09:17.794 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.794 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@b40db19
2023-08-05 22:09:17.794 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557709t33  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.795 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557709t33  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.807 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557807y1g  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.807 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557807y1g  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.807 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557709t33  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.808 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557807y1g  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.808 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m <==    Updates: 1
2023-08-05 22:09:17.809 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557709t33  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.809 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.809 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557316emv  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:17.809 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557709t33  [0;39m <==      Total: 1
2023-08-05 22:09:17.809 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557316emv  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:17.809 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557807y1g  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557807y1g  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557807y1g  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557807y1g  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.810 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557709t33  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557807y1g  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.810 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557316emv  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:17.810 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557709t33  [0;39m 从车厢1选座
2023-08-05 22:09:17.810 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.811 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557316emv  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:17.811 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5f941e3e
2023-08-05 22:09:17.812 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557709t33  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.812 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557709t33  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.823 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557209aaa  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:17.823 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557209aaa  [0;39m ------------- 结束 耗时：612 ms -------------
2023-08-05 22:09:17.825 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.826 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.827 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.827 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.828 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.374
2023-08-05 22:09:17.829 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.830 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.831 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.839 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.840 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: ConfirmOrder [Hash = 1998866050, id=1687828124378730496, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.839 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.840 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557316emv  [0;39m <==    Updates: 3
2023-08-05 22:09:17.840 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557807y1g  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.841 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.841 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.841 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557807y1g  [0;39m ==> Parameters: 1687828124378730496(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.839(Timestamp), 2023-08-05 22:09:17.839(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.842 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.843 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.844 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.844 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.845 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.846 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.847 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.848 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.849 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.850 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.850 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.851 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.852 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.852 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.853 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.853 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.854 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.855 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.856 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.856 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557709t33  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.856 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557709t33  [0;39m <==      Total: 32
2023-08-05 22:09:17.857 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557709t33  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.857 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557709t33  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557709t33  [0;39m 无选座
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557709t33  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557709t33  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.858 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557709t33  [0;39m 选中座位
2023-08-05 22:09:17.859 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557709t33  [0;39m 最终选座:[DailyTrainSeat [Hash = 584747688, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.865 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557807y1g  [0;39m <==    Updates: 1
2023-08-05 22:09:17.866 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.866 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.866 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@62c41d52
2023-08-05 22:09:17.867 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557807y1g  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.867 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557807y1g  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.878 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557709t33  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193299]
2023-08-05 22:09:17.881 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557709t33  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193299
2023-08-05 22:09:17.881 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557807y1g  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.882 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.882 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: DailyTrainSeat [Hash = 967988210, id=1687827560341311488, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.882 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 10, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.882 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.882 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557807y1g  [0;39m <==      Total: 1
2023-08-05 22:09:17.883 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.882(Timestamp), 1687827560341311488(Long)
2023-08-05 22:09:17.883 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.883 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557807y1g  [0;39m 查出余票记录:DailyTrainTicket [Hash = 529099873, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=10, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.883 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557807y1g  [0;39m 本次购票没有选座
2023-08-05 22:09:17.883 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.883 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7c69e74a
2023-08-05 22:09:17.884 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557807y1g  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.884 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557807y1g  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:17.899 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557807y1g  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:17.900 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:17.900 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557807y1g  [0;39m <==      Total: 1
2023-08-05 22:09:17.901 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.901 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557807y1g  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:17.901 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557807y1g  [0;39m 从车厢1选座
2023-08-05 22:09:17.901 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.901 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@38754a1
2023-08-05 22:09:17.902 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557807y1g  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:17.902 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557807y1g  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:17.908 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m <==    Updates: 1
2023-08-05 22:09:17.909 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.909 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244557909knf  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:17.909 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557709t33  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:17.910 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557709t33  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:17.910 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244557909knf  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.915 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244557909knf  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:17.915 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:17.915 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557709t33  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:17.916 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244557909knf  [0;39m ------------- 开始 -------------
2023-08-05 22:09:17.916 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:17.916 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244557909knf  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:17.916 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557709t33  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:17.917 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244557909knf  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:17.917 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244557909knf  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:17.917 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244557909knf  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:17.917 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:17.918 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:17.918 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:17.919 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:17.919 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.374
2023-08-05 22:09:17.919 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:17.920 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:17.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:17.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:17.921 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:17.922 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:17.922 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:17.923 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:17.923 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:17.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:17.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:17.924 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:17.925 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:17.925 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:17.926 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:17.926 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:17.927 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:17.927 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:17.928 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:17.928 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:17.928 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:17.929 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:17.929 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:17.930 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:17.930 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:17.931 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557807y1g  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:17.931 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557807y1g  [0;39m <==      Total: 32
2023-08-05 22:09:17.931 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:17.931 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557807y1g  [0;39m 车厢1的座位数:32
2023-08-05 22:09:17.931 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.931 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.932 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557807y1g  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557807y1g  [0;39m 无选座
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557807y1g  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557807y1g  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557807y1g  [0;39m 选中座位
2023-08-05 22:09:17.933 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557807y1g  [0;39m 最终选座:[DailyTrainSeat [Hash = 1691952350, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:17.934 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.934 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: ConfirmOrder [Hash = 588297813, id=1687828124777189376, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:17, updateTime=2023-08-05 22:09:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:17.935 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557909knf  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:17.935 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557909knf  [0;39m ==> Parameters: 1687828124777189376(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:17.934(Timestamp), 2023-08-05 22:09:17.934(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:17.951 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557807y1g  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193302]
2023-08-05 22:09:17.952 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557807y1g  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193302
2023-08-05 22:09:17.952 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:17.952 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: DailyTrainSeat [Hash = 1888513750, id=1687827560341311488, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:17 CST 2023]
2023-08-05 22:09:17.952 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:17.953 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:17.952(Timestamp), 1687827560341311488(Long)
2023-08-05 22:09:17.966 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244557909knf  [0;39m <==    Updates: 1
2023-08-05 22:09:17.966 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:17.966 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.967 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@64372359
2023-08-05 22:09:17.967 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557909knf  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:17.967 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557909knf  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:17.983 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557909knf  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:17.984 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244557909knf  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 10, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:17.984 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244557909knf  [0;39m <==      Total: 1
2023-08-05 22:09:17.984 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:17.985 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244557909knf  [0;39m 查出余票记录:DailyTrainTicket [Hash = 649277404, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=10, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:17.985 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244557909knf  [0;39m 本次购票没有选座
2023-08-05 22:09:17.985 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:17.985 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@302cc20f
2023-08-05 22:09:17.986 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557909knf  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:17.986 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557909knf  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:18.001 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557909knf  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:18.002 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244557909knf  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:18.002 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244557909knf  [0;39m <==      Total: 1
2023-08-05 22:09:18.002 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:18.003 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244557909knf  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:18.003 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244557909knf  [0;39m 从车厢1选座
2023-08-05 22:09:18.003 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.003 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@332d03a4
2023-08-05 22:09:18.004 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557909knf  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:18.005 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557909knf  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:18.009 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124455800963w  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:18.009 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124455800963w  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:18.010 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124455800963w  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:18.011 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124455800963w  [0;39m ------------- 开始 -------------
2023-08-05 22:09:18.012 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124455800963w  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:18.012 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124455800963w  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:18.012 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124455800963w  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:18.012 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124455800963w  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:18.021 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:18.022 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:18.022 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:18.023 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:18.023 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:18.023 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:18.024 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.374
2023-08-05 22:09:18.025 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:18.025 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:18.025 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:18.026 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:18.026 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:18.027 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:18.028 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:18.028 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:18.029 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:18.029 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:18.030 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:18.030 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:18.030 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:18.031 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:18.031 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:18.032 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:18.033 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:18.033 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:18.033 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:18.034 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:18.034 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:18.035 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:18.035 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:18.035 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:18.036 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:18.036 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:18.036 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: ConfirmOrder [Hash = 581776294, id=1687828125200814080, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:18, updateTime=2023-08-05 22:09:18, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:18.036 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124455800963w  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:18.036 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244557909knf  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:18.037 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244557909knf  [0;39m <==      Total: 32
2023-08-05 22:09:18.037 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124455800963w  [0;39m ==> Parameters: 1687828125200814080(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:18.035(Timestamp), 2023-08-05 22:09:18.035(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:18.037 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244557909knf  [0;39m 车厢1的座位数:32
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.037 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244557909knf  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244557909knf  [0;39m 无选座
2023-08-05 22:09:18.038 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244557909knf  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:18.039 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244557909knf  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:18.039 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244557909knf  [0;39m 选中座位
2023-08-05 22:09:18.039 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244557909knf  [0;39m 最终选座:[DailyTrainSeat [Hash = 1513455868, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:18.057 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244557909knf  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193303]
2023-08-05 22:09:18.057 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244557909knf  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193303
2023-08-05 22:09:18.058 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.058 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: DailyTrainSeat [Hash = 1475416272, id=1687827560341311488, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023]
2023-08-05 22:09:18.058 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:18.058 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:18.058(Timestamp), 1687827560341311488(Long)
2023-08-05 22:09:18.062 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124455800963w  [0;39m <==    Updates: 1
2023-08-05 22:09:18.062 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:18.062 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:18.063 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557316emv  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:18.063 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2d9a224e
2023-08-05 22:09:18.063 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557316emv  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.063 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557316emv  [0;39m 参数值: ConfirmOrder [Hash = 958514249, id=1687828122319327232, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023, tickets=null]
2023-08-05 22:09:18.063 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:18.063 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124455800963w  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:18.064 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:18.063(Timestamp), 1687828122319327232(Long)
2023-08-05 22:09:18.064 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124455800963w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:18.077 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124455800963w  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:18.077 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124455800963w  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 10, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:18.078 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124455800963w  [0;39m <==      Total: 1
2023-08-05 22:09:18.078 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:18.078 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124455800963w  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1546881854, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=10, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:18.078 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m169124455800963w  [0;39m 本次购票没有选座
2023-08-05 22:09:18.079 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:18.079 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5f8b1a5b
2023-08-05 22:09:18.079 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124455800963w  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:18.079 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124455800963w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:18.092 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124455800963w  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:18.092 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124455800963w  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:18.093 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124455800963w  [0;39m <==      Total: 1
2023-08-05 22:09:18.093 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:18.093 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m169124455800963w  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:18.094 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m169124455800963w  [0;39m 从车厢1选座
2023-08-05 22:09:18.094 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.094 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557316emv  [0;39m <==    Updates: 1
2023-08-05 22:09:18.094 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@4d524845
2023-08-05 22:09:18.095 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557316emv  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.095 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557316emv  [0;39m transaction 192.168.0.102:8091:7278238012553193288 will be commit
2023-08-05 22:09:18.096 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124455800963w  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:18.097 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124455800963w  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:18.115 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244558115wi7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:18.116 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244558115wi7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:18.117 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244558115wi7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:18.119 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244558115wi7  [0;39m ------------- 开始 -------------
2023-08-05 22:09:18.119 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244558115wi7  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:18.120 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244558115wi7  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:18.120 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244558115wi7  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:18.121 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244558115wi7  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:18.140 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:18.140 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:18.141 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:18.142 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:18.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:18.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:18.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.374
2023-08-05 22:09:18.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:18.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:18.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:18.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:18.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:18.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:18.150 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:18.150 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:18.151 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:18.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:18.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:18.153 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:18.154 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:18.155 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:18.156 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:18.156 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:18.157 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:18.158 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:18.158 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:18.159 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:18.160 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:18.160 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:18.161 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:18.162 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:18.162 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:18.163 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124455800963w  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:18.163 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124455800963w  [0;39m <==      Total: 32
2023-08-05 22:09:18.164 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.164 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m169124455800963w  [0;39m 车厢1的座位数:32
2023-08-05 22:09:18.164 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.164 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.164 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.165 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124455800963w  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124455800963w  [0;39m 无选座
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m169124455800963w  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:18.166 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m169124455800963w  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:18.167 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m169124455800963w  [0;39m 选中座位
2023-08-05 22:09:18.167 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m169124455800963w  [0;39m 最终选座:[DailyTrainSeat [Hash = 170318476, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:18.168 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:18.168 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: ConfirmOrder [Hash = 784060118, id=1687828125758656512, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:18, updateTime=2023-08-05 22:09:18, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:18.169 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244558115wi7  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:18.170 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244558115wi7  [0;39m ==> Parameters: 1687828125758656512(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:18.168(Timestamp), 2023-08-05 22:09:18.168(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:18.185 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m169124455800963w  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193305]
2023-08-05 22:09:18.186 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m169124455800963w  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193305
2023-08-05 22:09:18.186 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.187 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: DailyTrainSeat [Hash = 1473839637, id=1687827560341311488, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023]
2023-08-05 22:09:18.188 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:18.188 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:18.186(Timestamp), 1687827560341311488(Long)
2023-08-05 22:09:18.189 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557316emv  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193288
2023-08-05 22:09:18.189 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557316emv  [0;39m [192.168.0.102:8091:7278238012553193288] commit status: Committed
2023-08-05 22:09:18.195 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244558115wi7  [0;39m <==    Updates: 1
2023-08-05 22:09:18.195 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:18.196 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:18.196 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@26b30bb3
2023-08-05 22:09:18.197 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244558115wi7  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:18.197 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244558115wi7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:18.202 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m <==    Updates: 1
2023-08-05 22:09:18.202 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557709t33  [0;39m <==    Updates: 3
2023-08-05 22:09:18.203 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.203 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557410v3f  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:18.203 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557410v3f  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:18.204 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557410v3f  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:18.204 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557410v3f  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:18.211 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244558115wi7  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:18.212 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 9, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:18.213 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244558115wi7  [0;39m <==      Total: 1
2023-08-05 22:09:18.213 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:18.213 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244558115wi7  [0;39m 查出余票记录:DailyTrainTicket [Hash = 342492546, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=9, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:18.214 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244558115wi7  [0;39m 本次购票没有选座
2023-08-05 22:09:18.214 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:18.214 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@6851b8d2
2023-08-05 22:09:18.215 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244558115wi7  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:18.216 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244558115wi7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:18.222 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557316emv  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:18.222 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557316emv  [0;39m ------------- 结束 耗时：904 ms -------------
2023-08-05 22:09:18.228 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244558115wi7  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:18.229 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:18.230 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244558115wi7  [0;39m <==      Total: 1
2023-08-05 22:09:18.231 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:18.231 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244558115wi7  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:18.231 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244558115wi7  [0;39m 从车厢1选座
2023-08-05 22:09:18.231 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.231 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@754aee21
2023-08-05 22:09:18.232 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244558115wi7  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:18.233 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244558115wi7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:18.246 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:18.247 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:18.248 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:18.248 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:18.249 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:18.250 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:18.251 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.516
2023-08-05 22:09:18.251 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 00, 2023-08-05 22:07:03.362, 2023-08-05 22:07:03.362
2023-08-05 22:09:18.252 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:18.252 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:18.253 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:18.254 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:18.255 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:18.255 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:18.256 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:18.257 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:18.258 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:18.258 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:18.259 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:18.260 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:18.260 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:18.261 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:18.262 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:18.263 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:18.264 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:18.264 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:18.265 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:18.266 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:18.267 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:18.268 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:18.269 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:18.269 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:18.270 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244558115wi7  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:18.271 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244558115wi7  [0;39m <==      Total: 32
2023-08-05 22:09:18.271 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:18.271 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244558115wi7  [0;39m 车厢1的座位数:32
2023-08-05 22:09:18.271 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.272 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244558115wi7  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:18.273 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244558115wi7  [0;39m 无选座
2023-08-05 22:09:18.274 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244558115wi7  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:18.274 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244558115wi7  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:18.274 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244558115wi7  [0;39m 选中座位
2023-08-05 22:09:18.274 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244558115wi7  [0;39m 最终选座:[DailyTrainSeat [Hash = 1413089996, id=1687827560341311488, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=D, seatType=1, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:18.293 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244558115wi7  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193306]
2023-08-05 22:09:18.293 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244558115wi7  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193306
2023-08-05 22:09:18.294 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.294 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: DailyTrainSeat [Hash = 212131515, id=1687827560341311488, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023]
2023-08-05 22:09:18.294 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:18.295 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:18.294(Timestamp), 1687827560341311488(Long)
2023-08-05 22:09:18.426 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557709t33  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:18.427 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557709t33  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.427 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557709t33  [0;39m 参数值: ConfirmOrder [Hash = 1973458005, id=1687828123997048832, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023, tickets=null]
2023-08-05 22:09:18.428 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:18.428 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:18.427(Timestamp), 1687828123997048832(Long)
2023-08-05 22:09:18.453 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557709t33  [0;39m <==    Updates: 1
2023-08-05 22:09:18.453 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557709t33  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.454 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557709t33  [0;39m transaction 192.168.0.102:8091:7278238012553193299 will be commit
2023-08-05 22:09:18.562 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557709t33  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193299
2023-08-05 22:09:18.562 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557709t33  [0;39m [192.168.0.102:8091:7278238012553193299] commit status: Committed
2023-08-05 22:09:18.575 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m <==    Updates: 1
2023-08-05 22:09:18.576 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.576 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557807y1g  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:18.576 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557410v3f  [0;39m <==    Updates: 3
2023-08-05 22:09:18.576 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557807y1g  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:18.577 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557807y1g  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:18.577 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557807y1g  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:18.587 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557709t33  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:18.588 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557709t33  [0;39m ------------- 结束 耗时：877 ms -------------
2023-08-05 22:09:18.796 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557410v3f  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:18.797 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557410v3f  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.797 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557410v3f  [0;39m 参数值: ConfirmOrder [Hash = 1993512560, id=1687828122688425984, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:18 CST 2023, tickets=null]
2023-08-05 22:09:18.797 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:18.798 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:18.797(Timestamp), 1687828122688425984(Long)
2023-08-05 22:09:18.822 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557410v3f  [0;39m <==    Updates: 1
2023-08-05 22:09:18.823 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557410v3f  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:18.823 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557410v3f  [0;39m transaction 192.168.0.102:8091:7278238012553193289 will be commit
2023-08-05 22:09:18.932 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557410v3f  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193289
2023-08-05 22:09:18.933 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557410v3f  [0;39m [192.168.0.102:8091:7278238012553193289] commit status: Committed
2023-08-05 22:09:18.947 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557807y1g  [0;39m <==    Updates: 3
2023-08-05 22:09:18.952 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m <==    Updates: 1
2023-08-05 22:09:18.954 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:18.955 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557508bhz  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:18.956 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557508bhz  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:18.957 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557508bhz  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:18.959 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557508bhz  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:18.961 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557410v3f  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:18.962 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557410v3f  [0;39m ------------- 结束 耗时：1550 ms -------------
2023-08-05 22:09:19.180 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557807y1g  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:19.181 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557807y1g  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.181 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557807y1g  [0;39m 参数值: ConfirmOrder [Hash = 590867872, id=1687828124378730496, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:19 CST 2023, tickets=null]
2023-08-05 22:09:19.181 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:19.181 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:19.18(Timestamp), 1687828124378730496(Long)
2023-08-05 22:09:19.205 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557807y1g  [0;39m <==    Updates: 1
2023-08-05 22:09:19.205 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557807y1g  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.206 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557807y1g  [0;39m transaction 192.168.0.102:8091:7278238012553193302 will be commit
2023-08-05 22:09:19.274 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557807y1g  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193302
2023-08-05 22:09:19.274 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557807y1g  [0;39m [192.168.0.102:8091:7278238012553193302] commit status: Committed
2023-08-05 22:09:19.288 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557508bhz  [0;39m <==    Updates: 3
2023-08-05 22:09:19.295 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m <==    Updates: 1
2023-08-05 22:09:19.295 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:19.295 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557909knf  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:19.295 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557909knf  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:19.296 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557909knf  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:19.296 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557909knf  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:19.299 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557807y1g  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:19.299 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557807y1g  [0;39m ------------- 结束 耗时：1490 ms -------------
2023-08-05 22:09:19.522 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557508bhz  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:19.523 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557508bhz  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.523 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557508bhz  [0;39m 参数值: ConfirmOrder [Hash = 1014171637, id=1687828123103662080, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:19 CST 2023, tickets=null]
2023-08-05 22:09:19.524 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:19.524 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:19.523(Timestamp), 1687828123103662080(Long)
2023-08-05 22:09:19.548 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557508bhz  [0;39m <==    Updates: 1
2023-08-05 22:09:19.549 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557508bhz  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.549 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557508bhz  [0;39m transaction 192.168.0.102:8091:7278238012553193292 will be commit
2023-08-05 22:09:19.617 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557508bhz  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193292
2023-08-05 22:09:19.618 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557508bhz  [0;39m [192.168.0.102:8091:7278238012553193292] commit status: Committed
2023-08-05 22:09:19.632 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m <==    Updates: 1
2023-08-05 22:09:19.632 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:19.632 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244557610gpx  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:19.633 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244557610gpx  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:19.633 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557610gpx  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:19.633 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557610gpx  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:19.635 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557909knf  [0;39m <==    Updates: 3
2023-08-05 22:09:19.643 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557508bhz  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:19.643 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557508bhz  [0;39m ------------- 结束 耗时：2134 ms -------------
2023-08-05 22:09:19.830 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557909knf  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:19.831 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557909knf  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.831 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557909knf  [0;39m 参数值: ConfirmOrder [Hash = 1501109344, id=1687828124777189376, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:19 CST 2023, tickets=null]
2023-08-05 22:09:19.832 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:19.833 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:19.831(Timestamp), 1687828124777189376(Long)
2023-08-05 22:09:19.864 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557909knf  [0;39m <==    Updates: 1
2023-08-05 22:09:19.864 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557909knf  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:19.865 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557909knf  [0;39m transaction 192.168.0.102:8091:7278238012553193303 will be commit
2023-08-05 22:09:19.936 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557909knf  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193303
2023-08-05 22:09:19.936 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557909knf  [0;39m [192.168.0.102:8091:7278238012553193303] commit status: Committed
2023-08-05 22:09:19.950 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m <==    Updates: 1
2023-08-05 22:09:19.950 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244557610gpx  [0;39m <==    Updates: 3
2023-08-05 22:09:19.951 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:19.951 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m169124455800963w  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:19.952 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m169124455800963w  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:19.953 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124455800963w  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:19.953 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124455800963w  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:19.970 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557909knf  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:19.971 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557909knf  [0;39m ------------- 结束 耗时：2055 ms -------------
2023-08-05 22:09:20.206 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244557610gpx  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:20.206 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244557610gpx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.207 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244557610gpx  [0;39m 参数值: ConfirmOrder [Hash = 1896988061, id=1687828123535675392, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:20 CST 2023, tickets=null]
2023-08-05 22:09:20.207 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:20.207 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:20.206(Timestamp), 1687828123535675392(Long)
2023-08-05 22:09:20.233 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244557610gpx  [0;39m <==    Updates: 1
2023-08-05 22:09:20.233 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244557610gpx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.233 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244557610gpx  [0;39m transaction 192.168.0.102:8091:7278238012553193297 will be commit
2023-08-05 22:09:20.298 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244557610gpx  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193297
2023-08-05 22:09:20.299 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244557610gpx  [0;39m [192.168.0.102:8091:7278238012553193297] commit status: Committed
2023-08-05 22:09:20.314 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124455800963w  [0;39m <==    Updates: 3
2023-08-05 22:09:20.355 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244557610gpx  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:20.355 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244557610gpx  [0;39m ------------- 结束 耗时：2744 ms -------------
2023-08-05 22:09:20.555 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m169124455800963w  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:20.556 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124455800963w  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.556 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124455800963w  [0;39m 参数值: ConfirmOrder [Hash = 290537697, id=1687828125200814080, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:20 CST 2023, tickets=null]
2023-08-05 22:09:20.557 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:20.558 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:20.556(Timestamp), 1687828125200814080(Long)
2023-08-05 22:09:20.589 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124455800963w  [0;39m <==    Updates: 1
2023-08-05 22:09:20.590 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124455800963w  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.590 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m169124455800963w  [0;39m transaction 192.168.0.102:8091:7278238012553193305 will be commit
2023-08-05 22:09:20.659 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m169124455800963w  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193305
2023-08-05 22:09:20.660 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m169124455800963w  [0;39m [192.168.0.102:8091:7278238012553193305] commit status: Committed
2023-08-05 22:09:20.675 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m <==    Updates: 1
2023-08-05 22:09:20.675 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:20.676 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244558115wi7  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:20.676 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244558115wi7  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:20.677 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244558115wi7  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:20.677 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244558115wi7  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:20.686 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124455800963w  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:20.687 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124455800963w  [0;39m ------------- 结束 耗时：2676 ms -------------
2023-08-05 22:09:20.704 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244558115wi7  [0;39m <==    Updates: 3
2023-08-05 22:09:20.919 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244558115wi7  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:20.920 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244558115wi7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.921 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244558115wi7  [0;39m 参数值: ConfirmOrder [Hash = 1982139355, id=1687828125758656512, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:20 CST 2023, tickets=null]
2023-08-05 22:09:20.922 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:20.924 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:20.92(Timestamp), 1687828125758656512(Long)
2023-08-05 22:09:20.951 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244558115wi7  [0;39m <==    Updates: 1
2023-08-05 22:09:20.952 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244558115wi7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:20.952 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244558115wi7  [0;39m transaction 192.168.0.102:8091:7278238012553193306 will be commit
2023-08-05 22:09:21.017 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244558115wi7  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193306
2023-08-05 22:09:21.018 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244558115wi7  [0;39m [192.168.0.102:8091:7278238012553193306] commit status: Committed
2023-08-05 22:09:21.043 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244558115wi7  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:21.043 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244558115wi7  [0;39m ------------- 结束 耗时：2924 ms -------------
2023-08-05 22:09:56.847 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124459684729i  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:56.848 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124459684729i  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:56.849 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124459684729i  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:56.850 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124459684729i  [0;39m ------------- 开始 -------------
2023-08-05 22:09:56.850 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124459684729i  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:56.851 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124459684729i  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:56.851 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124459684729i  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:56.851 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124459684729i  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:56.885 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:56.885 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: ConfirmOrder [Hash = 2012365551, id=1687828288149524480, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:56, updateTime=2023-08-05 22:09:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:56.885 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124459684729i  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:56.886 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124459684729i  [0;39m ==> Parameters: 1687828288149524480(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:56.885(Timestamp), 2023-08-05 22:09:56.885(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:56.917 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124459684729i  [0;39m <==    Updates: 1
2023-08-05 22:09:56.917 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:56.917 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:56.917 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@60f5bdb7
2023-08-05 22:09:56.918 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124459684729i  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:56.918 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124459684729i  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:56.937 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124459684729i  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:56.937 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124459684729i  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:56.938 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124459684729i  [0;39m <==      Total: 1
2023-08-05 22:09:56.938 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:56.938 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124459684729i  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1329867591, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:56.938 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m169124459684729i  [0;39m 本次购票没有选座
2023-08-05 22:09:56.939 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:56.939 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4fdda0bc
2023-08-05 22:09:56.939 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124459684729i  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:56.940 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124459684729i  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:56.955 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124459684729i  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:56.955 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m169124459684729i  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:56.957 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m169124459684729i  [0;39m <==      Total: 1
2023-08-05 22:09:56.957 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:56.957 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m169124459684729i  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:56.957 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m169124459684729i  [0;39m 从车厢1选座
2023-08-05 22:09:56.957 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:56.957 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2c20ac46
2023-08-05 22:09:56.958 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124459684729i  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:56.958 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124459684729i  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:56.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:56.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:56.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:56.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:56.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:56.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:56.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.766
2023-08-05 22:09:56.979 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 01, 2023-08-05 22:07:03.362, 2023-08-05 22:09:18.294
2023-08-05 22:09:56.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:56.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:56.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:56.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:56.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:56.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:56.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:56.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:56.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:56.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:56.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:56.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:56.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:56.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:56.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:56.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:56.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:56.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:56.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:56.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:56.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:56.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:56.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:56.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:56.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m169124459684729i  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:56.990 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m169124459684729i  [0;39m <==      Total: 32
2023-08-05 22:09:56.991 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:56.991 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m169124459684729i  [0;39m 车厢1的座位数:32
2023-08-05 22:09:56.991 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.991 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.991 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.991 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m169124459684729i  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:56.992 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m169124459684729i  [0;39m 无选座
2023-08-05 22:09:56.993 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m169124459684729i  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:56.993 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m169124459684729i  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:56.993 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m169124459684729i  [0;39m 选中座位
2023-08-05 22:09:56.993 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m169124459684729i  [0;39m 最终选座:[DailyTrainSeat [Hash = 1621763120, id=1687827560488112128, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=F, seatType=1, carriageSeatIndex=8, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:57.021 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m169124459684729i  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193353]
2023-08-05 22:09:57.021 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m169124459684729i  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193353
2023-08-05 22:09:57.022 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:57.022 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: DailyTrainSeat [Hash = 667032524, id=1687827560488112128, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:57 CST 2023]
2023-08-05 22:09:57.022 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:57.023 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:57.022(Timestamp), 1687827560488112128(Long)
2023-08-05 22:09:57.055 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m <==    Updates: 1
2023-08-05 22:09:57.056 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:57.056 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m169124459684729i  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:57.056 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m169124459684729i  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:57.057 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124459684729i  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:57.057 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124459684729i  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:57.091 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m169124459684729i  [0;39m <==    Updates: 3
2023-08-05 22:09:57.178 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244597178a7s  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:57.178 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244597178a7s  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:57.178 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244597178a7s  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:57.179 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244597178a7s  [0;39m ------------- 开始 -------------
2023-08-05 22:09:57.179 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244597178a7s  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:57.179 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244597178a7s  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:57.179 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244597178a7s  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:57.180 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244597178a7s  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:57.209 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:57.209 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: ConfirmOrder [Hash = 2015996728, id=1687828289508478976, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:57, updateTime=2023-08-05 22:09:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:57.210 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244597178a7s  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:57.210 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244597178a7s  [0;39m ==> Parameters: 1687828289508478976(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:57.209(Timestamp), 2023-08-05 22:09:57.209(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:57.240 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244597178a7s  [0;39m <==    Updates: 1
2023-08-05 22:09:57.241 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:57.241 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:57.241 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1633faa6
2023-08-05 22:09:57.242 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244597178a7s  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:57.243 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244597178a7s  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:57.280 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244597178a7s  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:57.282 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:57.284 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244597178a7s  [0;39m <==      Total: 1
2023-08-05 22:09:57.285 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:57.286 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244597178a7s  [0;39m 查出余票记录:DailyTrainTicket [Hash = 633779588, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:57.288 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244597178a7s  [0;39m 本次购票没有选座
2023-08-05 22:09:57.288 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:57.288 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@67c0be44
2023-08-05 22:09:57.290 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244597178a7s  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:09:57.292 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244597178a7s  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(String)
2023-08-05 22:09:57.311 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244597178a7s  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:09:57.312 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827558034444288, 2023-08-05, 01, 1, 1, 32, 8, 4, 2023-08-05 22:07:02.811, 2023-08-05 22:07:02.811
2023-08-05 22:09:57.312 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244597178a7s  [0;39m <==      Total: 1
2023-08-05 22:09:57.313 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:09:57.313 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244597178a7s  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:09:57.313 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244597178a7s  [0;39m 从车厢1选座
2023-08-05 22:09:57.314 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:57.314 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7a54974d
2023-08-05 22:09:57.315 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244597178a7s  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:09:57.315 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244597178a7s  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 1(Integer)
2023-08-05 22:09:57.329 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m169124459684729i  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:57.330 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124459684729i  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:57.330 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124459684729i  [0;39m 参数值: ConfirmOrder [Hash = 1862431290, id=1687828288149524480, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:57 CST 2023, tickets=null]
2023-08-05 22:09:57.330 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:57.331 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:57.33(Timestamp), 1687828288149524480(Long)
2023-08-05 22:09:57.332 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:09:57.332 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827559288541184, 2023-08-05, 01, 1, 01, A, 1, 1, 01, 2023-08-05 22:07:03.109, 2023-08-05 22:08:02.246
2023-08-05 22:09:57.333 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827559447924736, 2023-08-05, 01, 1, 01, C, 1, 2, 01, 2023-08-05 22:07:03.149, 2023-08-05 22:08:51.577
2023-08-05 22:09:57.334 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827559590531072, 2023-08-05, 01, 1, 01, D, 1, 3, 01, 2023-08-05 22:07:03.183, 2023-08-05 22:08:52.263
2023-08-05 22:09:57.335 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827559741526016, 2023-08-05, 01, 1, 01, F, 1, 4, 01, 2023-08-05 22:07:03.219, 2023-08-05 22:09:06.412
2023-08-05 22:09:57.335 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560043515904, 2023-08-05, 01, 1, 02, A, 1, 5, 01, 2023-08-05 22:07:03.290, 2023-08-05 22:09:06.850
2023-08-05 22:09:57.336 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560186122240, 2023-08-05, 01, 1, 02, C, 1, 6, 01, 2023-08-05 22:07:03.325, 2023-08-05 22:09:17.766
2023-08-05 22:09:57.337 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560341311488, 2023-08-05, 01, 1, 02, D, 1, 7, 01, 2023-08-05 22:07:03.362, 2023-08-05 22:09:18.294
2023-08-05 22:09:57.338 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560488112128, 2023-08-05, 01, 1, 02, F, 1, 8, 00, 2023-08-05 22:07:03.397, 2023-08-05 22:07:03.397
2023-08-05 22:09:57.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560639107072, 2023-08-05, 01, 1, 03, A, 1, 9, 00, 2023-08-05 22:07:03.432, 2023-08-05 22:07:03.432
2023-08-05 22:09:57.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560802684928, 2023-08-05, 01, 1, 03, C, 1, 10, 00, 2023-08-05 22:07:03.472, 2023-08-05 22:07:03.472
2023-08-05 22:09:57.340 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827560966262784, 2023-08-05, 01, 1, 03, D, 1, 11, 00, 2023-08-05 22:07:03.511, 2023-08-05 22:07:03.511
2023-08-05 22:09:57.341 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827561134034944, 2023-08-05, 01, 1, 03, F, 1, 12, 00, 2023-08-05 22:07:03.550, 2023-08-05 22:07:03.550
2023-08-05 22:09:57.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827561297612800, 2023-08-05, 01, 1, 04, A, 1, 13, 00, 2023-08-05 22:07:03.590, 2023-08-05 22:07:03.590
2023-08-05 22:09:57.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827561566048256, 2023-08-05, 01, 1, 04, C, 1, 14, 00, 2023-08-05 22:07:03.653, 2023-08-05 22:07:03.653
2023-08-05 22:09:57.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827561725431808, 2023-08-05, 01, 1, 04, D, 1, 15, 00, 2023-08-05 22:07:03.691, 2023-08-05 22:07:03.691
2023-08-05 22:09:57.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827561960312832, 2023-08-05, 01, 1, 04, F, 1, 16, 00, 2023-08-05 22:07:03.737, 2023-08-05 22:07:03.737
2023-08-05 22:09:57.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562174222336, 2023-08-05, 01, 1, 05, A, 1, 17, 00, 2023-08-05 22:07:03.799, 2023-08-05 22:07:03.799
2023-08-05 22:09:57.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562333605888, 2023-08-05, 01, 1, 05, C, 1, 18, 00, 2023-08-05 22:07:03.836, 2023-08-05 22:07:03.836
2023-08-05 22:09:57.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562488795136, 2023-08-05, 01, 1, 05, D, 1, 19, 00, 2023-08-05 22:07:03.874, 2023-08-05 22:07:03.874
2023-08-05 22:09:57.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562656567296, 2023-08-05, 01, 1, 05, F, 1, 20, 00, 2023-08-05 22:07:03.914, 2023-08-05 22:07:03.914
2023-08-05 22:09:57.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562794979328, 2023-08-05, 01, 1, 06, A, 1, 21, 00, 2023-08-05 22:07:03.947, 2023-08-05 22:07:03.947
2023-08-05 22:09:57.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827562941779968, 2023-08-05, 01, 1, 06, C, 1, 22, 00, 2023-08-05 22:07:03.982, 2023-08-05 22:07:03.982
2023-08-05 22:09:57.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563088580608, 2023-08-05, 01, 1, 06, D, 1, 23, 00, 2023-08-05 22:07:04.017, 2023-08-05 22:07:04.017
2023-08-05 22:09:57.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563252158464, 2023-08-05, 01, 1, 06, F, 1, 24, 00, 2023-08-05 22:07:04.056, 2023-08-05 22:07:04.056
2023-08-05 22:09:57.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563394764800, 2023-08-05, 01, 1, 07, A, 1, 25, 00, 2023-08-05 22:07:04.090, 2023-08-05 22:07:04.090
2023-08-05 22:09:57.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563533176832, 2023-08-05, 01, 1, 07, C, 1, 26, 00, 2023-08-05 22:07:04.123, 2023-08-05 22:07:04.123
2023-08-05 22:09:57.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563679977472, 2023-08-05, 01, 1, 07, D, 1, 27, 00, 2023-08-05 22:07:04.157, 2023-08-05 22:07:04.157
2023-08-05 22:09:57.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563826778112, 2023-08-05, 01, 1, 07, F, 1, 28, 00, 2023-08-05 22:07:04.193, 2023-08-05 22:07:04.193
2023-08-05 22:09:57.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827563969384448, 2023-08-05, 01, 1, 08, A, 1, 29, 00, 2023-08-05 22:07:04.227, 2023-08-05 22:07:04.227
2023-08-05 22:09:57.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827564111990784, 2023-08-05, 01, 1, 08, C, 1, 30, 00, 2023-08-05 22:07:04.261, 2023-08-05 22:07:04.261
2023-08-05 22:09:57.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827564262985728, 2023-08-05, 01, 1, 08, D, 1, 31, 00, 2023-08-05 22:07:04.296, 2023-08-05 22:07:04.296
2023-08-05 22:09:57.356 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244597178a7s  [0;39m <==        Row: 1687827564443340800, 2023-08-05, 01, 1, 08, F, 1, 32, 00, 2023-08-05 22:07:04.339, 2023-08-05 22:07:04.339
2023-08-05 22:09:57.357 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244597178a7s  [0;39m <==      Total: 32
2023-08-05 22:09:57.357 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:09:57.358 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244597178a7s  [0;39m 车厢1的座位数:32
2023-08-05 22:09:57.358 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.358 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.358 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.358 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.359 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244597178a7s  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244597178a7s  [0;39m 无选座
2023-08-05 22:09:57.360 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244597178a7s  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:09:57.361 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244597178a7s  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:09:57.361 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244597178a7s  [0;39m 选中座位
2023-08-05 22:09:57.361 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244597178a7s  [0;39m 最终选座:[DailyTrainSeat [Hash = 150918809, id=1687827560488112128, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=1, row=02, col=F, seatType=1, carriageSeatIndex=8, sell=01, createTime=Sat Aug 05 22:07:03 CST 2023, updateTime=Sat Aug 05 22:07:03 CST 2023]]
2023-08-05 22:09:57.364 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m169124459684729i  [0;39m <==    Updates: 1
2023-08-05 22:09:57.365 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124459684729i  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:57.365 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m169124459684729i  [0;39m transaction 192.168.0.102:8091:7278238012553193353 will be commit
2023-08-05 22:09:57.392 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244597178a7s  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193356]
2023-08-05 22:09:57.392 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244597178a7s  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193356
2023-08-05 22:09:57.392 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:57.393 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: DailyTrainSeat [Hash = 439713864, id=1687827560488112128, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:09:57 CST 2023]
2023-08-05 22:09:57.393 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:09:57.393 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m ==> Parameters: 01(String), 2023-08-05 22:09:57.392(Timestamp), 1687827560488112128(Long)
2023-08-05 22:09:57.420 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m169124459684729i  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193353
2023-08-05 22:09:57.421 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m169124459684729i  [0;39m [192.168.0.102:8091:7278238012553193353] commit status: Committed
2023-08-05 22:09:57.453 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m <==    Updates: 1
2023-08-05 22:09:57.453 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:09:57.453 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244597178a7s  [0;39m 影响出发站区间:0-1
2023-08-05 22:09:57.453 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244597178a7s  [0;39m 影响到达站区间:0-2
2023-08-05 22:09:57.454 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244597178a7s  [0;39m ==>  Preparing: update daily_train_ticket set ydz = ydz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:09:57.454 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244597178a7s  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:09:57.468 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124459684729i  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:57.469 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124459684729i  [0;39m ------------- 结束 耗时：619 ms -------------
2023-08-05 22:09:57.483 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244597178a7s  [0;39m <==    Updates: 3
2023-08-05 22:09:57.512 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912445975125li  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:09:57.512 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912445975125li  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:57.512 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912445975125li  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:09:57.513 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912445975125li  [0;39m ------------- 开始 -------------
2023-08-05 22:09:57.514 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912445975125li  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:09:57.515 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912445975125li  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:09:57.515 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912445975125li  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:09:57.515 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912445975125li  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:09:57.539 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445975125li  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:57.540 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445975125li  [0;39m 参数值: ConfirmOrder [Hash = 1385071779, id=1687828290892599296, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:09:57, updateTime=2023-08-05 22:09:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:09:57.540 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445975125li  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:09:57.541 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445975125li  [0;39m ==> Parameters: 1687828290892599296(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:09:57.539(Timestamp), 2023-08-05 22:09:57.539(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:09:57.565 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912445975125li  [0;39m <==    Updates: 1
2023-08-05 22:09:57.566 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445975125li  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:09:57.566 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912445975125li  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:57.566 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912445975125li  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5bebe992
2023-08-05 22:09:57.567 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445975125li  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:09:57.567 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445975125li  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:09:57.581 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445975125li  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:09:57.581 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912445975125li  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, 0, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:09:57.582 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912445975125li  [0;39m <==      Total: 1
2023-08-05 22:09:57.582 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912445975125li  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:09:57.582 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912445975125li  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1568368599, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=0, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:09:57.609 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912445975125li  [0;39m 业务异常:余票不足
2023-08-05 22:09:57.613 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912445975125li  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:09:57.677 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244597178a7s  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:09:57.677 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244597178a7s  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:57.677 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244597178a7s  [0;39m 参数值: ConfirmOrder [Hash = 567686255, id=1687828289508478976, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:09:57 CST 2023, tickets=null]
2023-08-05 22:09:57.678 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:09:57.678 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m ==> Parameters: S(String), 2023-08-05 22:09:57.677(Timestamp), 1687828289508478976(Long)
2023-08-05 22:09:57.710 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244597178a7s  [0;39m <==    Updates: 1
2023-08-05 22:09:57.710 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244597178a7s  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:09:57.710 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244597178a7s  [0;39m transaction 192.168.0.102:8091:7278238012553193356 will be commit
2023-08-05 22:09:57.803 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244597178a7s  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193356
2023-08-05 22:09:57.803 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244597178a7s  [0;39m [192.168.0.102:8091:7278238012553193356] commit status: Committed
2023-08-05 22:09:57.838 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244597178a7s  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:09:57.838 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244597178a7s  [0;39m ------------- 结束 耗时：659 ms -------------
2023-08-05 22:11:13.336 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244673336y7g  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:11:13.336 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244673336auk  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:11:13.336 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244673336y7g  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.336 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244673336auk  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.337 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244673336y7g  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.338 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244673336y7g  [0;39m ------------- 开始 -------------
2023-08-05 22:11:13.337 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244673336auk  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.338 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244673336y7g  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:11:13.338 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244673336y7g  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:11:13.338 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244673336y7g  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:11:13.338 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244673336y7g  [0;39m 请求参数: []
2023-08-05 22:11:13.339 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244673336y7g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:11:13.339 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244673336y7g  [0;39m 参数值: com.jktickets.domain.StationExample@3753b5ae
2023-08-05 22:11:13.351 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244673336auk  [0;39m ------------- 开始 -------------
2023-08-05 22:11:13.351 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244673336auk  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:11:13.351 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244673336auk  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:11:13.352 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244673336auk  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:11:13.352 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244673336auk  [0;39m 请求参数: [{"date":1691164800000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:11:13.357 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673336y7g  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:11:13.357 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673336y7g  [0;39m ==> Parameters: 
2023-08-05 22:11:13.367 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244673336auk  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:11:13.368 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244673336auk  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1aaec20c
2023-08-05 22:11:13.374 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673336y7g  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:11:13.375 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673336y7g  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:11:13.376 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673336y7g  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:11:13.377 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673336y7g  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:11:13.377 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673336y7g  [0;39m <==      Total: 3
2023-08-05 22:11:13.378 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244673336y7g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:11:13.379 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244673336y7g  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:11:13.379 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244673336y7g  [0;39m ------------- 结束 耗时：41 ms -------------
2023-08-05 22:11:13.391 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244673391rht  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:11:13.391 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244673336auk  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket WHERE (`date` = ? AND `start` = ? AND `end` = ?)
2023-08-05 22:11:13.392 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244673391rht  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.392 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244673391rht  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:13.392 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244673336auk  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String)
2023-08-05 22:11:13.392 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244673391rht  [0;39m ------------- 开始 -------------
2023-08-05 22:11:13.392 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244673391rht  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:11:13.393 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244673391rht  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:11:13.393 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244673391rht  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:11:13.393 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244673391rht  [0;39m 请求参数: []
2023-08-05 22:11:13.393 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244673391rht  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:11:13.393 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244673391rht  [0;39m 参数值: com.jktickets.domain.StationExample@593b60da
2023-08-05 22:11:13.404 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244673336auk  [0;39m <==    Columns: count(0)
2023-08-05 22:11:13.404 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244673336auk  [0;39m <==        Row: 1
2023-08-05 22:11:13.405 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244673336auk  [0;39m <==      Total: 1
2023-08-05 22:11:13.405 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244673336auk  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and `start` = ? and `end` = ? ) order by id desc LIMIT ?
2023-08-05 22:11:13.406 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244673336auk  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String), 10(Integer)
2023-08-05 22:11:13.406 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673391rht  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:11:13.407 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673391rht  [0;39m ==> Parameters: 
2023-08-05 22:11:13.420 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244673336auk  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:11:13.420 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673391rht  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:11:13.420 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673391rht  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:11:13.421 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244673336auk  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:11:13.422 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244673336auk  [0;39m <==      Total: 1
2023-08-05 22:11:13.422 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244673336auk  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:11:13.422 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691244673336auk  [0;39m 总行数：1
2023-08-05 22:11:13.423 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691244673336auk  [0;39m 总页数：1
2023-08-05 22:11:13.424 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673391rht  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:11:13.424 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244673391rht  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:11:13.425 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244673391rht  [0;39m <==      Total: 3
2023-08-05 22:11:13.425 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244673391rht  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:11:13.429 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244673391rht  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:11:13.429 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244673391rht  [0;39m ------------- 结束 耗时：37 ms -------------
2023-08-05 22:11:13.451 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244673336auk  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691244425455,"date":1691164800000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":-1,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:11:13.452 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244673336auk  [0;39m ------------- 结束 耗时：101 ms -------------
2023-08-05 22:11:19.898 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124467989821i  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:11:19.899 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124467989821i  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:19.899 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124467989821i  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:19.901 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124467989821i  [0;39m ------------- 开始 -------------
2023-08-05 22:11:19.902 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124467989821i  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:11:19.902 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124467989821i  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:11:19.902 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124467989821i  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:11:19.902 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124467989821i  [0;39m 请求参数: [{"date":1691164800000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:11:19.915 INFO  com.jktickets.aspect.LogAspect                    :94   [32m169124467989821i  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691244425455,"date":1691164800000,"edz":25,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":-1,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:11:19.915 INFO  com.jktickets.aspect.LogAspect                    :95   [32m169124467989821i  [0;39m ------------- 结束 耗时：14 ms -------------
2023-08-05 22:11:50.575 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244710575ljl  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:11:50.576 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244710575ljl  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:50.576 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244710575ljl  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:11:50.577 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244710575ljl  [0;39m ------------- 开始 -------------
2023-08-05 22:11:50.577 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244710575ljl  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:11:50.578 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244710575ljl  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:11:50.578 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244710575ljl  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:11:50.578 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244710575ljl  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:11:50.602 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244710575ljl  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:11:50.603 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244710575ljl  [0;39m 参数值: ConfirmOrder [Hash = 423003696, id=1687828765113192448, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:11:50, updateTime=2023-08-05 22:11:50, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:11:50.603 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244710575ljl  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:11:50.605 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244710575ljl  [0;39m ==> Parameters: 1687828765113192448(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:11:50.602(Timestamp), 2023-08-05 22:11:50.602(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:11:50.633 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244710575ljl  [0;39m <==    Updates: 1
2023-08-05 22:11:50.633 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244710575ljl  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:11:50.633 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244710575ljl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:11:50.635 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244710575ljl  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@44617dd3
2023-08-05 22:11:50.635 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244710575ljl  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:11:50.635 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244710575ljl  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:11:50.648 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244710575ljl  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:11:50.649 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244710575ljl  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:11:50.650 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244710575ljl  [0;39m <==      Total: 1
2023-08-05 22:11:50.650 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244710575ljl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:11:50.650 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244710575ljl  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1689631979, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:11:50.679 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244710575ljl  [0;39m 业务异常:余票不足
2023-08-05 22:11:50.680 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244710575ljl  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:05.562 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912447255628t6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:05.563 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912447255628t6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:05.563 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912447255628t6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:05.565 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912447255628t6  [0;39m ------------- 开始 -------------
2023-08-05 22:12:05.565 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912447255628t6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:05.565 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912447255628t6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:05.565 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912447255628t6  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:05.566 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912447255628t6  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:05.597 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447255628t6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:05.598 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447255628t6  [0;39m 参数值: ConfirmOrder [Hash = 1552728492, id=1687828828006780928, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:05, updateTime=2023-08-05 22:12:05, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:05.598 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447255628t6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:05.599 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447255628t6  [0;39m ==> Parameters: 1687828828006780928(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:05.597(Timestamp), 2023-08-05 22:12:05.597(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:05.630 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447255628t6  [0;39m <==    Updates: 1
2023-08-05 22:12:05.630 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447255628t6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:05.631 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447255628t6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:05.631 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447255628t6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2b651adf
2023-08-05 22:12:05.632 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447255628t6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:05.632 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447255628t6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:05.650 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447255628t6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:05.650 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447255628t6  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:05.651 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447255628t6  [0;39m <==      Total: 1
2023-08-05 22:12:05.651 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447255628t6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:05.652 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912447255628t6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 242292375, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:05.690 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912447255628t6  [0;39m 业务异常:余票不足
2023-08-05 22:12:05.691 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912447255628t6  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:06.069 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244726069s05  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:06.070 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244726069s05  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:06.070 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244726069s05  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:06.072 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244726069s05  [0;39m ------------- 开始 -------------
2023-08-05 22:12:06.072 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244726069s05  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:06.072 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244726069s05  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:06.072 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244726069s05  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:06.073 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244726069s05  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:06.097 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244726069s05  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:06.097 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244726069s05  [0;39m 参数值: ConfirmOrder [Hash = 171470858, id=1687828830103932928, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:06, updateTime=2023-08-05 22:12:06, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:06.098 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244726069s05  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:06.098 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244726069s05  [0;39m ==> Parameters: 1687828830103932928(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:06.097(Timestamp), 2023-08-05 22:12:06.097(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:06.122 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244726069s05  [0;39m <==    Updates: 1
2023-08-05 22:12:06.123 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244726069s05  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:06.123 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244726069s05  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:06.123 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244726069s05  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@6e1082ed
2023-08-05 22:12:06.124 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244726069s05  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:06.125 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244726069s05  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:06.139 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244726069s05  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:06.140 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244726069s05  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:06.141 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244726069s05  [0;39m <==      Total: 1
2023-08-05 22:12:06.142 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244726069s05  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:06.142 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244726069s05  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1638619277, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:06.166 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244726069s05  [0;39m 业务异常:余票不足
2023-08-05 22:12:06.168 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244726069s05  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:56.626 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124477662603u  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:56.627 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124477662603u  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.627 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124477662603u  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.628 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124477662603u  [0;39m ------------- 开始 -------------
2023-08-05 22:12:56.629 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124477662603u  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:56.629 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124477662603u  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:56.629 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124477662603u  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:56.629 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124477662603u  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:56.657 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124477662603u  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.657 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124477662603u  [0;39m 参数值: ConfirmOrder [Hash = 947238869, id=1687829042167943168, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:56, updateTime=2023-08-05 22:12:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:56.658 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124477662603u  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:56.658 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124477662603u  [0;39m ==> Parameters: 1687829042167943168(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:56.657(Timestamp), 2023-08-05 22:12:56.657(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:56.682 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124477662603u  [0;39m <==    Updates: 1
2023-08-05 22:12:56.682 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124477662603u  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.682 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124477662603u  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.682 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124477662603u  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3db752a0
2023-08-05 22:12:56.684 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124477662603u  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:56.684 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124477662603u  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:56.696 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124477662603u  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:56.697 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124477662603u  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:56.698 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124477662603u  [0;39m <==      Total: 1
2023-08-05 22:12:56.698 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124477662603u  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.699 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124477662603u  [0;39m 查出余票记录:DailyTrainTicket [Hash = 414524215, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:56.723 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m169124477662603u  [0;39m 业务异常:余票不足
2023-08-05 22:12:56.724 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m169124477662603u  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:56.724 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244776724ab9  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:56.726 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244776724ab9  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.727 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244776724ab9  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.728 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244776724ab9  [0;39m ------------- 开始 -------------
2023-08-05 22:12:56.729 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244776724ab9  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:56.729 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244776724ab9  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:56.729 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244776724ab9  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:56.730 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244776724ab9  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:56.760 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244776724ab9  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.760 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244776724ab9  [0;39m 参数值: ConfirmOrder [Hash = 961910837, id=1687829042599956480, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:56, updateTime=2023-08-05 22:12:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:56.761 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776724ab9  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:56.761 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776724ab9  [0;39m ==> Parameters: 1687829042599956480(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:56.76(Timestamp), 2023-08-05 22:12:56.76(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:56.792 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776724ab9  [0;39m <==    Updates: 1
2023-08-05 22:12:56.793 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244776724ab9  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.793 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244776724ab9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.793 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244776724ab9  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@735ffbe9
2023-08-05 22:12:56.794 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776724ab9  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:56.794 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776724ab9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:56.813 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244776724ab9  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:56.814 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244776724ab9  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:56.815 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776724ab9  [0;39m <==      Total: 1
2023-08-05 22:12:56.815 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244776724ab9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.815 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244776724ab9  [0;39m 查出余票记录:DailyTrainTicket [Hash = 630585297, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:56.825 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912447768256uz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:56.826 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912447768256uz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.826 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912447768256uz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.827 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912447768256uz  [0;39m ------------- 开始 -------------
2023-08-05 22:12:56.827 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912447768256uz  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:56.827 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912447768256uz  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:56.827 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912447768256uz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:56.828 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912447768256uz  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:56.863 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447768256uz  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.864 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447768256uz  [0;39m 参数值: ConfirmOrder [Hash = 1384916474, id=1687829043031969792, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:56, updateTime=2023-08-05 22:12:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:56.864 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447768256uz  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:56.865 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244776724ab9  [0;39m 业务异常:余票不足
2023-08-05 22:12:56.865 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447768256uz  [0;39m ==> Parameters: 1687829043031969792(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:56.863(Timestamp), 2023-08-05 22:12:56.863(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:56.866 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244776724ab9  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:56.890 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447768256uz  [0;39m <==    Updates: 1
2023-08-05 22:12:56.891 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447768256uz  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.891 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447768256uz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.891 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447768256uz  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@63269613
2023-08-05 22:12:56.891 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447768256uz  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:56.892 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447768256uz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:56.907 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447768256uz  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:56.907 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447768256uz  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:56.908 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447768256uz  [0;39m <==      Total: 1
2023-08-05 22:12:56.908 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447768256uz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.908 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912447768256uz  [0;39m 查出余票记录:DailyTrainTicket [Hash = 167468101, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:56.924 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244776924z73  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:56.924 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244776924z73  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.925 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244776924z73  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:56.927 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244776924z73  [0;39m ------------- 开始 -------------
2023-08-05 22:12:56.927 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244776924z73  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:56.927 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244776924z73  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:56.927 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244776924z73  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:56.928 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244776924z73  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:56.932 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912447768256uz  [0;39m 业务异常:余票不足
2023-08-05 22:12:56.933 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912447768256uz  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:56.957 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244776924z73  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.958 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244776924z73  [0;39m 参数值: ConfirmOrder [Hash = 1209882675, id=1687829043426234368, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:56, updateTime=2023-08-05 22:12:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:56.958 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776924z73  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:56.959 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776924z73  [0;39m ==> Parameters: 1687829043426234368(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:56.957(Timestamp), 2023-08-05 22:12:56.957(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:56.990 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244776924z73  [0;39m <==    Updates: 1
2023-08-05 22:12:56.990 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244776924z73  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:56.991 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244776924z73  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:56.991 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244776924z73  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7d0050db
2023-08-05 22:12:56.991 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776924z73  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:56.992 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776924z73  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.008 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244776924z73  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.009 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244776924z73  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.009 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244776924z73  [0;39m <==      Total: 1
2023-08-05 22:12:57.010 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244776924z73  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.010 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244776924z73  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1852496280, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.023 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244777023qe4  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.024 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244777023qe4  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.024 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244777023qe4  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.025 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244777023qe4  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.025 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244777023qe4  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.025 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244777023qe4  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.025 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244777023qe4  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.025 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244777023qe4  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.040 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244776924z73  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.041 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244776924z73  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.050 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777023qe4  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.050 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777023qe4  [0;39m 参数值: ConfirmOrder [Hash = 210134349, id=1687829043816304640, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.051 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777023qe4  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.051 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777023qe4  [0;39m ==> Parameters: 1687829043816304640(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.05(Timestamp), 2023-08-05 22:12:57.05(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.078 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777023qe4  [0;39m <==    Updates: 1
2023-08-05 22:12:57.078 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777023qe4  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.079 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777023qe4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.079 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777023qe4  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@32c1603e
2023-08-05 22:12:57.079 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777023qe4  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.080 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777023qe4  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.109 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777023qe4  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.110 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777023qe4  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.111 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777023qe4  [0;39m <==      Total: 1
2023-08-05 22:12:57.112 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777023qe4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.112 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244777023qe4  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1769788548, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.127 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244777127rc6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.128 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244777127rc6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.128 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244777127rc6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.129 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244777127rc6  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.130 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244777127rc6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.130 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244777127rc6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.130 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244777127rc6  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.131 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244777127rc6  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.160 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244777023qe4  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.161 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244777023qe4  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.170 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777127rc6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.171 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777127rc6  [0;39m 参数值: ConfirmOrder [Hash = 1187632234, id=1687829044319621120, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.172 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777127rc6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.173 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777127rc6  [0;39m ==> Parameters: 1687829044319621120(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.17(Timestamp), 2023-08-05 22:12:57.17(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.198 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777127rc6  [0;39m <==    Updates: 1
2023-08-05 22:12:57.199 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777127rc6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.199 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777127rc6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.200 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777127rc6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@25de8d3b
2023-08-05 22:12:57.201 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777127rc6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.201 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777127rc6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.215 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777127rc6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.217 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777127rc6  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.219 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777127rc6  [0;39m <==      Total: 1
2023-08-05 22:12:57.220 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777127rc6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.221 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244777127rc6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1346797517, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.235 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244777235zd0  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.237 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244777235zd0  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.237 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244777235zd0  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.239 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244777235zd0  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.240 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244777235zd0  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.240 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244777235zd0  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.241 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244777235zd0  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.241 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244777235zd0  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.249 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244777127rc6  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.250 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244777127rc6  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.265 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777235zd0  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.266 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777235zd0  [0;39m 参数值: ConfirmOrder [Hash = 1362556407, id=1687829044718080000, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.266 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777235zd0  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.267 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777235zd0  [0;39m ==> Parameters: 1687829044718080000(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.265(Timestamp), 2023-08-05 22:12:57.265(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.292 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777235zd0  [0;39m <==    Updates: 1
2023-08-05 22:12:57.292 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777235zd0  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.293 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777235zd0  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.293 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777235zd0  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5de7c2d
2023-08-05 22:12:57.294 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777235zd0  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.294 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777235zd0  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.307 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777235zd0  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.309 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777235zd0  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.309 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777235zd0  [0;39m <==      Total: 1
2023-08-05 22:12:57.310 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777235zd0  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.310 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244777235zd0  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1994993541, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.326 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912447773267e0  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.327 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912447773267e0  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.327 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912447773267e0  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.328 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912447773267e0  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.328 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912447773267e0  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.328 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912447773267e0  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.329 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912447773267e0  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.329 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912447773267e0  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.338 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244777235zd0  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.340 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244777235zd0  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.354 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447773267e0  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.355 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447773267e0  [0;39m 参数值: ConfirmOrder [Hash = 1347607376, id=1687829045091373056, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.356 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447773267e0  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.357 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447773267e0  [0;39m ==> Parameters: 1687829045091373056(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.354(Timestamp), 2023-08-05 22:12:57.354(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.384 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912447773267e0  [0;39m <==    Updates: 1
2023-08-05 22:12:57.385 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447773267e0  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.386 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912447773267e0  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.387 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912447773267e0  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@6492d950
2023-08-05 22:12:57.388 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447773267e0  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.389 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447773267e0  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.405 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447773267e0  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.407 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912447773267e0  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.408 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912447773267e0  [0;39m <==      Total: 1
2023-08-05 22:12:57.409 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912447773267e0  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.410 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912447773267e0  [0;39m 查出余票记录:DailyTrainTicket [Hash = 340742354, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.434 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244777434cl1  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.436 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244777434cl1  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.436 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244777434cl1  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.439 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244777434cl1  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.440 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244777434cl1  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.440 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244777434cl1  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.441 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244777434cl1  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.441 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244777434cl1  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.443 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912447773267e0  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.446 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912447773267e0  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.479 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777434cl1  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.480 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777434cl1  [0;39m 参数值: ConfirmOrder [Hash = 553291962, id=1687829045615661056, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.481 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777434cl1  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.483 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777434cl1  [0;39m ==> Parameters: 1687829045615661056(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.479(Timestamp), 2023-08-05 22:12:57.479(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.514 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777434cl1  [0;39m <==    Updates: 1
2023-08-05 22:12:57.515 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777434cl1  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.515 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777434cl1  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.516 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777434cl1  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@787452c4
2023-08-05 22:12:57.517 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777434cl1  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.517 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777434cl1  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.529 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244777529zpf  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:12:57.530 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244777529zpf  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.531 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244777529zpf  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:12:57.533 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244777529zpf  [0;39m ------------- 开始 -------------
2023-08-05 22:12:57.534 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244777529zpf  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:12:57.534 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244777529zpf  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:12:57.534 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244777529zpf  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:12:57.535 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777434cl1  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.535 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244777529zpf  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}],"trainCode":"01"}]
2023-08-05 22:12:57.536 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777434cl1  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.537 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777434cl1  [0;39m <==      Total: 1
2023-08-05 22:12:57.538 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777434cl1  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.538 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244777434cl1  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1725284844, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.561 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777529zpf  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.562 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777529zpf  [0;39m 参数值: ConfirmOrder [Hash = 1827517179, id=1687829045959593984, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:12:57, updateTime=2023-08-05 22:12:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}]]
2023-08-05 22:12:57.562 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777529zpf  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:12:57.563 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777529zpf  [0;39m ==> Parameters: 1687829045959593984(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:12:57.561(Timestamp), 2023-08-05 22:12:57.561(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"1"}](String)
2023-08-05 22:12:57.570 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244777434cl1  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.571 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244777434cl1  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:12:57.586 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244777529zpf  [0;39m <==    Updates: 1
2023-08-05 22:12:57.586 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777529zpf  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:12:57.587 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244777529zpf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.587 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244777529zpf  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@74e80f3a
2023-08-05 22:12:57.588 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777529zpf  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:12:57.588 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777529zpf  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:12:57.602 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777529zpf  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:12:57.603 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244777529zpf  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:12:57.603 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244777529zpf  [0;39m <==      Total: 1
2023-08-05 22:12:57.604 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244777529zpf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:12:57.604 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244777529zpf  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1144002108, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:12:57.628 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244777529zpf  [0;39m 业务异常:余票不足
2023-08-05 22:12:57.629 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244777529zpf  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:14:17.555 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244857555y66  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:17.556 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244857555y66  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:17.556 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244857555y66  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:17.557 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244857555y66  [0;39m ------------- 开始 -------------
2023-08-05 22:14:17.558 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244857555y66  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:17.558 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244857555y66  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:17.559 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244857555y66  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:17.559 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244857555y66  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:17.583 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:17.584 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: ConfirmOrder [Hash = 6516910, id=1687829381596188672, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:17, updateTime=2023-08-05 22:14:17, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:17.584 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244857555y66  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:17.584 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244857555y66  [0;39m ==> Parameters: 1687829381596188672(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:17.583(Timestamp), 2023-08-05 22:14:17.583(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:17.623 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244857555y66  [0;39m <==    Updates: 1
2023-08-05 22:14:17.623 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:17.624 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:17.624 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@78ec93ba
2023-08-05 22:14:17.624 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244857555y66  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:17.625 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244857555y66  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:17.640 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244857555y66  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:17.641 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244857555y66  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 25, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:17.641 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244857555y66  [0;39m <==      Total: 1
2023-08-05 22:14:17.642 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:17.642 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244857555y66  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1630827220, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=25, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:17.642 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244857555y66  [0;39m 本次购票没有选座
2023-08-05 22:14:17.642 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:17.642 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3081e021
2023-08-05 22:14:17.643 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244857555y66  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:17.643 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244857555y66  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:17.656 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244857555y66  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:17.656 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244857555y66  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:17.656 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244857555y66  [0;39m <==      Total: 1
2023-08-05 22:14:17.657 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:17.657 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244857555y66  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:17.657 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244857555y66  [0;39m 从车厢2选座
2023-08-05 22:14:17.657 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:17.657 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@44c5226e
2023-08-05 22:14:17.658 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244857555y66  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:17.658 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244857555y66  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:17.675 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:17.675 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 00, 2023-08-05 22:07:04.383, 2023-08-05 22:07:04.383
2023-08-05 22:14:17.676 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:17.676 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:17.676 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:17.677 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:17.677 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:17.678 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:17.678 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:17.679 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:17.679 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:17.680 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:17.681 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:17.681 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:17.682 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:17.682 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:17.683 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:17.683 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:17.683 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:17.684 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:17.684 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:17.684 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:17.685 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:17.685 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:17.686 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:17.687 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244857555y66  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:17.687 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244857555y66  [0;39m <==      Total: 25
2023-08-05 22:14:17.688 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:17.688 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244857555y66  [0;39m 车厢2的座位数:25
2023-08-05 22:14:17.688 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244857555y66  [0;39m 无选座
2023-08-05 22:14:17.689 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244857555y66  [0;39m 座位1在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:17.689 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244857555y66  [0;39m 座位1被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:17.689 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244857555y66  [0;39m 选中座位
2023-08-05 22:14:17.689 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244857555y66  [0;39m 最终选座:[DailyTrainSeat [Hash = 966406909, id=1687827564627890176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=A, seatType=2, carriageSeatIndex=1, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:17.711 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244857555y66  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193364]
2023-08-05 22:14:17.711 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244857555y66  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193364
2023-08-05 22:14:17.711 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:17.711 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: DailyTrainSeat [Hash = 1939536786, id=1687827564627890176, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:17 CST 2023]
2023-08-05 22:14:17.712 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:17.712 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:17.711(Timestamp), 1687827564627890176(Long)
2023-08-05 22:14:17.740 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m <==    Updates: 1
2023-08-05 22:14:17.740 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:17.740 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244857555y66  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:17.741 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244857555y66  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:17.741 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244857555y66  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:17.741 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244857555y66  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:17.779 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244857555y66  [0;39m <==    Updates: 3
2023-08-05 22:14:18.016 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244857555y66  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:18.016 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244857555y66  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:18.017 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244857555y66  [0;39m 参数值: ConfirmOrder [Hash = 841608504, id=1687829381596188672, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:18 CST 2023, tickets=null]
2023-08-05 22:14:18.017 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:18.017 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:18.016(Timestamp), 1687829381596188672(Long)
2023-08-05 22:14:18.055 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244857555y66  [0;39m <==    Updates: 1
2023-08-05 22:14:18.056 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244857555y66  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:18.056 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244857555y66  [0;39m transaction 192.168.0.102:8091:7278238012553193364 will be commit
2023-08-05 22:14:18.123 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244857555y66  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193364
2023-08-05 22:14:18.123 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244857555y66  [0;39m [192.168.0.102:8091:7278238012553193364] commit status: Committed
2023-08-05 22:14:18.149 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244857555y66  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:18.149 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244857555y66  [0;39m ------------- 结束 耗时：592 ms -------------
2023-08-05 22:14:56.139 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896139h7n  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.139 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896139h7n  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.140 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896139h7n  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.141 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896139h7n  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.142 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896139h7n  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.142 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896139h7n  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.142 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896139h7n  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.142 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896139h7n  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.171 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896171b8m  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.172 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896171b8m  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.172 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896171b8m  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.173 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896171b8m  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.174 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896171b8m  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.174 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896171b8m  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.174 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896171b8m  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.174 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896171b8m  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.202 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.203 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: ConfirmOrder [Hash = 452327955, id=1687829543576014848, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.203 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896139h7n  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.203 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896139h7n  [0;39m ==> Parameters: 1687829543576014848(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.202(Timestamp), 2023-08-05 22:14:56.202(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.205 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896205fx5  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.205 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896205fx5  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.205 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896205fx5  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.206 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896205fx5  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.206 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896205fx5  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.206 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896205fx5  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.206 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896205fx5  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.207 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896205fx5  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.211 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.212 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: ConfirmOrder [Hash = 953019344, id=1687829543613763584, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.212 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896171b8m  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.212 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896171b8m  [0;39m ==> Parameters: 1687829543613763584(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.211(Timestamp), 2023-08-05 22:14:56.211(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.229 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.230 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: ConfirmOrder [Hash = 1203088619, id=1687829543689261056, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.230 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896205fx5  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.231 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896205fx5  [0;39m ==> Parameters: 1687829543689261056(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.229(Timestamp), 2023-08-05 22:14:56.229(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.235 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896235fso  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.235 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896235fso  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.235 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896235fso  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.236 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896235fso  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.236 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896235fso  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.236 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896235fso  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.236 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896171b8m  [0;39m <==    Updates: 1
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896235fso  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.237 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896139h7n  [0;39m <==    Updates: 1
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896235fso  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7953b42a
2023-08-05 22:14:56.237 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4997ec6d
2023-08-05 22:14:56.238 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896139h7n  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.238 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896171b8m  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.238 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896139h7n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.238 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896171b8m  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.251 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896171b8m  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.252 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.252 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896171b8m  [0;39m <==      Total: 1
2023-08-05 22:14:56.253 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.253 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896171b8m  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1951271193, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.253 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896171b8m  [0;39m 本次购票没有选座
2023-08-05 22:14:56.253 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.253 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@37744c84
2023-08-05 22:14:56.254 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896171b8m  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.254 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896139h7n  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.254 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896171b8m  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.254 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.255 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896139h7n  [0;39m <==      Total: 1
2023-08-05 22:14:56.255 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.255 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896139h7n  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1740129025, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.256 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896139h7n  [0;39m 本次购票没有选座
2023-08-05 22:14:56.256 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.256 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3aaa5982
2023-08-05 22:14:56.257 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896139h7n  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.257 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896139h7n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.257 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896205fx5  [0;39m <==    Updates: 1
2023-08-05 22:14:56.258 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.258 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.258 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@16d4be55
2023-08-05 22:14:56.259 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896205fx5  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.259 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896205fx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.260 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.260 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: ConfirmOrder [Hash = 9976233, id=1687829543819284480, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.261 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896235fso  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.261 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896235fso  [0;39m ==> Parameters: 1687829543819284480(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.26(Timestamp), 2023-08-05 22:14:56.26(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.267 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896171b8m  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.267 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.267 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896171b8m  [0;39m <==      Total: 1
2023-08-05 22:14:56.268 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.268 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896171b8m  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.268 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896171b8m  [0;39m 从车厢2选座
2023-08-05 22:14:56.269 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.269 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@47fc57e8
2023-08-05 22:14:56.269 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896269lsg  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.269 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896171b8m  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.270 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896269lsg  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.270 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896269lsg  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.270 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896171b8m  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.271 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896269lsg  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.271 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896205fx5  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.272 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896269lsg  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.272 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896269lsg  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.272 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.273 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896269lsg  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.273 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896269lsg  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.273 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896205fx5  [0;39m <==      Total: 1
2023-08-05 22:14:56.273 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896139h7n  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.274 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.275 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.276 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896205fx5  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1191144893, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.276 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896205fx5  [0;39m 本次购票没有选座
2023-08-05 22:14:56.276 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896139h7n  [0;39m <==      Total: 1
2023-08-05 22:14:56.277 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.277 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.277 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5714b3c8
2023-08-05 22:14:56.277 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896139h7n  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.277 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896139h7n  [0;39m 从车厢2选座
2023-08-05 22:14:56.277 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.277 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@dff7357
2023-08-05 22:14:56.277 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896205fx5  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.278 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896205fx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.278 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896139h7n  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.279 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896139h7n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.284 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.285 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.286 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.286 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.287 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.287 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896235fso  [0;39m <==    Updates: 1
2023-08-05 22:14:56.288 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.288 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.288 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.288 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@744bf6d2
2023-08-05 22:14:56.288 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.289 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896235fso  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.289 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.289 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896235fso  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.289 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.290 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.290 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896205fx5  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.291 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.291 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.291 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896205fx5  [0;39m <==      Total: 1
2023-08-05 22:14:56.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.292 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.292 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.292 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896205fx5  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.292 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896205fx5  [0;39m 从车厢2选座
2023-08-05 22:14:56.293 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.293 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.293 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7c21b773
2023-08-05 22:14:56.294 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.294 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896205fx5  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.294 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.295 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896205fx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.295 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.295 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.296 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.296 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.297 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.297 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.298 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.298 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.299 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.299 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.300 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.300 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.301 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.301 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: ConfirmOrder [Hash = 231918352, id=1687829543991250944, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.301 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.301 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.302 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896269lsg  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.302 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896171b8m  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.302 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.303 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896171b8m  [0;39m <==      Total: 25
2023-08-05 22:14:56.303 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896269lsg  [0;39m ==> Parameters: 1687829543991250944(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.3(Timestamp), 2023-08-05 22:14:56.3(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.303 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.303 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.304 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896171b8m  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.304 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896171b8m  [0;39m 无选座
2023-08-05 22:14:56.304 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896235fso  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.305 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896171b8m  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.304 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.305 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896171b8m  [0;39m 无选座
2023-08-05 22:14:56.305 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896171b8m  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.305 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896235fso  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.305 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896171b8m  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.305 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.306 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896171b8m  [0;39m 选中座位
2023-08-05 22:14:56.306 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896171b8m  [0;39m 最终选座:[DailyTrainSeat [Hash = 1459350616, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.306 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896235fso  [0;39m <==      Total: 1
2023-08-05 22:14:56.306 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.306 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896306w58  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.307 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.307 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896235fso  [0;39m 查出余票记录:DailyTrainTicket [Hash = 544873704, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.307 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.307 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896306w58  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.307 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896235fso  [0;39m 本次购票没有选座
2023-08-05 22:14:56.308 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896306w58  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.308 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.308 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.308 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@67e6c772
2023-08-05 22:14:56.309 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896235fso  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.309 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.309 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896306w58  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.310 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896306w58  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.310 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896235fso  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.310 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896306w58  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.310 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896306w58  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.310 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.310 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896306w58  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.311 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.311 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.312 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.312 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.312 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.312 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.313 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.313 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.314 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.314 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.314 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.314 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.315 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.315 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.316 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.316 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.316 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.317 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.317 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.318 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896139h7n  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.318 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.318 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896139h7n  [0;39m <==      Total: 25
2023-08-05 22:14:56.319 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.319 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.319 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896139h7n  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.319 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896139h7n  [0;39m 无选座
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896139h7n  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.320 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896139h7n  [0;39m 无选座
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896139h7n  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896139h7n  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.320 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896139h7n  [0;39m 选中座位
2023-08-05 22:14:56.320 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896139h7n  [0;39m 最终选座:[DailyTrainSeat [Hash = 1081385846, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.320 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.321 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.322 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.323 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.323 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896235fso  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.323 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.324 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.324 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896235fso  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.324 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896235fso  [0;39m <==      Total: 1
2023-08-05 22:14:56.324 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.325 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.325 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896235fso  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.325 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896235fso  [0;39m 从车厢2选座
2023-08-05 22:14:56.326 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.325 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.326 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7c026fb
2023-08-05 22:14:56.326 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.326 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896235fso  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.327 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896171b8m  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193370]
2023-08-05 22:14:56.327 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896235fso  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.327 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896171b8m  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193370
2023-08-05 22:14:56.327 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.327 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896269lsg  [0;39m <==    Updates: 1
2023-08-05 22:14:56.328 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.328 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.328 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: DailyTrainSeat [Hash = 398265679, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.328 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.328 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.328 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.328 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@60567faa
2023-08-05 22:14:56.328 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.328(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.328 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.329 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896269lsg  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.329 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.330 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896269lsg  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.330 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896205fx5  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.331 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896205fx5  [0;39m <==      Total: 25
2023-08-05 22:14:56.331 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.331 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896205fx5  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896205fx5  [0;39m 无选座
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896205fx5  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896205fx5  [0;39m 无选座
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896205fx5  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896205fx5  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896205fx5  [0;39m 选中座位
2023-08-05 22:14:56.332 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896205fx5  [0;39m 最终选座:[DailyTrainSeat [Hash = 871816901, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.337 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448963379i9  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.338 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448963379i9  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.338 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448963379i9  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.339 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448963379i9  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.340 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448963379i9  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.340 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448963379i9  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.340 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448963379i9  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.340 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448963379i9  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.342 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.343 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: ConfirmOrder [Hash = 1267069443, id=1687829544163217408, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.343 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896306w58  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.344 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896306w58  [0;39m ==> Parameters: 1687829544163217408(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.342(Timestamp), 2023-08-05 22:14:56.342(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.344 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896269lsg  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.345 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.346 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896269lsg  [0;39m <==      Total: 1
2023-08-05 22:14:56.346 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.346 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896269lsg  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1708134319, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.347 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896269lsg  [0;39m 本次购票没有选座
2023-08-05 22:14:56.347 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.347 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@460bb868
2023-08-05 22:14:56.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.348 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896269lsg  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.348 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896269lsg  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.351 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896205fx5  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193372]
2023-08-05 22:14:56.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.351 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896205fx5  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193372
2023-08-05 22:14:56.352 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.352 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: DailyTrainSeat [Hash = 1540670227, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.352 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.353 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.352(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.356 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.356 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m <==    Updates: 1
2023-08-05 22:14:56.356 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.356 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.356 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896171b8m  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:56.357 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896171b8m  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:56.357 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.357 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896171b8m  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:56.357 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896235fso  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.358 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896171b8m  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:56.358 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896235fso  [0;39m <==      Total: 25
2023-08-05 22:14:56.358 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.358 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896235fso  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.358 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896235fso  [0;39m 无选座
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896235fso  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896235fso  [0;39m 无选座
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896235fso  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896235fso  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896235fso  [0;39m 选中座位
2023-08-05 22:14:56.359 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896235fso  [0;39m 最终选座:[DailyTrainSeat [Hash = 648110967, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.360 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896269lsg  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.361 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.361 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896269lsg  [0;39m <==      Total: 1
2023-08-05 22:14:56.361 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.362 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896269lsg  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.362 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896269lsg  [0;39m 从车厢2选座
2023-08-05 22:14:56.362 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.362 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@53e51c13
2023-08-05 22:14:56.363 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896269lsg  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.363 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896269lsg  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.364 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.365 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: ConfirmOrder [Hash = 1459992063, id=1687829544255492096, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.365 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448963379i9  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.366 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448963379i9  [0;39m ==> Parameters: 1687829544255492096(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.364(Timestamp), 2023-08-05 22:14:56.364(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.370 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896369chx  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.370 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896369chx  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.370 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896369chx  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.371 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896369chx  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.371 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896369chx  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.371 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896369chx  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.371 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896369chx  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.372 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896369chx  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.373 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896139h7n  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193371]
2023-08-05 22:14:56.373 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896139h7n  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193371
2023-08-05 22:14:56.373 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.374 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: DailyTrainSeat [Hash = 1293986952, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.374 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.375 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.373(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.375 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896306w58  [0;39m <==    Updates: 1
2023-08-05 22:14:56.375 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.375 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.375 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@22b70a3
2023-08-05 22:14:56.376 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896306w58  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.376 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896306w58  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.377 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.377 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.378 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.379 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896235fso  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193373]
2023-08-05 22:14:56.379 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.379 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896235fso  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193373
2023-08-05 22:14:56.379 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.379 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: DailyTrainSeat [Hash = 1759434265, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.380 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.380 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.380 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.380 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.379(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.380 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.380 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.380 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.382 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.382 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.382 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896171b8m  [0;39m <==    Updates: 3
2023-08-05 22:14:56.382 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.382 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.383 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.384 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.385 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.386 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.386 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.387 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.387 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.388 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.389 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.389 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448963379i9  [0;39m <==    Updates: 1
2023-08-05 22:14:56.390 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.390 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.390 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.390 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2caf37cf
2023-08-05 22:14:56.391 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.391 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448963379i9  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.391 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.391 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448963379i9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.392 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896306w58  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.392 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896269lsg  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.392 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896306w58  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.392 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896269lsg  [0;39m <==      Total: 25
2023-08-05 22:14:56.393 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896306w58  [0;39m <==      Total: 1
2023-08-05 22:14:56.393 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.393 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896269lsg  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.393 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.393 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896269lsg  [0;39m 无选座
2023-08-05 22:14:56.393 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896306w58  [0;39m 查出余票记录:DailyTrainTicket [Hash = 59276437, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896269lsg  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896306w58  [0;39m 本次购票没有选座
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896269lsg  [0;39m 无选座
2023-08-05 22:14:56.394 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.394 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@194aa05b
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896269lsg  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.394 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896269lsg  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.394 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896269lsg  [0;39m 选中座位
2023-08-05 22:14:56.394 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: ConfirmOrder [Hash = 1042987277, id=1687829544381321216, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.394 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896306w58  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.395 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896269lsg  [0;39m 最终选座:[DailyTrainSeat [Hash = 771685090, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.395 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896369chx  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.395 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896306w58  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.395 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896369chx  [0;39m ==> Parameters: 1687829544381321216(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.394(Timestamp), 2023-08-05 22:14:56.394(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.402 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896402wl7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.403 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896402wl7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.403 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896402wl7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.404 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448963379i9  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.405 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896402wl7  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.405 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896402wl7  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.405 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896402wl7  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.405 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448963379i9  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.405 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896402wl7  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.406 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896402wl7  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.406 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448963379i9  [0;39m <==      Total: 1
2023-08-05 22:14:56.406 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.406 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448963379i9  [0;39m 查出余票记录:DailyTrainTicket [Hash = 16908239, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.407 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448963379i9  [0;39m 本次购票没有选座
2023-08-05 22:14:56.407 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.407 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@51b0a3a8
2023-08-05 22:14:56.408 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448963379i9  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.408 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448963379i9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.413 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896306w58  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.414 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896269lsg  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193374]
2023-08-05 22:14:56.414 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896269lsg  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193374
2023-08-05 22:14:56.414 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896306w58  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.414 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.414 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896306w58  [0;39m <==      Total: 1
2023-08-05 22:14:56.414 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: DailyTrainSeat [Hash = 555809061, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.415 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.415 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896306w58  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.415 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896306w58  [0;39m 从车厢2选座
2023-08-05 22:14:56.415 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.415 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.415 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.414(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.415 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@722db856
2023-08-05 22:14:56.416 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896306w58  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.416 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896306w58  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.420 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896369chx  [0;39m <==    Updates: 1
2023-08-05 22:14:56.420 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.420 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.420 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2a95c54
2023-08-05 22:14:56.421 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896369chx  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.421 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896369chx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.424 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448963379i9  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.425 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448963379i9  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.426 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448963379i9  [0;39m <==      Total: 1
2023-08-05 22:14:56.426 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.426 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448963379i9  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.426 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448963379i9  [0;39m 从车厢2选座
2023-08-05 22:14:56.426 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.426 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2c0cb2fd
2023-08-05 22:14:56.427 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448963379i9  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.427 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448963379i9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.431 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.431 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: ConfirmOrder [Hash = 398241119, id=1687829544532316160, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.431 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896402wl7  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.432 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896402wl7  [0;39m ==> Parameters: 1687829544532316160(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.43(Timestamp), 2023-08-05 22:14:56.43(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.435 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896435rlp  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.436 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896435rlp  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.436 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896369chx  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.436 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.436 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896435rlp  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.437 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.437 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896369chx  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.437 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.437 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896369chx  [0;39m <==      Total: 1
2023-08-05 22:14:56.437 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896435rlp  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896435rlp  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.438 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896435rlp  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.438 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896369chx  [0;39m 查出余票记录:DailyTrainTicket [Hash = 685519269, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896435rlp  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.438 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896369chx  [0;39m 本次购票没有选座
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896435rlp  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.438 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.438 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.439 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2a649d8a
2023-08-05 22:14:56.439 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.439 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896369chx  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.440 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.440 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896369chx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.440 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.440 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.441 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.441 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.443 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.443 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.444 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.444 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.444 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.444 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.445 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.446 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.447 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.448 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.449 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.449 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.449 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.449 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896306w58  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.450 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896306w58  [0;39m <==      Total: 25
2023-08-05 22:14:56.450 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.450 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.450 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896306w58  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.450 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.450 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896306w58  [0;39m 无选座
2023-08-05 22:14:56.450 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896306w58  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.451 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896306w58  [0;39m 无选座
2023-08-05 22:14:56.451 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896306w58  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.451 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.451 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896306w58  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.451 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896306w58  [0;39m 选中座位
2023-08-05 22:14:56.451 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896306w58  [0;39m 最终选座:[DailyTrainSeat [Hash = 2114271281, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.451 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.452 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.452 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896369chx  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.452 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.453 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896369chx  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.453 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.453 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896369chx  [0;39m <==      Total: 1
2023-08-05 22:14:56.453 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.453 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.453 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896369chx  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.454 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896369chx  [0;39m 从车厢2选座
2023-08-05 22:14:56.454 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.454 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.454 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@8d37a78
2023-08-05 22:14:56.454 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.455 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896369chx  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.455 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448963379i9  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.455 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896369chx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.455 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448963379i9  [0;39m <==      Total: 25
2023-08-05 22:14:56.455 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.455 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448963379i9  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448963379i9  [0;39m 无选座
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448963379i9  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448963379i9  [0;39m 无选座
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448963379i9  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448963379i9  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448963379i9  [0;39m 选中座位
2023-08-05 22:14:56.456 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448963379i9  [0;39m 最终选座:[DailyTrainSeat [Hash = 1980007712, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.457 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896402wl7  [0;39m <==    Updates: 1
2023-08-05 22:14:56.457 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.457 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.457 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7e160584
2023-08-05 22:14:56.458 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896402wl7  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.459 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896402wl7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.468 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896468dav  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.468 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.468 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.468 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896468dav  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.469 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: ConfirmOrder [Hash = 1938062277, id=1687829544691699712, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.469 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896468dav  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.469 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896435rlp  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.469 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896306w58  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193375]
2023-08-05 22:14:56.469 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896306w58  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193375
2023-08-05 22:14:56.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896468dav  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.470 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896435rlp  [0;39m ==> Parameters: 1687829544691699712(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.468(Timestamp), 2023-08-05 22:14:56.468(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896468dav  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: DailyTrainSeat [Hash = 1430133477, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896468dav  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.470 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896468dav  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.471 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896468dav  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.470 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.471 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.47(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.471 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.472 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.472 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.473 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448963379i9  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193376]
2023-08-05 22:14:56.473 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448963379i9  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193376
2023-08-05 22:14:56.473 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896402wl7  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.473 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.473 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: DailyTrainSeat [Hash = 1441513705, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.473 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.473 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.474 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.474 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.474 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896402wl7  [0;39m <==      Total: 1
2023-08-05 22:14:56.474 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.473(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.474 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.474 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896402wl7  [0;39m 查出余票记录:DailyTrainTicket [Hash = 76685145, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.474 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.475 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896402wl7  [0;39m 本次购票没有选座
2023-08-05 22:14:56.475 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.475 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.475 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@26637b2d
2023-08-05 22:14:56.475 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.475 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896402wl7  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.476 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896402wl7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.476 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.476 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.477 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.477 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.477 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.478 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.478 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.479 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.480 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.481 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896369chx  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.482 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896369chx  [0;39m <==      Total: 25
2023-08-05 22:14:56.482 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896369chx  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896369chx  [0;39m 无选座
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896369chx  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896369chx  [0;39m 无选座
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896369chx  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896369chx  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896369chx  [0;39m 选中座位
2023-08-05 22:14:56.483 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896369chx  [0;39m 最终选座:[DailyTrainSeat [Hash = 1338867360, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.488 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896402wl7  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.489 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.489 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896402wl7  [0;39m <==      Total: 1
2023-08-05 22:14:56.490 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.490 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896402wl7  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.490 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896402wl7  [0;39m 从车厢2选座
2023-08-05 22:14:56.490 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.490 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@70776cf7
2023-08-05 22:14:56.491 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896402wl7  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.491 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896402wl7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.499 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896369chx  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193379]
2023-08-05 22:14:56.499 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896369chx  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193379
2023-08-05 22:14:56.499 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.500 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: DailyTrainSeat [Hash = 344597624, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.500 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.500 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.499(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.501 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896435rlp  [0;39m <==    Updates: 1
2023-08-05 22:14:56.501 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896501ozm  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.501 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.501 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.501 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896501ozm  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.501 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@682e2e6b
2023-08-05 22:14:56.501 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896501ozm  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.502 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896435rlp  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.502 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896435rlp  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.502 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896501ozm  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.503 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896501ozm  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.503 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896501ozm  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.503 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896501ozm  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.503 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896501ozm  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.505 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.505 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.505 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.506 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.507 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.507 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.507 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.508 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.508 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.508 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.509 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.509 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.512 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896402wl7  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.514 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896402wl7  [0;39m <==      Total: 25
2023-08-05 22:14:56.515 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896402wl7  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896402wl7  [0;39m 无选座
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896402wl7  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896402wl7  [0;39m 无选座
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896402wl7  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896402wl7  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896402wl7  [0;39m 选中座位
2023-08-05 22:14:56.515 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896402wl7  [0;39m 最终选座:[DailyTrainSeat [Hash = 1493985496, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.518 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896435rlp  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.519 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 24, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.519 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896435rlp  [0;39m <==      Total: 1
2023-08-05 22:14:56.519 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.520 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896435rlp  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1879322665, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=24, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.520 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896435rlp  [0;39m 本次购票没有选座
2023-08-05 22:14:56.520 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.520 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@39e24d6b
2023-08-05 22:14:56.520 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896435rlp  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.521 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896435rlp  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.533 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896402wl7  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193380]
2023-08-05 22:14:56.533 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896402wl7  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193380
2023-08-05 22:14:56.534 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.534 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896534ej6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.534 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: DailyTrainSeat [Hash = 181016281, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.534 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896534ej6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.534 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896534ej6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.534 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.535 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.534(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.535 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896534ej6  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.536 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896534ej6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.536 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896534ej6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.536 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896534ej6  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.537 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896534ej6  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.537 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896435rlp  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.538 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.538 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896435rlp  [0;39m <==      Total: 1
2023-08-05 22:14:56.539 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.539 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896435rlp  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.539 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896435rlp  [0;39m 从车厢2选座
2023-08-05 22:14:56.540 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.540 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@39ccfc4c
2023-08-05 22:14:56.540 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896435rlp  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.540 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896435rlp  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.557 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.558 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.558 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 00, 2023-08-05 22:07:04.423, 2023-08-05 22:07:04.423
2023-08-05 22:14:56.559 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.560 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.560 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.561 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.562 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.563 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.564 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.565 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.565 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896565x4n  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.566 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896565x4n  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.566 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896565x4n  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.566 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.567 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896565x4n  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.567 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896565x4n  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.567 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.567 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896565x4n  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.567 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896565x4n  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.568 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896565x4n  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.568 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.569 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.569 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.569 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.570 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.571 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896435rlp  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.571 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896435rlp  [0;39m <==      Total: 25
2023-08-05 22:14:56.571 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896435rlp  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896435rlp  [0;39m 无选座
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896435rlp  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896435rlp  [0;39m 无选座
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896435rlp  [0;39m 座位2在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896435rlp  [0;39m 座位2被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896435rlp  [0;39m 选中座位
2023-08-05 22:14:56.572 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896435rlp  [0;39m 最终选座:[DailyTrainSeat [Hash = 1127909193, id=1687827564791468032, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=B, seatType=2, carriageSeatIndex=2, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.594 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896435rlp  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193381]
2023-08-05 22:14:56.594 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896435rlp  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193381
2023-08-05 22:14:56.594 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.595 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: DailyTrainSeat [Hash = 1350894165, id=1687827564791468032, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.595 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.596 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.594(Timestamp), 1687827564791468032(Long)
2023-08-05 22:14:56.596 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896171b8m  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:56.596 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896171b8m  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:56.597 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896171b8m  [0;39m 参数值: ConfirmOrder [Hash = 397869094, id=1687829543613763584, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023, tickets=null]
2023-08-05 22:14:56.597 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:56.598 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:56.596(Timestamp), 1687829543613763584(Long)
2023-08-05 22:14:56.600 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448966002si  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.600 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448966002si  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.601 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448966002si  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.601 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448966002si  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.602 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448966002si  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.602 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448966002si  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.602 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448966002si  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.602 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448966002si  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.621 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896171b8m  [0;39m <==    Updates: 1
2023-08-05 22:14:56.622 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896171b8m  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:56.622 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896171b8m  [0;39m transaction 192.168.0.102:8091:7278238012553193370 will be commit
2023-08-05 22:14:56.635 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896635kqh  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.635 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896635kqh  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.635 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896635kqh  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.636 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896635kqh  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.636 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896635kqh  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.636 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896635kqh  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.636 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896635kqh  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.637 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896635kqh  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.665 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896665v4p  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.665 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896665v4p  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.665 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896665v4p  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.666 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896665v4p  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.666 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896665v4p  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.666 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896665v4p  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.667 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896665v4p  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.667 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896665v4p  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.693 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896171b8m  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193370
2023-08-05 22:14:56.693 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896171b8m  [0;39m [192.168.0.102:8091:7278238012553193370] commit status: Committed
2023-08-05 22:14:56.698 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896698kx5  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.698 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896698kx5  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.698 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896698kx5  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.699 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896698kx5  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.699 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896698kx5  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.699 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896698kx5  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.700 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896698kx5  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.700 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896698kx5  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.708 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m <==    Updates: 1
2023-08-05 22:14:56.709 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.709 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896205fx5  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:56.709 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896205fx5  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:56.709 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896205fx5  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:56.710 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896205fx5  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:56.720 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896171b8m  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:56.721 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896171b8m  [0;39m ------------- 结束 耗时：548 ms -------------
2023-08-05 22:14:56.732 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.732 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896732yav  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.733 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: ConfirmOrder [Hash = 708129737, id=1687829545798995968, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:56, updateTime=2023-08-05 22:14:56, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:56.733 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896732yav  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.733 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896732yav  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.733 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896468dav  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:56.733 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896205fx5  [0;39m <==    Updates: 3
2023-08-05 22:14:56.733 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896468dav  [0;39m ==> Parameters: 1687829545798995968(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:56.732(Timestamp), 2023-08-05 22:14:56.732(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:56.734 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896732yav  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.734 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896732yav  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.735 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896732yav  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.735 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896732yav  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.735 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896732yav  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.759 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896468dav  [0;39m <==    Updates: 1
2023-08-05 22:14:56.759 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:56.759 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.759 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@775d7416
2023-08-05 22:14:56.759 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896468dav  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:56.761 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896468dav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:56.764 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896764it9  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.764 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896764it9  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.764 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896764it9  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.765 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896764it9  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.765 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896764it9  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.765 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896764it9  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.765 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896764it9  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.765 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896764it9  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.779 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896468dav  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:56.779 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896468dav  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 23, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:56.780 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896468dav  [0;39m <==      Total: 1
2023-08-05 22:14:56.781 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:56.781 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896468dav  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1523168559, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=23, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:56.782 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896468dav  [0;39m 本次购票没有选座
2023-08-05 22:14:56.782 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.782 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7f85cb21
2023-08-05 22:14:56.782 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896468dav  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:56.783 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896468dav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:56.795 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896468dav  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:56.796 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896468dav  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:56.796 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896468dav  [0;39m <==      Total: 1
2023-08-05 22:14:56.797 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:56.797 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896468dav  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:56.797 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896468dav  [0;39m 从车厢2选座
2023-08-05 22:14:56.797 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.798 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3a1a94e2
2023-08-05 22:14:56.798 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896468dav  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:56.799 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896468dav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:56.802 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448968018hx  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.802 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448968018hx  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.802 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448968018hx  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.803 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448968018hx  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.803 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448968018hx  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.803 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448968018hx  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.803 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448968018hx  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.803 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448968018hx  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.813 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:56.813 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:56.814 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.328
2023-08-05 22:14:56.814 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:56.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:56.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:56.815 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:56.816 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:56.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:56.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:56.817 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:56.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:56.818 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:56.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:56.819 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:56.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:56.820 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:56.821 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:56.821 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:56.822 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:56.822 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:56.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:56.823 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:56.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:56.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:56.824 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896468dav  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:56.825 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896468dav  [0;39m <==      Total: 25
2023-08-05 22:14:56.825 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:56.825 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896468dav  [0;39m 车厢2的座位数:25
2023-08-05 22:14:56.825 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896468dav  [0;39m 无选座
2023-08-05 22:14:56.826 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896468dav  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.826 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896468dav  [0;39m 无选座
2023-08-05 22:14:56.826 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896468dav  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:56.826 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896468dav  [0;39m 无选座
2023-08-05 22:14:56.827 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896468dav  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:56.827 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896468dav  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:56.827 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896468dav  [0;39m 选中座位
2023-08-05 22:14:56.827 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896468dav  [0;39m 最终选座:[DailyTrainSeat [Hash = 2095068188, id=1687827564967628800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=C, seatType=2, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:56.832 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896832s3x  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.833 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896832s3x  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.833 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896832s3x  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.834 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896832s3x  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.834 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896832s3x  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.834 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896832s3x  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.834 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896832s3x  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.834 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896832s3x  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.846 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896468dav  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193393]
2023-08-05 22:14:56.846 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896468dav  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193393
2023-08-05 22:14:56.846 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.846 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: DailyTrainSeat [Hash = 942195318, id=1687827564967628800, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:56 CST 2023]
2023-08-05 22:14:56.847 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:56.847 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:56.846(Timestamp), 1687827564967628800(Long)
2023-08-05 22:14:56.863 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896863ubc  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.864 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896863ubc  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.865 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896863ubc  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.866 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896863ubc  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.866 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896863ubc  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.866 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896863ubc  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.866 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896863ubc  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.867 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896863ubc  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.871 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m <==    Updates: 1
2023-08-05 22:14:56.871 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:56.871 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896468dav  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:56.871 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896468dav  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:56.872 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896468dav  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:56.872 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896468dav  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:56.897 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896897r03  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.897 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896897r03  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.897 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896897r03  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.898 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896897r03  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.898 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896897r03  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.898 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896897r03  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.898 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896897r03  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.899 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896897r03  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.934 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448969345kt  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.935 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448969345kt  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.935 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448969345kt  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.936 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448969345kt  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.937 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448969345kt  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.937 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448969345kt  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.937 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448969345kt  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.937 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448969345kt  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.969 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448969699ad  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:56.970 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448969699ad  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.970 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448969699ad  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:56.971 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448969699ad  [0;39m ------------- 开始 -------------
2023-08-05 22:14:56.972 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448969699ad  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:56.972 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448969699ad  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:56.972 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448969699ad  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:56.973 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448969699ad  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:56.999 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244896999h3j  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:57.000 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244896999h3j  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.001 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244896999h3j  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.002 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244896999h3j  [0;39m ------------- 开始 -------------
2023-08-05 22:14:57.002 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244896999h3j  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:57.003 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244896999h3j  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:57.003 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244896999h3j  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:57.003 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244896999h3j  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:57.038 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244897038i8k  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:57.039 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244897038i8k  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.039 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244897038i8k  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.041 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244897038i8k  [0;39m ------------- 开始 -------------
2023-08-05 22:14:57.041 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244897038i8k  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:57.042 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244897038i8k  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:57.042 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244897038i8k  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:57.042 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244897038i8k  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:57.068 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912448970687wq  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:57.069 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912448970687wq  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.069 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912448970687wq  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.070 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912448970687wq  [0;39m ------------- 开始 -------------
2023-08-05 22:14:57.070 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912448970687wq  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:57.070 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912448970687wq  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:57.070 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912448970687wq  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:57.070 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912448970687wq  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:57.097 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244897097rxr  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:14:57.097 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244897097rxr  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.097 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244897097rxr  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:14:57.098 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244897097rxr  [0;39m ------------- 开始 -------------
2023-08-05 22:14:57.098 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244897097rxr  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:14:57.099 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244897097rxr  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:14:57.099 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244897097rxr  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:14:57.099 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244897097rxr  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:14:57.187 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896205fx5  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:57.187 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896205fx5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.188 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896205fx5  [0;39m 参数值: ConfirmOrder [Hash = 937641982, id=1687829543689261056, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:57 CST 2023, tickets=null]
2023-08-05 22:14:57.188 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:57.188 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:57.187(Timestamp), 1687829543689261056(Long)
2023-08-05 22:14:57.213 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896205fx5  [0;39m <==    Updates: 1
2023-08-05 22:14:57.213 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896205fx5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.213 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896205fx5  [0;39m transaction 192.168.0.102:8091:7278238012553193372 will be commit
2023-08-05 22:14:57.266 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896205fx5  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193372
2023-08-05 22:14:57.266 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896205fx5  [0;39m [192.168.0.102:8091:7278238012553193372] commit status: Committed
2023-08-05 22:14:57.313 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896468dav  [0;39m <==    Updates: 3
2023-08-05 22:14:57.316 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m <==    Updates: 1
2023-08-05 22:14:57.316 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:57.316 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896139h7n  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:57.316 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896139h7n  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:57.317 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896139h7n  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:57.317 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896139h7n  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:57.324 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896205fx5  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:57.324 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896205fx5  [0;39m ------------- 结束 耗时：1118 ms -------------
2023-08-05 22:14:57.337 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:57.337 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: ConfirmOrder [Hash = 392671081, id=1687829548336549888, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:57, updateTime=2023-08-05 22:14:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:57.338 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896501ozm  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:57.338 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896501ozm  [0;39m ==> Parameters: 1687829548336549888(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:57.337(Timestamp), 2023-08-05 22:14:57.337(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:57.361 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896501ozm  [0;39m <==    Updates: 1
2023-08-05 22:14:57.361 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:57.361 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:57.361 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3be13b1
2023-08-05 22:14:57.362 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896501ozm  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:57.362 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896501ozm  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:57.376 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896501ozm  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:57.380 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 22, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:57.380 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896501ozm  [0;39m <==      Total: 1
2023-08-05 22:14:57.381 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:57.381 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896501ozm  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1021907070, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=22, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:57.381 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896501ozm  [0;39m 本次购票没有选座
2023-08-05 22:14:57.381 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:57.381 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7420da18
2023-08-05 22:14:57.382 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896501ozm  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:57.382 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896501ozm  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:57.394 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896501ozm  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:57.395 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:57.395 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896501ozm  [0;39m <==      Total: 1
2023-08-05 22:14:57.396 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:57.396 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896501ozm  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:57.396 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896501ozm  [0;39m 从车厢2选座
2023-08-05 22:14:57.396 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:57.396 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@69549ea8
2023-08-05 22:14:57.397 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896501ozm  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:57.397 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896501ozm  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:57.411 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:57.412 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:57.413 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.352
2023-08-05 22:14:57.414 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 00, 2023-08-05 22:07:04.465, 2023-08-05 22:07:04.465
2023-08-05 22:14:57.415 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:57.416 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:57.416 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:57.416 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:57.417 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:57.418 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:57.418 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:57.419 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:57.419 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:57.419 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:57.420 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:57.420 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:57.421 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:57.421 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:57.422 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:57.422 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:57.422 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:57.423 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:57.424 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:57.424 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:57.424 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:57.425 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896501ozm  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:57.425 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896501ozm  [0;39m <==      Total: 25
2023-08-05 22:14:57.425 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:57.425 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896501ozm  [0;39m 车厢2的座位数:25
2023-08-05 22:14:57.425 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896501ozm  [0;39m 无选座
2023-08-05 22:14:57.425 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896501ozm  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:57.425 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896501ozm  [0;39m 无选座
2023-08-05 22:14:57.425 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896501ozm  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:57.426 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896501ozm  [0;39m 无选座
2023-08-05 22:14:57.426 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896501ozm  [0;39m 座位3在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:57.426 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896501ozm  [0;39m 座位3被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:57.426 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896501ozm  [0;39m 选中座位
2023-08-05 22:14:57.426 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896501ozm  [0;39m 最终选座:[DailyTrainSeat [Hash = 1875439799, id=1687827564967628800, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=C, seatType=2, carriageSeatIndex=3, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:57.449 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896501ozm  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193399]
2023-08-05 22:14:57.449 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896501ozm  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193399
2023-08-05 22:14:57.449 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:57.449 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: DailyTrainSeat [Hash = 1801040932, id=1687827564967628800, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:57 CST 2023]
2023-08-05 22:14:57.450 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:57.450 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:57.449(Timestamp), 1687827564967628800(Long)
2023-08-05 22:14:57.511 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896468dav  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:57.511 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896468dav  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.511 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896468dav  [0;39m 参数值: ConfirmOrder [Hash = 156380621, id=1687829545798995968, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:57 CST 2023, tickets=null]
2023-08-05 22:14:57.512 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:57.512 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:57.511(Timestamp), 1687829545798995968(Long)
2023-08-05 22:14:57.536 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896468dav  [0;39m <==    Updates: 1
2023-08-05 22:14:57.536 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896468dav  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.536 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896468dav  [0;39m transaction 192.168.0.102:8091:7278238012553193393 will be commit
2023-08-05 22:14:57.600 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896468dav  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193393
2023-08-05 22:14:57.601 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896468dav  [0;39m [192.168.0.102:8091:7278238012553193393] commit status: Committed
2023-08-05 22:14:57.615 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m <==    Updates: 1
2023-08-05 22:14:57.616 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:57.617 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896501ozm  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:57.617 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896501ozm  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:57.618 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896139h7n  [0;39m <==    Updates: 3
2023-08-05 22:14:57.619 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896501ozm  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:57.620 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896501ozm  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:57.668 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896468dav  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:57.669 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896468dav  [0;39m ------------- 结束 耗时：1199 ms -------------
2023-08-05 22:14:57.682 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:57.683 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: ConfirmOrder [Hash = 2041785830, id=1687829549783584768, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:57, updateTime=2023-08-05 22:14:57, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:57.684 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896534ej6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:57.685 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896534ej6  [0;39m ==> Parameters: 1687829549783584768(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:57.682(Timestamp), 2023-08-05 22:14:57.682(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:57.714 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896534ej6  [0;39m <==    Updates: 1
2023-08-05 22:14:57.715 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:57.716 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:57.717 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4603d4ee
2023-08-05 22:14:57.718 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896534ej6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:57.719 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896534ej6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:57.733 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896534ej6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:57.736 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 21, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:57.737 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896534ej6  [0;39m <==      Total: 1
2023-08-05 22:14:57.739 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:57.739 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896534ej6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 932948671, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=21, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:57.741 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896534ej6  [0;39m 本次购票没有选座
2023-08-05 22:14:57.741 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:57.742 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1ab1fd50
2023-08-05 22:14:57.744 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896534ej6  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:57.745 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896534ej6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:57.759 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896534ej6  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:57.760 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:57.761 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896534ej6  [0;39m <==      Total: 1
2023-08-05 22:14:57.761 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:57.761 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896534ej6  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:57.761 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896534ej6  [0;39m 从车厢2选座
2023-08-05 22:14:57.762 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:57.762 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1cc29265
2023-08-05 22:14:57.763 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896534ej6  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:57.763 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896534ej6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:57.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:57.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:57.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.352
2023-08-05 22:14:57.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:56.846
2023-08-05 22:14:57.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:57.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:57.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:57.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:57.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:57.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:57.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:57.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:57.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:57.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:57.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:57.790 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:57.791 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:57.792 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:57.792 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:57.793 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:57.794 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:57.795 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:57.795 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:57.796 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:57.797 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:57.797 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896534ej6  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:57.798 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896534ej6  [0;39m <==      Total: 25
2023-08-05 22:14:57.798 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:57.798 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896534ej6  [0;39m 车厢2的座位数:25
2023-08-05 22:14:57.798 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896534ej6  [0;39m 无选座
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896534ej6  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896534ej6  [0;39m 无选座
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896534ej6  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896534ej6  [0;39m 无选座
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896534ej6  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:57.799 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896534ej6  [0;39m 无选座
2023-08-05 22:14:57.800 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896534ej6  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:57.800 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896534ej6  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:57.800 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896534ej6  [0;39m 选中座位
2023-08-05 22:14:57.800 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896534ej6  [0;39m 最终选座:[DailyTrainSeat [Hash = 1663575537, id=1687827565152178176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:57.817 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896534ej6  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193414]
2023-08-05 22:14:57.818 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896534ej6  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193414
2023-08-05 22:14:57.818 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:57.818 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: DailyTrainSeat [Hash = 1320847446, id=1687827565152178176, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:57 CST 2023]
2023-08-05 22:14:57.819 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:57.819 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:57.818(Timestamp), 1687827565152178176(Long)
2023-08-05 22:14:57.861 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896139h7n  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:57.861 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896139h7n  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.861 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896139h7n  [0;39m 参数值: ConfirmOrder [Hash = 2141919306, id=1687829543576014848, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:57 CST 2023, tickets=null]
2023-08-05 22:14:57.862 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:57.863 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:57.861(Timestamp), 1687829543576014848(Long)
2023-08-05 22:14:57.895 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896139h7n  [0;39m <==    Updates: 1
2023-08-05 22:14:57.895 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896139h7n  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:57.896 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896139h7n  [0;39m transaction 192.168.0.102:8091:7278238012553193371 will be commit
2023-08-05 22:14:57.991 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896139h7n  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193371
2023-08-05 22:14:57.991 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896139h7n  [0;39m [192.168.0.102:8091:7278238012553193371] commit status: Committed
2023-08-05 22:14:58.005 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896501ozm  [0;39m <==    Updates: 3
2023-08-05 22:14:58.005 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m <==    Updates: 1
2023-08-05 22:14:58.005 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:58.006 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896235fso  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:58.006 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896235fso  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:58.007 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896235fso  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:58.008 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896235fso  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:58.023 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896139h7n  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:58.024 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896139h7n  [0;39m ------------- 结束 耗时：1883 ms -------------
2023-08-05 22:14:58.039 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.040 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: ConfirmOrder [Hash = 220259004, id=1687829551280951296, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:58, updateTime=2023-08-05 22:14:58, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:58.041 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896565x4n  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:58.042 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896565x4n  [0;39m ==> Parameters: 1687829551280951296(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:58.038(Timestamp), 2023-08-05 22:14:58.038(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:58.083 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m <==    Updates: 1
2023-08-05 22:14:58.083 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:58.084 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896534ej6  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:58.084 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896534ej6  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:58.084 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896534ej6  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:58.085 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896534ej6  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:58.086 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896565x4n  [0;39m <==    Updates: 1
2023-08-05 22:14:58.086 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.086 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.087 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@70dd580d
2023-08-05 22:14:58.087 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896565x4n  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:58.088 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896565x4n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:58.106 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896565x4n  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:58.106 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 20, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:58.107 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896565x4n  [0;39m <==      Total: 1
2023-08-05 22:14:58.107 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.107 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896565x4n  [0;39m 查出余票记录:DailyTrainTicket [Hash = 448419058, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=20, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:58.107 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896565x4n  [0;39m 本次购票没有选座
2023-08-05 22:14:58.107 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.107 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@6e94e496
2023-08-05 22:14:58.108 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896565x4n  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:58.108 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896565x4n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:58.124 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896565x4n  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:58.125 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:58.125 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896565x4n  [0;39m <==      Total: 1
2023-08-05 22:14:58.126 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.126 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896565x4n  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:58.126 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896565x4n  [0;39m 从车厢2选座
2023-08-05 22:14:58.126 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:58.126 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1d151472
2023-08-05 22:14:58.127 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896565x4n  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:58.127 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896565x4n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:58.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:58.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:58.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.373
2023-08-05 22:14:58.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:56.846
2023-08-05 22:14:58.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:58.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:58.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:58.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:58.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:58.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:58.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:58.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:58.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:58.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:58.150 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:58.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:58.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:58.153 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:58.153 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:58.154 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:58.154 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:58.154 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:58.155 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:58.155 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:58.156 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:58.156 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896565x4n  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:58.157 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896565x4n  [0;39m <==      Total: 25
2023-08-05 22:14:58.157 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:58.157 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896565x4n  [0;39m 车厢2的座位数:25
2023-08-05 22:14:58.157 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896565x4n  [0;39m 无选座
2023-08-05 22:14:58.157 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896565x4n  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896565x4n  [0;39m 无选座
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896565x4n  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896565x4n  [0;39m 无选座
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896565x4n  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896565x4n  [0;39m 无选座
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896565x4n  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896565x4n  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:58.158 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896565x4n  [0;39m 选中座位
2023-08-05 22:14:58.159 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896565x4n  [0;39m 最终选座:[DailyTrainSeat [Hash = 473505932, id=1687827565152178176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:58.185 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896565x4n  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193418]
2023-08-05 22:14:58.185 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896565x4n  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193418
2023-08-05 22:14:58.185 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:58.186 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: DailyTrainSeat [Hash = 1986236286, id=1687827565152178176, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:58 CST 2023]
2023-08-05 22:14:58.186 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:58.186 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:58.185(Timestamp), 1687827565152178176(Long)
2023-08-05 22:14:58.222 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896501ozm  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:58.223 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896501ozm  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:58.223 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896501ozm  [0;39m 参数值: ConfirmOrder [Hash = 1621814399, id=1687829548336549888, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:58 CST 2023, tickets=null]
2023-08-05 22:14:58.223 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:58.223 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:58.223(Timestamp), 1687829548336549888(Long)
2023-08-05 22:14:58.248 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896501ozm  [0;39m <==    Updates: 1
2023-08-05 22:14:58.249 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896501ozm  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:58.249 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896501ozm  [0;39m transaction 192.168.0.102:8091:7278238012553193399 will be commit
2023-08-05 22:14:58.306 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896501ozm  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193399
2023-08-05 22:14:58.307 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896501ozm  [0;39m [192.168.0.102:8091:7278238012553193399] commit status: Committed
2023-08-05 22:14:58.321 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896235fso  [0;39m <==    Updates: 3
2023-08-05 22:14:58.332 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896501ozm  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:58.333 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896501ozm  [0;39m ------------- 结束 耗时：1831 ms -------------
2023-08-05 22:14:58.344 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.345 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: ConfirmOrder [Hash = 11828776, id=1687829552560214016, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:58, updateTime=2023-08-05 22:14:58, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:58.346 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448966002si  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:58.347 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448966002si  [0;39m ==> Parameters: 1687829552560214016(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:58.344(Timestamp), 2023-08-05 22:14:58.344(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:58.372 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448966002si  [0;39m <==    Updates: 1
2023-08-05 22:14:58.372 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.373 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.373 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@c1ceb32
2023-08-05 22:14:58.374 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448966002si  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:58.375 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448966002si  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:58.387 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448966002si  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:58.388 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448966002si  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 19, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:58.389 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448966002si  [0;39m <==      Total: 1
2023-08-05 22:14:58.389 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.390 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448966002si  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1610477330, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=19, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:58.390 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448966002si  [0;39m 本次购票没有选座
2023-08-05 22:14:58.390 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.390 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@63fca1a9
2023-08-05 22:14:58.391 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448966002si  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:58.392 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448966002si  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:58.404 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448966002si  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:58.405 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448966002si  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:58.406 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448966002si  [0;39m <==      Total: 1
2023-08-05 22:14:58.406 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.406 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448966002si  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:58.407 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448966002si  [0;39m 从车厢2选座
2023-08-05 22:14:58.407 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:58.407 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@735edc9b
2023-08-05 22:14:58.408 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448966002si  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:58.408 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448966002si  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:58.423 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:58.424 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:58.425 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.373
2023-08-05 22:14:58.426 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:14:58.427 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:58.427 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:58.428 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:58.429 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:58.430 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:58.431 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:58.431 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:58.432 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:58.432 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:58.433 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:58.434 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:58.435 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:58.436 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:58.437 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:58.438 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:58.438 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:58.439 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:58.440 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:58.441 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:58.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:58.442 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:58.443 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448966002si  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:58.443 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448966002si  [0;39m <==      Total: 25
2023-08-05 22:14:58.444 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:58.444 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448966002si  [0;39m 车厢2的座位数:25
2023-08-05 22:14:58.444 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448966002si  [0;39m 无选座
2023-08-05 22:14:58.444 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448966002si  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.444 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448966002si  [0;39m 无选座
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448966002si  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448966002si  [0;39m 无选座
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448966002si  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448966002si  [0;39m 无选座
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448966002si  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448966002si  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448966002si  [0;39m 选中座位
2023-08-05 22:14:58.445 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448966002si  [0;39m 最终选座:[DailyTrainSeat [Hash = 1167866016, id=1687827565152178176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:58.464 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448966002si  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193422]
2023-08-05 22:14:58.464 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448966002si  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193422
2023-08-05 22:14:58.464 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:58.464 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: DailyTrainSeat [Hash = 1498318311, id=1687827565152178176, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:58 CST 2023]
2023-08-05 22:14:58.465 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:58.465 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:58.464(Timestamp), 1687827565152178176(Long)
2023-08-05 22:14:58.535 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896235fso  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:58.535 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896235fso  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:58.535 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896235fso  [0;39m 参数值: ConfirmOrder [Hash = 1133839212, id=1687829543819284480, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:58 CST 2023, tickets=null]
2023-08-05 22:14:58.536 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:58.536 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:58.535(Timestamp), 1687829543819284480(Long)
2023-08-05 22:14:58.789 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896235fso  [0;39m <==    Updates: 1
2023-08-05 22:14:58.791 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896235fso  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:58.791 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896235fso  [0;39m transaction 192.168.0.102:8091:7278238012553193373 will be commit
2023-08-05 22:14:58.852 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896235fso  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193373
2023-08-05 22:14:58.853 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896235fso  [0;39m [192.168.0.102:8091:7278238012553193373] commit status: Committed
2023-08-05 22:14:58.868 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896534ej6  [0;39m <==    Updates: 3
2023-08-05 22:14:58.868 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m <==    Updates: 1
2023-08-05 22:14:58.869 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:58.870 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896269lsg  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:58.871 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896269lsg  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:58.872 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896269lsg  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:58.874 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896269lsg  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:58.881 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896235fso  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:58.882 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896235fso  [0;39m ------------- 结束 耗时：2646 ms -------------
2023-08-05 22:14:58.894 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.895 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: ConfirmOrder [Hash = 995640954, id=1687829554867081216, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:58, updateTime=2023-08-05 22:14:58, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:58.895 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896635kqh  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:58.896 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896635kqh  [0;39m ==> Parameters: 1687829554867081216(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:58.894(Timestamp), 2023-08-05 22:14:58.894(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:58.921 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896635kqh  [0;39m <==    Updates: 1
2023-08-05 22:14:58.922 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:58.923 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.923 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@cdb91cf
2023-08-05 22:14:58.924 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896635kqh  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:58.925 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896635kqh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:58.939 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896635kqh  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:58.941 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 18, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:58.942 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896635kqh  [0;39m <==      Total: 1
2023-08-05 22:14:58.942 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:58.943 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896635kqh  [0;39m 查出余票记录:DailyTrainTicket [Hash = 945719462, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=18, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:58.943 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896635kqh  [0;39m 本次购票没有选座
2023-08-05 22:14:58.943 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.944 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@58105e81
2023-08-05 22:14:58.945 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896635kqh  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:58.945 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896635kqh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:58.958 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896635kqh  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:58.959 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:58.960 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896635kqh  [0;39m <==      Total: 1
2023-08-05 22:14:58.960 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:58.961 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896635kqh  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:58.961 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896635kqh  [0;39m 从车厢2选座
2023-08-05 22:14:58.961 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:58.962 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@360ff1a2
2023-08-05 22:14:58.963 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896635kqh  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:58.963 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896635kqh  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:58.978 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:58.980 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:58.981 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.379
2023-08-05 22:14:58.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:14:58.982 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 00, 2023-08-05 22:07:04.508, 2023-08-05 22:07:04.508
2023-08-05 22:14:58.983 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:58.984 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:58.985 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:58.986 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:58.987 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:58.988 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:58.989 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:58.990 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:58.991 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:58.992 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:58.993 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:58.994 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:58.995 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:58.997 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:58.997 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:58.998 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:58.999 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:59.000 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:59.001 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:59.002 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:59.003 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896635kqh  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:59.003 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896635kqh  [0;39m <==      Total: 25
2023-08-05 22:14:59.004 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:59.004 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896635kqh  [0;39m 车厢2的座位数:25
2023-08-05 22:14:59.004 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896635kqh  [0;39m 无选座
2023-08-05 22:14:59.005 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896635kqh  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.005 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896635kqh  [0;39m 无选座
2023-08-05 22:14:59.005 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896635kqh  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.005 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896635kqh  [0;39m 无选座
2023-08-05 22:14:59.006 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896635kqh  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.006 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896635kqh  [0;39m 无选座
2023-08-05 22:14:59.006 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896635kqh  [0;39m 座位4在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:59.006 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896635kqh  [0;39m 座位4被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:59.007 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896635kqh  [0;39m 选中座位
2023-08-05 22:14:59.007 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896635kqh  [0;39m 最终选座:[DailyTrainSeat [Hash = 543615457, id=1687827565152178176, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=D, seatType=2, carriageSeatIndex=4, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:59.027 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896635kqh  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193438]
2023-08-05 22:14:59.028 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896635kqh  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193438
2023-08-05 22:14:59.028 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.028 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: DailyTrainSeat [Hash = 127530121, id=1687827565152178176, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:59 CST 2023]
2023-08-05 22:14:59.028 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:59.029 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:59.028(Timestamp), 1687827565152178176(Long)
2023-08-05 22:14:59.080 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896534ej6  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:59.080 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896534ej6  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.081 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896534ej6  [0;39m 参数值: ConfirmOrder [Hash = 1380632640, id=1687829549783584768, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:59 CST 2023, tickets=null]
2023-08-05 22:14:59.081 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:59.082 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:59.08(Timestamp), 1687829549783584768(Long)
2023-08-05 22:14:59.137 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896534ej6  [0;39m <==    Updates: 1
2023-08-05 22:14:59.138 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896534ej6  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.140 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896534ej6  [0;39m transaction 192.168.0.102:8091:7278238012553193414 will be commit
2023-08-05 22:14:59.197 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896534ej6  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193414
2023-08-05 22:14:59.198 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896534ej6  [0;39m [192.168.0.102:8091:7278238012553193414] commit status: Committed
2023-08-05 22:14:59.214 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896269lsg  [0;39m <==    Updates: 3
2023-08-05 22:14:59.215 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m <==    Updates: 1
2023-08-05 22:14:59.225 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.226 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896565x4n  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:59.226 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896565x4n  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:59.227 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896565x4n  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:59.228 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896534ej6  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:59.228 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896534ej6  [0;39m ------------- 结束 耗时：2693 ms -------------
2023-08-05 22:14:59.228 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896565x4n  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:59.240 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.241 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: ConfirmOrder [Hash = 1132590707, id=1687829556318310400, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:59, updateTime=2023-08-05 22:14:59, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:59.241 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896665v4p  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:59.242 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896665v4p  [0;39m ==> Parameters: 1687829556318310400(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:59.24(Timestamp), 2023-08-05 22:14:59.24(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:59.266 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896665v4p  [0;39m <==    Updates: 1
2023-08-05 22:14:59.267 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.267 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:59.268 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@62b485e0
2023-08-05 22:14:59.269 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896665v4p  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:59.269 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896665v4p  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:59.283 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896665v4p  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:14:59.284 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 17, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:14:59.285 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896665v4p  [0;39m <==      Total: 1
2023-08-05 22:14:59.285 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:59.286 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896665v4p  [0;39m 查出余票记录:DailyTrainTicket [Hash = 89150721, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=17, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:14:59.286 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896665v4p  [0;39m 本次购票没有选座
2023-08-05 22:14:59.287 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:59.288 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@20a78194
2023-08-05 22:14:59.289 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896665v4p  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:14:59.290 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896665v4p  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:14:59.303 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896665v4p  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:14:59.304 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:14:59.305 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896665v4p  [0;39m <==      Total: 1
2023-08-05 22:14:59.306 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:14:59.307 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896665v4p  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:14:59.307 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896665v4p  [0;39m 从车厢2选座
2023-08-05 22:14:59.308 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:59.308 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@1ee5ed1c
2023-08-05 22:14:59.309 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896665v4p  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:14:59.310 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896665v4p  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:14:59.324 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:14:59.325 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:14:59.326 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.379
2023-08-05 22:14:59.327 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:14:59.328 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:57.818
2023-08-05 22:14:59.329 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:14:59.330 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:14:59.330 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:14:59.331 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:14:59.332 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:14:59.333 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:14:59.334 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:14:59.335 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:14:59.335 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:14:59.337 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:14:59.338 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:14:59.339 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:14:59.340 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:14:59.340 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:14:59.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:14:59.342 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:14:59.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:14:59.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:14:59.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:14:59.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:14:59.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896665v4p  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:14:59.347 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896665v4p  [0;39m <==      Total: 25
2023-08-05 22:14:59.348 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:14:59.348 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896665v4p  [0;39m 车厢2的座位数:25
2023-08-05 22:14:59.348 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896665v4p  [0;39m 无选座
2023-08-05 22:14:59.349 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896665v4p  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.349 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896665v4p  [0;39m 无选座
2023-08-05 22:14:59.349 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896665v4p  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.349 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896665v4p  [0;39m 无选座
2023-08-05 22:14:59.349 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896665v4p  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.350 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896665v4p  [0;39m 无选座
2023-08-05 22:14:59.350 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896665v4p  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:14:59.350 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896665v4p  [0;39m 无选座
2023-08-05 22:14:59.350 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896665v4p  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:14:59.351 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896665v4p  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:14:59.351 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896665v4p  [0;39m 选中座位
2023-08-05 22:14:59.351 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896665v4p  [0;39m 最终选座:[DailyTrainSeat [Hash = 86888986, id=1687827565298978816, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:14:59.371 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896665v4p  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193442]
2023-08-05 22:14:59.372 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896665v4p  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193442
2023-08-05 22:14:59.372 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.372 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: DailyTrainSeat [Hash = 926569705, id=1687827565298978816, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:14:59 CST 2023]
2023-08-05 22:14:59.373 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:14:59.373 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m ==> Parameters: 01(String), 2023-08-05 22:14:59.372(Timestamp), 1687827565298978816(Long)
2023-08-05 22:14:59.398 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m <==    Updates: 1
2023-08-05 22:14:59.399 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.399 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896665v4p  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:59.399 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896665v4p  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:59.400 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896665v4p  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:59.401 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896665v4p  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:59.434 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896269lsg  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:59.434 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896269lsg  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.435 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896269lsg  [0;39m 参数值: ConfirmOrder [Hash = 1230798881, id=1687829543991250944, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:59 CST 2023, tickets=null]
2023-08-05 22:14:59.435 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:59.436 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:59.434(Timestamp), 1687829543991250944(Long)
2023-08-05 22:14:59.461 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896269lsg  [0;39m <==    Updates: 1
2023-08-05 22:14:59.461 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896269lsg  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.462 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896269lsg  [0;39m transaction 192.168.0.102:8091:7278238012553193374 will be commit
2023-08-05 22:14:59.546 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896269lsg  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193374
2023-08-05 22:14:59.547 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896269lsg  [0;39m [192.168.0.102:8091:7278238012553193374] commit status: Committed
2023-08-05 22:14:59.562 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896565x4n  [0;39m <==    Updates: 3
2023-08-05 22:14:59.563 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m <==    Updates: 1
2023-08-05 22:14:59.563 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.564 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896306w58  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:59.564 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896306w58  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:59.566 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896306w58  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:59.567 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896306w58  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:59.572 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896269lsg  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:59.572 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896269lsg  [0;39m ------------- 结束 耗时：3301 ms -------------
2023-08-05 22:14:59.584 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.584 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: ConfirmOrder [Hash = 539769065, id=1687829557756956672, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:59, updateTime=2023-08-05 22:14:59, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:59.585 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896698kx5  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:59.585 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896698kx5  [0;39m ==> Parameters: 1687829557756956672(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:59.583(Timestamp), 2023-08-05 22:14:59.583(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:59.780 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896565x4n  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:14:59.781 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896565x4n  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.781 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896565x4n  [0;39m 参数值: ConfirmOrder [Hash = 2132935123, id=1687829551280951296, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:14:59 CST 2023, tickets=null]
2023-08-05 22:14:59.781 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:14:59.782 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m ==> Parameters: S(String), 2023-08-05 22:14:59.781(Timestamp), 1687829551280951296(Long)
2023-08-05 22:14:59.813 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896565x4n  [0;39m <==    Updates: 1
2023-08-05 22:14:59.813 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896565x4n  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:14:59.814 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896565x4n  [0;39m transaction 192.168.0.102:8091:7278238012553193418 will be commit
2023-08-05 22:14:59.841 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896698kx5  [0;39m <==    Updates: 1
2023-08-05 22:14:59.841 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.842 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:59.842 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7e48ec23
2023-08-05 22:14:59.843 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896698kx5  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:59.844 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896698kx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:59.890 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896565x4n  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193418
2023-08-05 22:14:59.890 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896565x4n  [0;39m [192.168.0.102:8091:7278238012553193418] commit status: Committed
2023-08-05 22:14:59.903 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m <==    Updates: 1
2023-08-05 22:14:59.904 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:14:59.904 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448966002si  [0;39m 影响出发站区间:0-1
2023-08-05 22:14:59.905 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448966002si  [0;39m 影响到达站区间:0-2
2023-08-05 22:14:59.905 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448966002si  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:14:59.906 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448966002si  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:14:59.908 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896306w58  [0;39m <==    Updates: 3
2023-08-05 22:14:59.922 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896565x4n  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:14:59.923 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896565x4n  [0;39m ------------- 结束 耗时：3356 ms -------------
2023-08-05 22:14:59.937 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.938 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: ConfirmOrder [Hash = 1143929059, id=1687829559241740288, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:14:59, updateTime=2023-08-05 22:14:59, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:14:59.939 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896732yav  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:14:59.940 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896732yav  [0;39m ==> Parameters: 1687829559241740288(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:14:59.937(Timestamp), 2023-08-05 22:14:59.937(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:14:59.976 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896732yav  [0;39m <==    Updates: 1
2023-08-05 22:14:59.976 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:14:59.976 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:14:59.977 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@45ac70e2
2023-08-05 22:14:59.977 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896732yav  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:14:59.978 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896732yav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:14:59.999 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896732yav  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:00.000 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896732yav  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 15, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:00.000 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896732yav  [0;39m <==      Total: 1
2023-08-05 22:15:00.001 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.001 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896732yav  [0;39m 查出余票记录:DailyTrainTicket [Hash = 672662892, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=15, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:00.001 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896732yav  [0;39m 本次购票没有选座
2023-08-05 22:15:00.001 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.001 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@348b3433
2023-08-05 22:15:00.002 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896732yav  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:00.003 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896732yav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:00.019 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896732yav  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:00.019 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896732yav  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:00.019 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896732yav  [0;39m <==      Total: 1
2023-08-05 22:15:00.020 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.020 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896732yav  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:00.020 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896732yav  [0;39m 从车厢2选座
2023-08-05 22:15:00.020 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.020 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@57bf56f5
2023-08-05 22:15:00.021 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896732yav  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:00.021 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896732yav  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:00.038 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:00.038 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:00.039 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.414
2023-08-05 22:15:00.040 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:00.040 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:00.041 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:15:00.041 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:00.042 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:00.042 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:00.043 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:00.043 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:00.043 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:00.044 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:00.044 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:00.045 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:00.045 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:00.046 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:00.046 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:00.047 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:00.047 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:00.047 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:00.048 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:00.048 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:00.049 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:00.049 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:00.050 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896732yav  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:00.050 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896732yav  [0;39m <==      Total: 25
2023-08-05 22:15:00.050 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.050 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896732yav  [0;39m 车厢2的座位数:25
2023-08-05 22:15:00.050 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896732yav  [0;39m 无选座
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896732yav  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896732yav  [0;39m 无选座
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896732yav  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896732yav  [0;39m 无选座
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896732yav  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896732yav  [0;39m 无选座
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896732yav  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896732yav  [0;39m 无选座
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896732yav  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896732yav  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:00.051 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896732yav  [0;39m 选中座位
2023-08-05 22:15:00.052 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896732yav  [0;39m 最终选座:[DailyTrainSeat [Hash = 1378065272, id=1687827565298978816, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:00.070 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896732yav  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193461]
2023-08-05 22:15:00.070 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896732yav  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193461
2023-08-05 22:15:00.070 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.070 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: DailyTrainSeat [Hash = 1934468965, id=1687827565298978816, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023]
2023-08-05 22:15:00.070 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:00.071 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:00.07(Timestamp), 1687827565298978816(Long)
2023-08-05 22:15:00.134 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896306w58  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:00.134 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896306w58  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:00.134 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896306w58  [0;39m 参数值: ConfirmOrder [Hash = 1348379365, id=1687829544163217408, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023, tickets=null]
2023-08-05 22:15:00.134 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:00.135 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:00.134(Timestamp), 1687829544163217408(Long)
2023-08-05 22:15:00.152 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896698kx5  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:00.152 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 16, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:00.153 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896698kx5  [0;39m <==      Total: 1
2023-08-05 22:15:00.153 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.153 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896698kx5  [0;39m 查出余票记录:DailyTrainTicket [Hash = 143587656, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=16, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:00.153 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896698kx5  [0;39m 本次购票没有选座
2023-08-05 22:15:00.153 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.153 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4396b37f
2023-08-05 22:15:00.154 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896698kx5  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:00.154 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896698kx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:00.167 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896306w58  [0;39m <==    Updates: 1
2023-08-05 22:15:00.167 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896698kx5  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:00.168 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896306w58  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:00.168 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896306w58  [0;39m transaction 192.168.0.102:8091:7278238012553193375 will be commit
2023-08-05 22:15:00.169 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:00.170 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896698kx5  [0;39m <==      Total: 1
2023-08-05 22:15:00.171 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.171 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896698kx5  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:00.172 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896698kx5  [0;39m 从车厢2选座
2023-08-05 22:15:00.172 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.172 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@560b2819
2023-08-05 22:15:00.173 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896698kx5  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:00.174 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896698kx5  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:00.213 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:00.214 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:00.216 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.414
2023-08-05 22:15:00.217 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:00.218 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:00.219 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:15:00.221 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:00.222 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:00.223 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:00.224 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:00.225 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:00.226 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:00.228 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:00.229 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:00.231 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:00.233 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:00.234 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:00.236 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:00.237 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:00.239 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:00.240 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:00.242 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:00.244 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:00.245 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:00.245 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:00.246 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896698kx5  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:00.246 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896698kx5  [0;39m <==      Total: 25
2023-08-05 22:15:00.246 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896306w58  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193375
2023-08-05 22:15:00.247 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896306w58  [0;39m [192.168.0.102:8091:7278238012553193375] commit status: Committed
2023-08-05 22:15:00.247 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.247 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896698kx5  [0;39m 车厢2的座位数:25
2023-08-05 22:15:00.247 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896698kx5  [0;39m 无选座
2023-08-05 22:15:00.247 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896698kx5  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896698kx5  [0;39m 无选座
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896698kx5  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896698kx5  [0;39m 无选座
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896698kx5  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896698kx5  [0;39m 无选座
2023-08-05 22:15:00.248 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896698kx5  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.249 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896698kx5  [0;39m 无选座
2023-08-05 22:15:00.249 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896698kx5  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:00.249 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896698kx5  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:00.249 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896698kx5  [0;39m 选中座位
2023-08-05 22:15:00.249 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896698kx5  [0;39m 最终选座:[DailyTrainSeat [Hash = 1607175211, id=1687827565298978816, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:00.262 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896665v4p  [0;39m <==    Updates: 3
2023-08-05 22:15:00.262 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m <==    Updates: 1
2023-08-05 22:15:00.263 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.263 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448963379i9  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:00.264 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448963379i9  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:00.264 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448963379i9  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:00.264 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448963379i9  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:00.268 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896698kx5  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193463]
2023-08-05 22:15:00.268 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896698kx5  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193463
2023-08-05 22:15:00.268 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.269 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: DailyTrainSeat [Hash = 372412846, id=1687827565298978816, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023]
2023-08-05 22:15:00.269 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:00.269 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:00.268(Timestamp), 1687827565298978816(Long)
2023-08-05 22:15:00.278 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896306w58  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:00.278 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896306w58  [0;39m ------------- 结束 耗时：3969 ms -------------
2023-08-05 22:15:00.293 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:00.293 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: ConfirmOrder [Hash = 1009801914, id=1687829560730718208, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:00, updateTime=2023-08-05 22:15:00, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:00.293 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896764it9  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:00.294 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896764it9  [0;39m ==> Parameters: 1687829560730718208(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:00.292(Timestamp), 2023-08-05 22:15:00.292(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:00.326 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896764it9  [0;39m <==    Updates: 1
2023-08-05 22:15:00.326 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:00.327 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.327 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@273b7c34
2023-08-05 22:15:00.327 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896764it9  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:00.327 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896764it9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:00.343 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896764it9  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:00.344 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896764it9  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 14, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:00.345 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896764it9  [0;39m <==      Total: 1
2023-08-05 22:15:00.345 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.345 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896764it9  [0;39m 查出余票记录:DailyTrainTicket [Hash = 587021605, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=14, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:00.346 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896764it9  [0;39m 本次购票没有选座
2023-08-05 22:15:00.346 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.346 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@5fd3aaa4
2023-08-05 22:15:00.347 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896764it9  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:00.347 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896764it9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:00.364 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896764it9  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:00.364 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896764it9  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:00.365 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896764it9  [0;39m <==      Total: 1
2023-08-05 22:15:00.365 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.366 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896764it9  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:00.366 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896764it9  [0;39m 从车厢2选座
2023-08-05 22:15:00.366 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.366 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@3a336324
2023-08-05 22:15:00.367 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896764it9  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:00.367 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896764it9  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:00.384 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:00.385 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:00.386 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.470
2023-08-05 22:15:00.387 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:00.387 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:00.388 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 00, 2023-08-05 22:07:04.543, 2023-08-05 22:07:04.543
2023-08-05 22:15:00.389 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:00.390 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:00.390 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:00.391 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:00.391 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:00.392 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:00.393 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:00.394 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:00.394 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:00.395 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:00.396 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:00.396 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:00.397 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:00.398 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:00.398 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:00.399 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:00.400 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:00.401 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:00.401 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:00.402 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896764it9  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:00.402 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896764it9  [0;39m <==      Total: 25
2023-08-05 22:15:00.403 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.403 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896764it9  [0;39m 车厢2的座位数:25
2023-08-05 22:15:00.403 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896764it9  [0;39m 无选座
2023-08-05 22:15:00.403 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896764it9  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.403 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896764it9  [0;39m 无选座
2023-08-05 22:15:00.403 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896764it9  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896764it9  [0;39m 无选座
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896764it9  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896764it9  [0;39m 无选座
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896764it9  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896764it9  [0;39m 无选座
2023-08-05 22:15:00.404 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896764it9  [0;39m 座位5在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:00.405 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896764it9  [0;39m 座位5被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:00.405 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896764it9  [0;39m 选中座位
2023-08-05 22:15:00.405 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896764it9  [0;39m 最终选座:[DailyTrainSeat [Hash = 858285905, id=1687827565298978816, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=01, col=F, seatType=2, carriageSeatIndex=5, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:00.429 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896764it9  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193466]
2023-08-05 22:15:00.430 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896764it9  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193466
2023-08-05 22:15:00.430 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.430 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: DailyTrainSeat [Hash = 1039023765, id=1687827565298978816, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023]
2023-08-05 22:15:00.431 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:00.431 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:00.43(Timestamp), 1687827565298978816(Long)
2023-08-05 22:15:00.496 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896665v4p  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:00.497 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896665v4p  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:00.497 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896665v4p  [0;39m 参数值: ConfirmOrder [Hash = 767436789, id=1687829556318310400, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023, tickets=null]
2023-08-05 22:15:00.497 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:00.497 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:00.496(Timestamp), 1687829556318310400(Long)
2023-08-05 22:15:00.521 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896665v4p  [0;39m <==    Updates: 1
2023-08-05 22:15:00.522 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896665v4p  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:00.522 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896665v4p  [0;39m transaction 192.168.0.102:8091:7278238012553193442 will be commit
2023-08-05 22:15:00.820 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896665v4p  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193442
2023-08-05 22:15:00.821 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896665v4p  [0;39m [192.168.0.102:8091:7278238012553193442] commit status: Committed
2023-08-05 22:15:00.834 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448963379i9  [0;39m <==    Updates: 3
2023-08-05 22:15:00.838 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m <==    Updates: 1
2023-08-05 22:15:00.838 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.838 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896732yav  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:00.838 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896732yav  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:00.839 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896732yav  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:00.839 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896732yav  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:00.848 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896665v4p  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:00.848 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896665v4p  [0;39m ------------- 结束 耗时：4182 ms -------------
2023-08-05 22:15:00.860 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:00.860 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: ConfirmOrder [Hash = 463205196, id=1687829563113082880, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:00, updateTime=2023-08-05 22:15:00, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:00.861 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448968018hx  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:00.861 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448968018hx  [0;39m ==> Parameters: 1687829563113082880(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:00.86(Timestamp), 2023-08-05 22:15:00.86(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:00.888 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448968018hx  [0;39m <==    Updates: 1
2023-08-05 22:15:00.888 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:00.889 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.889 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@5e6f9dbf
2023-08-05 22:15:00.889 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448968018hx  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:00.890 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448968018hx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:00.902 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448968018hx  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:00.903 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448968018hx  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 13, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:00.904 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448968018hx  [0;39m <==      Total: 1
2023-08-05 22:15:00.904 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:00.904 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448968018hx  [0;39m 查出余票记录:DailyTrainTicket [Hash = 845719271, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=13, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:00.904 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448968018hx  [0;39m 本次购票没有选座
2023-08-05 22:15:00.904 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.905 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@78815fab
2023-08-05 22:15:00.905 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448968018hx  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:00.906 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448968018hx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:00.919 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448968018hx  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:00.919 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448968018hx  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:00.920 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448968018hx  [0;39m <==      Total: 1
2023-08-05 22:15:00.920 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:00.920 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448968018hx  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:00.920 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448968018hx  [0;39m 从车厢2选座
2023-08-05 22:15:00.921 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.921 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@10645fe4
2023-08-05 22:15:00.921 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448968018hx  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:00.921 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448968018hx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:00.966 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:00.967 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:00.967 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.470
2023-08-05 22:15:00.967 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:00.968 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:00.969 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:14:59.372
2023-08-05 22:15:00.969 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:00.969 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:00.970 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:00.970 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:00.971 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:00.971 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:00.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:00.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:00.972 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:00.973 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:00.973 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:00.974 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:00.974 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:00.975 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:00.975 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:00.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:00.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:00.976 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:00.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:00.977 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448968018hx  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:00.978 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448968018hx  [0;39m <==      Total: 25
2023-08-05 22:15:00.978 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:00.978 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448968018hx  [0;39m 车厢2的座位数:25
2023-08-05 22:15:00.978 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.978 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448968018hx  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.978 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.978 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448968018hx  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448968018hx  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448968018hx  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448968018hx  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448968018hx  [0;39m 无选座
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448968018hx  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448968018hx  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:00.979 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448968018hx  [0;39m 选中座位
2023-08-05 22:15:00.980 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448968018hx  [0;39m 最终选座:[DailyTrainSeat [Hash = 365095892, id=1687827565462556672, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:00.998 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448968018hx  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193482]
2023-08-05 22:15:00.998 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448968018hx  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193482
2023-08-05 22:15:00.999 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:00.999 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: DailyTrainSeat [Hash = 1108298914, id=1687827565462556672, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:00 CST 2023]
2023-08-05 22:15:00.999 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:00.999 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:00.999(Timestamp), 1687827565462556672(Long)
2023-08-05 22:15:01.023 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m <==    Updates: 1
2023-08-05 22:15:01.023 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.024 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448968018hx  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:01.024 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448968018hx  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:01.024 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448968018hx  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:01.024 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448968018hx  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:01.072 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448963379i9  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:01.073 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448963379i9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.073 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448963379i9  [0;39m 参数值: ConfirmOrder [Hash = 1914620494, id=1687829544255492096, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:01 CST 2023, tickets=null]
2023-08-05 22:15:01.074 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:01.075 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:01.073(Timestamp), 1687829544255492096(Long)
2023-08-05 22:15:01.101 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448963379i9  [0;39m <==    Updates: 1
2023-08-05 22:15:01.103 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448963379i9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.103 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448963379i9  [0;39m transaction 192.168.0.102:8091:7278238012553193376 will be commit
2023-08-05 22:15:01.178 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448963379i9  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193376
2023-08-05 22:15:01.179 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448963379i9  [0;39m [192.168.0.102:8091:7278238012553193376] commit status: Committed
2023-08-05 22:15:01.196 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896732yav  [0;39m <==    Updates: 3
2023-08-05 22:15:01.196 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m <==    Updates: 1
2023-08-05 22:15:01.197 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.198 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896402wl7  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:01.198 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896402wl7  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:01.199 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896402wl7  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:01.200 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896402wl7  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:01.208 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448963379i9  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:01.208 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448963379i9  [0;39m ------------- 结束 耗时：4869 ms -------------
2023-08-05 22:15:01.226 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:01.227 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: ConfirmOrder [Hash = 1843127689, id=1687829564648198144, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:01, updateTime=2023-08-05 22:15:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:01.228 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896832s3x  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:01.229 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896832s3x  [0;39m ==> Parameters: 1687829564648198144(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:01.226(Timestamp), 2023-08-05 22:15:01.226(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:01.255 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896832s3x  [0;39m <==    Updates: 1
2023-08-05 22:15:01.255 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:01.255 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:01.255 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@40c15b68
2023-08-05 22:15:01.256 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896832s3x  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:01.257 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896832s3x  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:01.282 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896832s3x  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:01.283 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 12, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:01.284 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896832s3x  [0;39m <==      Total: 1
2023-08-05 22:15:01.284 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:01.284 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896832s3x  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1134214497, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=12, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:01.285 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896832s3x  [0;39m 本次购票没有选座
2023-08-05 22:15:01.285 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:01.285 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@e5ff7b0
2023-08-05 22:15:01.286 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896832s3x  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:01.286 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896832s3x  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:01.325 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896832s3x  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:01.326 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:01.326 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896832s3x  [0;39m <==      Total: 1
2023-08-05 22:15:01.327 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:01.327 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896832s3x  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:01.327 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896832s3x  [0;39m 从车厢2选座
2023-08-05 22:15:01.327 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:01.327 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@16931874
2023-08-05 22:15:01.328 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896832s3x  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:01.329 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896832s3x  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:01.343 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:01.344 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:01.345 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.473
2023-08-05 22:15:01.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:01.346 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:01.347 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:14:59.372
2023-08-05 22:15:01.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:01.348 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:01.349 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:01.350 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:01.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:01.351 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:01.352 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:01.353 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:01.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:01.354 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:01.355 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:01.356 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:01.356 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:01.357 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:01.358 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:01.359 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:01.359 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:01.360 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:01.360 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:01.361 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896832s3x  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:01.362 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896832s3x  [0;39m <==      Total: 25
2023-08-05 22:15:01.362 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:01.362 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896832s3x  [0;39m 车厢2的座位数:25
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896832s3x  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896832s3x  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.363 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896832s3x  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896832s3x  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896832s3x  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896832s3x  [0;39m 无选座
2023-08-05 22:15:01.364 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896832s3x  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:01.365 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896832s3x  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:01.365 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896832s3x  [0;39m 选中座位
2023-08-05 22:15:01.365 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896832s3x  [0;39m 最终选座:[DailyTrainSeat [Hash = 1902594987, id=1687827565462556672, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:01.384 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896832s3x  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193486]
2023-08-05 22:15:01.384 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896832s3x  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193486
2023-08-05 22:15:01.384 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.385 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: DailyTrainSeat [Hash = 1256936744, id=1687827565462556672, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:01 CST 2023]
2023-08-05 22:15:01.385 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:01.386 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:01.384(Timestamp), 1687827565462556672(Long)
2023-08-05 22:15:01.481 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896732yav  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:01.481 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896732yav  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.482 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896732yav  [0;39m 参数值: ConfirmOrder [Hash = 1988399654, id=1687829559241740288, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:01 CST 2023, tickets=null]
2023-08-05 22:15:01.482 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:01.482 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:01.481(Timestamp), 1687829559241740288(Long)
2023-08-05 22:15:01.518 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896732yav  [0;39m <==    Updates: 1
2023-08-05 22:15:01.518 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896732yav  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.519 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896732yav  [0;39m transaction 192.168.0.102:8091:7278238012553193461 will be commit
2023-08-05 22:15:01.595 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896732yav  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193461
2023-08-05 22:15:01.596 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896732yav  [0;39m [192.168.0.102:8091:7278238012553193461] commit status: Committed
2023-08-05 22:15:01.613 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896402wl7  [0;39m <==    Updates: 3
2023-08-05 22:15:01.613 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m <==    Updates: 1
2023-08-05 22:15:01.613 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.614 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896698kx5  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:01.614 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896698kx5  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:01.615 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896698kx5  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:01.616 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896698kx5  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:01.630 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896732yav  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:01.630 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896732yav  [0;39m ------------- 结束 耗时：4896 ms -------------
2023-08-05 22:15:01.645 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:01.646 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: ConfirmOrder [Hash = 392557605, id=1687829566405611520, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:01, updateTime=2023-08-05 22:15:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:01.646 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896863ubc  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:01.646 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896863ubc  [0;39m ==> Parameters: 1687829566405611520(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:01.645(Timestamp), 2023-08-05 22:15:01.645(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:01.680 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896863ubc  [0;39m <==    Updates: 1
2023-08-05 22:15:01.681 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:01.681 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:01.682 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@228e03fe
2023-08-05 22:15:01.683 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896863ubc  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:01.684 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896863ubc  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:01.703 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896863ubc  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:01.705 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 11, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:01.707 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896863ubc  [0;39m <==      Total: 1
2023-08-05 22:15:01.708 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:01.708 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896863ubc  [0;39m 查出余票记录:DailyTrainTicket [Hash = 581182125, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=11, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:01.709 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896863ubc  [0;39m 本次购票没有选座
2023-08-05 22:15:01.709 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:01.710 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@7483a144
2023-08-05 22:15:01.711 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896863ubc  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:01.712 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896863ubc  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:01.728 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896863ubc  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:01.729 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:01.730 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896863ubc  [0;39m <==      Total: 1
2023-08-05 22:15:01.731 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:01.731 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896863ubc  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:01.731 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896863ubc  [0;39m 从车厢2选座
2023-08-05 22:15:01.731 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:01.732 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2cc26ee8
2023-08-05 22:15:01.733 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896863ubc  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:01.733 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896863ubc  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:01.753 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:01.754 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:01.755 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.473
2023-08-05 22:15:01.756 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:01.756 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:01.757 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:01.757 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:01.758 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:01.759 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:01.759 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:01.760 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:01.760 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:01.761 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:01.762 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:01.762 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:01.763 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:01.763 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:01.764 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:01.765 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:01.765 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:01.766 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:01.766 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:01.767 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:01.767 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:01.768 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:01.769 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896863ubc  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:01.769 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896863ubc  [0;39m <==      Total: 25
2023-08-05 22:15:01.770 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896863ubc  [0;39m 车厢2的座位数:25
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896863ubc  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896863ubc  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.770 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896863ubc  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896863ubc  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896863ubc  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896863ubc  [0;39m 无选座
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896863ubc  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:01.771 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896863ubc  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:01.772 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896863ubc  [0;39m 选中座位
2023-08-05 22:15:01.772 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896863ubc  [0;39m 最终选座:[DailyTrainSeat [Hash = 1175494076, id=1687827565462556672, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:01.787 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896863ubc  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193502]
2023-08-05 22:15:01.787 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896863ubc  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193502
2023-08-05 22:15:01.788 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.788 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: DailyTrainSeat [Hash = 1713290930, id=1687827565462556672, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:01 CST 2023]
2023-08-05 22:15:01.788 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:01.788 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:01.788(Timestamp), 1687827565462556672(Long)
2023-08-05 22:15:01.842 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896402wl7  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:01.843 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896402wl7  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.843 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896402wl7  [0;39m 参数值: ConfirmOrder [Hash = 442003554, id=1687829544532316160, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:01 CST 2023, tickets=null]
2023-08-05 22:15:01.843 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:01.844 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:01.843(Timestamp), 1687829544532316160(Long)
2023-08-05 22:15:01.868 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896402wl7  [0;39m <==    Updates: 1
2023-08-05 22:15:01.868 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896402wl7  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:01.868 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896402wl7  [0;39m transaction 192.168.0.102:8091:7278238012553193380 will be commit
2023-08-05 22:15:01.947 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896402wl7  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193380
2023-08-05 22:15:01.948 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896402wl7  [0;39m [192.168.0.102:8091:7278238012553193380] commit status: Committed
2023-08-05 22:15:01.964 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448968018hx  [0;39m <==    Updates: 3
2023-08-05 22:15:01.966 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m <==    Updates: 1
2023-08-05 22:15:01.968 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:01.969 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896435rlp  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:01.969 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896435rlp  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:01.970 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896435rlp  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:01.971 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896435rlp  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:01.975 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896402wl7  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:01.976 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896402wl7  [0;39m ------------- 结束 耗时：5571 ms -------------
2023-08-05 22:15:01.988 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:01.989 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: ConfirmOrder [Hash = 897681165, id=1687829567844257792, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:01, updateTime=2023-08-05 22:15:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:01.990 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896897r03  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:01.991 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896897r03  [0;39m ==> Parameters: 1687829567844257792(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:01.988(Timestamp), 2023-08-05 22:15:01.988(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:02.021 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896897r03  [0;39m <==    Updates: 1
2023-08-05 22:15:02.021 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:02.022 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.022 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@234a5b28
2023-08-05 22:15:02.024 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896897r03  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:02.025 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896897r03  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:02.039 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896897r03  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:02.041 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896897r03  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 10, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:02.042 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896897r03  [0;39m <==      Total: 1
2023-08-05 22:15:02.042 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.043 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896897r03  [0;39m 查出余票记录:DailyTrainTicket [Hash = 253679304, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=10, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:02.043 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896897r03  [0;39m 本次购票没有选座
2023-08-05 22:15:02.044 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.045 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@56661634
2023-08-05 22:15:02.047 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896897r03  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:02.048 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896897r03  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:02.062 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896897r03  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:02.063 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896897r03  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:02.064 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896897r03  [0;39m <==      Total: 1
2023-08-05 22:15:02.065 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.065 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896897r03  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:02.066 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896897r03  [0;39m 从车厢2选座
2023-08-05 22:15:02.066 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.066 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6dc98689
2023-08-05 22:15:02.068 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896897r03  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:02.069 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896897r03  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:02.083 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:02.085 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:02.086 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.534
2023-08-05 22:15:02.088 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:02.089 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:02.091 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:02.092 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 00, 2023-08-05 22:07:04.583, 2023-08-05 22:07:04.583
2023-08-05 22:15:02.094 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:02.095 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:02.097 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:02.098 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:02.099 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:02.102 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:02.103 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:02.104 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:02.106 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:02.108 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:02.110 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:02.111 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:02.113 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:02.114 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:02.115 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:02.116 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:02.118 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:02.120 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:02.121 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896897r03  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:02.122 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896897r03  [0;39m <==      Total: 25
2023-08-05 22:15:02.123 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.123 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896897r03  [0;39m 车厢2的座位数:25
2023-08-05 22:15:02.124 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.124 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896897r03  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.124 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896897r03  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.125 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.125 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896897r03  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.126 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.126 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896897r03  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.126 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.127 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896897r03  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.127 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896897r03  [0;39m 无选座
2023-08-05 22:15:02.128 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896897r03  [0;39m 座位6在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:02.128 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896897r03  [0;39m 座位6被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:02.128 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896897r03  [0;39m 选中座位
2023-08-05 22:15:02.129 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896897r03  [0;39m 最终选座:[DailyTrainSeat [Hash = 1923729023, id=1687827565462556672, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=A, seatType=2, carriageSeatIndex=6, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:02.148 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896897r03  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193506]
2023-08-05 22:15:02.149 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896897r03  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193506
2023-08-05 22:15:02.149 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.149 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: DailyTrainSeat [Hash = 1904748093, id=1687827565462556672, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023]
2023-08-05 22:15:02.150 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:02.150 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:02.149(Timestamp), 1687827565462556672(Long)
2023-08-05 22:15:02.202 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448968018hx  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:02.203 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448968018hx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.204 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448968018hx  [0;39m 参数值: ConfirmOrder [Hash = 2013578332, id=1687829563113082880, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023, tickets=null]
2023-08-05 22:15:02.205 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:02.206 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:02.203(Timestamp), 1687829563113082880(Long)
2023-08-05 22:15:02.233 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448968018hx  [0;39m <==    Updates: 1
2023-08-05 22:15:02.234 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448968018hx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.234 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448968018hx  [0;39m transaction 192.168.0.102:8091:7278238012553193482 will be commit
2023-08-05 22:15:02.306 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448968018hx  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193482
2023-08-05 22:15:02.307 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448968018hx  [0;39m [192.168.0.102:8091:7278238012553193482] commit status: Committed
2023-08-05 22:15:02.322 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m <==    Updates: 1
2023-08-05 22:15:02.323 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.324 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896832s3x  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:02.324 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896832s3x  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:02.324 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896435rlp  [0;39m <==    Updates: 3
2023-08-05 22:15:02.326 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896832s3x  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:02.327 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896832s3x  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:02.334 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448968018hx  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:02.335 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448968018hx  [0;39m ------------- 结束 耗时：5532 ms -------------
2023-08-05 22:15:02.349 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:02.350 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: ConfirmOrder [Hash = 2043086329, id=1687829569358401536, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:02, updateTime=2023-08-05 22:15:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:02.351 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969345kt  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:02.353 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969345kt  [0;39m ==> Parameters: 1687829569358401536(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:02.349(Timestamp), 2023-08-05 22:15:02.349(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:02.379 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969345kt  [0;39m <==    Updates: 1
2023-08-05 22:15:02.380 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:02.380 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.380 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4ad3ca74
2023-08-05 22:15:02.381 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969345kt  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:02.381 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969345kt  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:02.436 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448969345kt  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:02.438 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448969345kt  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 9, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:02.439 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969345kt  [0;39m <==      Total: 1
2023-08-05 22:15:02.440 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.441 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448969345kt  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1895489655, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=9, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:02.441 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448969345kt  [0;39m 本次购票没有选座
2023-08-05 22:15:02.442 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.442 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@1ac91d59
2023-08-05 22:15:02.443 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969345kt  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:02.444 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969345kt  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:02.460 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448969345kt  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:02.463 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448969345kt  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:02.464 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969345kt  [0;39m <==      Total: 1
2023-08-05 22:15:02.465 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.465 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448969345kt  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:02.465 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448969345kt  [0;39m 从车厢2选座
2023-08-05 22:15:02.466 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.466 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@120b11e1
2023-08-05 22:15:02.467 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969345kt  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:02.468 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969345kt  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:02.482 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:02.484 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:02.485 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.534
2023-08-05 22:15:02.487 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:02.488 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:02.489 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:02.491 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:00.999
2023-08-05 22:15:02.492 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:02.494 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:02.496 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:02.497 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:02.499 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:02.500 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:02.502 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:02.503 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:02.504 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:02.506 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:02.508 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:02.509 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:02.510 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:02.511 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:02.513 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:02.514 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:02.516 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:02.517 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:02.518 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969345kt  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:02.519 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969345kt  [0;39m <==      Total: 25
2023-08-05 22:15:02.520 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.520 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448969345kt  [0;39m 车厢2的座位数:25
2023-08-05 22:15:02.520 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.521 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.521 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.521 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.522 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.522 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.522 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.523 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.523 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.523 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.524 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.525 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969345kt  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.525 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969345kt  [0;39m 无选座
2023-08-05 22:15:02.525 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448969345kt  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:02.525 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448969345kt  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:02.525 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448969345kt  [0;39m 选中座位
2023-08-05 22:15:02.526 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448969345kt  [0;39m 最终选座:[DailyTrainSeat [Hash = 1730433705, id=1687827565621940224, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:02.545 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448969345kt  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193510]
2023-08-05 22:15:02.545 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448969345kt  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193510
2023-08-05 22:15:02.545 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.546 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: DailyTrainSeat [Hash = 1178101591, id=1687827565621940224, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023]
2023-08-05 22:15:02.546 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:02.547 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:02.545(Timestamp), 1687827565621940224(Long)
2023-08-05 22:15:02.570 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m <==    Updates: 1
2023-08-05 22:15:02.571 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.571 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448969345kt  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:02.571 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448969345kt  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:02.572 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969345kt  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:02.573 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969345kt  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:02.601 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896435rlp  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:02.602 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896435rlp  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.603 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896435rlp  [0;39m 参数值: ConfirmOrder [Hash = 1139423309, id=1687829544691699712, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023, tickets=null]
2023-08-05 22:15:02.604 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:02.605 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:02.602(Timestamp), 1687829544691699712(Long)
2023-08-05 22:15:02.636 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896435rlp  [0;39m <==    Updates: 1
2023-08-05 22:15:02.637 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896435rlp  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.637 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896435rlp  [0;39m transaction 192.168.0.102:8091:7278238012553193381 will be commit
2023-08-05 22:15:02.705 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896435rlp  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193381
2023-08-05 22:15:02.706 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896435rlp  [0;39m [192.168.0.102:8091:7278238012553193381] commit status: Committed
2023-08-05 22:15:02.719 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448966002si  [0;39m <==    Updates: 3
2023-08-05 22:15:02.719 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m <==    Updates: 1
2023-08-05 22:15:02.720 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.721 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896369chx  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:02.721 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896369chx  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:02.723 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896369chx  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:02.725 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896369chx  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:02.738 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896435rlp  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:02.738 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896435rlp  [0;39m ------------- 结束 耗时：6301 ms -------------
2023-08-05 22:15:02.752 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:02.753 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: ConfirmOrder [Hash = 801665348, id=1687829571048706048, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:02, updateTime=2023-08-05 22:15:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:02.754 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969699ad  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:02.755 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969699ad  [0;39m ==> Parameters: 1687829571048706048(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:02.752(Timestamp), 2023-08-05 22:15:02.752(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:02.799 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448969699ad  [0;39m <==    Updates: 1
2023-08-05 22:15:02.799 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:02.800 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.800 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7d291147
2023-08-05 22:15:02.800 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969699ad  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:02.801 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969699ad  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:02.816 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448969699ad  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:02.817 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448969699ad  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 8, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:02.817 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448969699ad  [0;39m <==      Total: 1
2023-08-05 22:15:02.817 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:02.818 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448969699ad  [0;39m 查出余票记录:DailyTrainTicket [Hash = 904252327, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=8, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:02.818 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448969699ad  [0;39m 本次购票没有选座
2023-08-05 22:15:02.818 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.818 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@4cf19b2f
2023-08-05 22:15:02.819 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969699ad  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:02.819 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969699ad  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:02.837 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448969699ad  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:02.838 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448969699ad  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:02.838 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448969699ad  [0;39m <==      Total: 1
2023-08-05 22:15:02.839 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:02.839 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448969699ad  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:02.839 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448969699ad  [0;39m 从车厢2选座
2023-08-05 22:15:02.839 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.839 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@5026cab1
2023-08-05 22:15:02.839 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969699ad  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:02.840 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969699ad  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:02.859 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:02.859 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:02.860 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.594
2023-08-05 22:15:02.860 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:02.861 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.185
2023-08-05 22:15:02.861 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:02.862 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:00.999
2023-08-05 22:15:02.862 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:02.862 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:02.863 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:02.863 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:02.864 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:02.864 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:02.864 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:02.865 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:02.865 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:02.866 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:02.867 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:02.867 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:02.867 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:02.868 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:02.868 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:02.869 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:02.869 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:02.870 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:02.870 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448969699ad  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:02.870 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448969699ad  [0;39m <==      Total: 25
2023-08-05 22:15:02.871 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448969699ad  [0;39m 车厢2的座位数:25
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.871 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448969699ad  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448969699ad  [0;39m 无选座
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448969699ad  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448969699ad  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:02.872 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448969699ad  [0;39m 选中座位
2023-08-05 22:15:02.873 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448969699ad  [0;39m 最终选座:[DailyTrainSeat [Hash = 191715661, id=1687827565621940224, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:02.891 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448969699ad  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193526]
2023-08-05 22:15:02.892 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448969699ad  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193526
2023-08-05 22:15:02.892 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:02.892 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: DailyTrainSeat [Hash = 1250789647, id=1687827565621940224, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023]
2023-08-05 22:15:02.893 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:02.893 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:02.892(Timestamp), 1687827565621940224(Long)
2023-08-05 22:15:02.945 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448966002si  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:02.945 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448966002si  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.945 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448966002si  [0;39m 参数值: ConfirmOrder [Hash = 1428909409, id=1687829552560214016, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:02 CST 2023, tickets=null]
2023-08-05 22:15:02.946 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:02.946 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:02.945(Timestamp), 1687829552560214016(Long)
2023-08-05 22:15:02.970 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448966002si  [0;39m <==    Updates: 1
2023-08-05 22:15:02.971 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448966002si  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:02.971 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448966002si  [0;39m transaction 192.168.0.102:8091:7278238012553193422 will be commit
2023-08-05 22:15:03.026 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448966002si  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193422
2023-08-05 22:15:03.026 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448966002si  [0;39m [192.168.0.102:8091:7278238012553193422] commit status: Committed
2023-08-05 22:15:03.039 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m <==    Updates: 1
2023-08-05 22:15:03.039 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896832s3x  [0;39m <==    Updates: 3
2023-08-05 22:15:03.040 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.040 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896635kqh  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:03.040 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896635kqh  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:03.041 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896635kqh  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:03.041 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896635kqh  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:03.051 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448966002si  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:03.051 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448966002si  [0;39m ------------- 结束 耗时：6450 ms -------------
2023-08-05 22:15:03.062 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.062 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: ConfirmOrder [Hash = 1000080657, id=1687829572348940288, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:03, updateTime=2023-08-05 22:15:03, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:03.062 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896999h3j  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:03.063 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896999h3j  [0;39m ==> Parameters: 1687829572348940288(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:03.062(Timestamp), 2023-08-05 22:15:03.062(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:03.085 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244896999h3j  [0;39m <==    Updates: 1
2023-08-05 22:15:03.086 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.086 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.087 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@53eb9944
2023-08-05 22:15:03.088 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896999h3j  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:03.088 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896999h3j  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:03.104 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896999h3j  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:03.104 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 7, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:03.105 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244896999h3j  [0;39m <==      Total: 1
2023-08-05 22:15:03.105 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.106 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244896999h3j  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1642444173, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=7, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:03.106 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244896999h3j  [0;39m 本次购票没有选座
2023-08-05 22:15:03.106 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.106 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@588b25fa
2023-08-05 22:15:03.106 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896999h3j  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:03.107 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896999h3j  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:03.119 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896999h3j  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:03.120 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:03.120 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244896999h3j  [0;39m <==      Total: 1
2023-08-05 22:15:03.120 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.121 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244896999h3j  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:03.121 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244896999h3j  [0;39m 从车厢2选座
2023-08-05 22:15:03.121 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.121 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@7ad9efc5
2023-08-05 22:15:03.121 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896999h3j  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:03.122 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896999h3j  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:03.164 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:03.166 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:03.167 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.594
2023-08-05 22:15:03.167 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:03.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.464
2023-08-05 22:15:03.168 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:03.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:00.999
2023-08-05 22:15:03.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:03.169 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:03.170 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:03.170 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:03.171 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:03.171 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:03.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:03.172 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:03.173 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:03.173 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:03.174 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:03.174 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:03.175 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:03.176 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:03.176 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:03.177 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:03.177 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:03.177 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:03.178 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244896999h3j  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:03.178 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244896999h3j  [0;39m <==      Total: 25
2023-08-05 22:15:03.179 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244896999h3j  [0;39m 车厢2的座位数:25
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.179 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.180 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.180 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.180 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.180 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.180 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244896999h3j  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.181 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244896999h3j  [0;39m 无选座
2023-08-05 22:15:03.181 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244896999h3j  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:03.181 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244896999h3j  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:03.181 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244896999h3j  [0;39m 选中座位
2023-08-05 22:15:03.181 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244896999h3j  [0;39m 最终选座:[DailyTrainSeat [Hash = 939074330, id=1687827565621940224, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:03.208 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244896999h3j  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193530]
2023-08-05 22:15:03.209 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244896999h3j  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193530
2023-08-05 22:15:03.209 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.209 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: DailyTrainSeat [Hash = 1301722853, id=1687827565621940224, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023]
2023-08-05 22:15:03.209 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:03.209 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:03.209(Timestamp), 1687827565621940224(Long)
2023-08-05 22:15:03.272 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896832s3x  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:03.272 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896832s3x  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.273 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896832s3x  [0;39m 参数值: ConfirmOrder [Hash = 315771435, id=1687829564648198144, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023, tickets=null]
2023-08-05 22:15:03.273 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:03.273 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:03.272(Timestamp), 1687829564648198144(Long)
2023-08-05 22:15:03.300 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896832s3x  [0;39m <==    Updates: 1
2023-08-05 22:15:03.300 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896832s3x  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.300 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896832s3x  [0;39m transaction 192.168.0.102:8091:7278238012553193486 will be commit
2023-08-05 22:15:03.350 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896832s3x  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193486
2023-08-05 22:15:03.351 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896832s3x  [0;39m [192.168.0.102:8091:7278238012553193486] commit status: Committed
2023-08-05 22:15:03.364 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969345kt  [0;39m <==    Updates: 3
2023-08-05 22:15:03.367 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m <==    Updates: 1
2023-08-05 22:15:03.367 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.368 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896863ubc  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:03.368 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896863ubc  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:03.368 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896863ubc  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:03.369 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896863ubc  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:03.376 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896832s3x  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:03.376 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896832s3x  [0;39m ------------- 结束 耗时：6542 ms -------------
2023-08-05 22:15:03.388 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.389 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: ConfirmOrder [Hash = 1490998732, id=1687829573716283392, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:03, updateTime=2023-08-05 22:15:03, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:03.389 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897038i8k  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:03.389 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897038i8k  [0;39m ==> Parameters: 1687829573716283392(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:03.388(Timestamp), 2023-08-05 22:15:03.388(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:03.413 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897038i8k  [0;39m <==    Updates: 1
2023-08-05 22:15:03.414 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.414 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.414 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1ee7fd73
2023-08-05 22:15:03.415 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897038i8k  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:03.415 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897038i8k  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:03.428 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244897038i8k  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:03.429 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:03.430 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897038i8k  [0;39m <==      Total: 1
2023-08-05 22:15:03.430 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.430 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244897038i8k  [0;39m 查出余票记录:DailyTrainTicket [Hash = 490198378, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:03.430 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244897038i8k  [0;39m 本次购票没有选座
2023-08-05 22:15:03.430 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.431 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@3b84f94b
2023-08-05 22:15:03.431 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897038i8k  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:03.431 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897038i8k  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:03.444 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244897038i8k  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:03.444 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:03.445 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897038i8k  [0;39m <==      Total: 1
2023-08-05 22:15:03.445 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.445 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244897038i8k  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:03.445 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244897038i8k  [0;39m 从车厢2选座
2023-08-05 22:15:03.445 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.445 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@6337f825
2023-08-05 22:15:03.446 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897038i8k  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:03.446 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897038i8k  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:03.459 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:03.459 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:03.460 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.594
2023-08-05 22:15:03.461 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:03.461 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.464
2023-08-05 22:15:03.461 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:03.462 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:01.384
2023-08-05 22:15:03.462 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 00, 2023-08-05 22:07:04.620, 2023-08-05 22:07:04.620
2023-08-05 22:15:03.463 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:03.464 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:03.464 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:03.465 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:03.465 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:03.466 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:03.466 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:03.466 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:03.467 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:03.467 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:03.468 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:03.468 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:03.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:03.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:03.469 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:03.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:03.470 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:03.471 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897038i8k  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:03.471 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897038i8k  [0;39m <==      Total: 25
2023-08-05 22:15:03.471 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.471 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244897038i8k  [0;39m 车厢2的座位数:25
2023-08-05 22:15:03.471 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.471 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.472 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897038i8k  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.473 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897038i8k  [0;39m 无选座
2023-08-05 22:15:03.473 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244897038i8k  [0;39m 座位7在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:03.473 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244897038i8k  [0;39m 座位7被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:03.473 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244897038i8k  [0;39m 选中座位
2023-08-05 22:15:03.473 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244897038i8k  [0;39m 最终选座:[DailyTrainSeat [Hash = 1557797447, id=1687827565621940224, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=B, seatType=2, carriageSeatIndex=7, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:03.495 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244897038i8k  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193534]
2023-08-05 22:15:03.495 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244897038i8k  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193534
2023-08-05 22:15:03.496 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.496 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: DailyTrainSeat [Hash = 178028062, id=1687827565621940224, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023]
2023-08-05 22:15:03.496 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:03.496 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:03.496(Timestamp), 1687827565621940224(Long)
2023-08-05 22:15:03.559 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448969345kt  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:03.559 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969345kt  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.560 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969345kt  [0;39m 参数值: ConfirmOrder [Hash = 257909288, id=1687829569358401536, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023, tickets=null]
2023-08-05 22:15:03.560 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:03.560 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:03.559(Timestamp), 1687829569358401536(Long)
2023-08-05 22:15:03.585 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969345kt  [0;39m <==    Updates: 1
2023-08-05 22:15:03.585 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969345kt  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.585 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448969345kt  [0;39m transaction 192.168.0.102:8091:7278238012553193510 will be commit
2023-08-05 22:15:03.642 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448969345kt  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193510
2023-08-05 22:15:03.643 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448969345kt  [0;39m [192.168.0.102:8091:7278238012553193510] commit status: Committed
2023-08-05 22:15:03.657 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896698kx5  [0;39m <==    Updates: 3
2023-08-05 22:15:03.660 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m <==    Updates: 1
2023-08-05 22:15:03.661 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.662 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448969699ad  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:03.662 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448969699ad  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:03.662 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969699ad  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:03.663 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969699ad  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:03.674 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448969345kt  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:03.675 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448969345kt  [0;39m ------------- 结束 耗时：6739 ms -------------
2023-08-05 22:15:03.686 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.688 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: ConfirmOrder [Hash = 1209365037, id=1687829574966185984, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:03, updateTime=2023-08-05 22:15:03, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:03.689 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448970687wq  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:03.690 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448970687wq  [0;39m ==> Parameters: 1687829574966185984(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:03.686(Timestamp), 2023-08-05 22:15:03.686(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:03.723 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912448970687wq  [0;39m <==    Updates: 1
2023-08-05 22:15:03.724 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:03.724 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.725 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@8e5e60e
2023-08-05 22:15:03.726 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448970687wq  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:03.727 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448970687wq  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:03.742 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448970687wq  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:03.744 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912448970687wq  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 5, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:03.744 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912448970687wq  [0;39m <==      Total: 1
2023-08-05 22:15:03.745 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:03.745 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912448970687wq  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1951485095, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=5, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:03.745 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m16912448970687wq  [0;39m 本次购票没有选座
2023-08-05 22:15:03.746 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.746 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@2bd94ca1
2023-08-05 22:15:03.747 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448970687wq  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:03.748 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448970687wq  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:03.761 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448970687wq  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:03.762 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m16912448970687wq  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:03.762 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m16912448970687wq  [0;39m <==      Total: 1
2023-08-05 22:15:03.762 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:03.762 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m16912448970687wq  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:03.762 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m16912448970687wq  [0;39m 从车厢2选座
2023-08-05 22:15:03.763 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.763 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@741891b3
2023-08-05 22:15:03.763 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448970687wq  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:03.763 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448970687wq  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:03.776 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:03.777 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:03.778 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.594
2023-08-05 22:15:03.778 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:03.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.464
2023-08-05 22:15:03.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.070
2023-08-05 22:15:03.779 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:01.384
2023-08-05 22:15:03.780 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 01, 2023-08-05 22:07:04.620, 2023-08-05 22:15:02.545
2023-08-05 22:15:03.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:03.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:03.781 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:03.782 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:03.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:03.783 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:03.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:03.784 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:03.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:03.785 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:03.786 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:03.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:03.787 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:03.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:03.788 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:03.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:03.789 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:03.790 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m16912448970687wq  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:03.790 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m16912448970687wq  [0;39m <==      Total: 25
2023-08-05 22:15:03.790 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:03.790 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m16912448970687wq  [0;39m 车厢2的座位数:25
2023-08-05 22:15:03.790 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.791 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m16912448970687wq  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m16912448970687wq  [0;39m 无选座
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m16912448970687wq  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m16912448970687wq  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:03.792 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m16912448970687wq  [0;39m 选中座位
2023-08-05 22:15:03.793 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m16912448970687wq  [0;39m 最终选座:[DailyTrainSeat [Hash = 1804543564, id=1687827565764546560, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:03.809 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m16912448970687wq  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193548]
2023-08-05 22:15:03.809 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m16912448970687wq  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193548
2023-08-05 22:15:03.809 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.809 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: DailyTrainSeat [Hash = 1067604085, id=1687827565764546560, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023]
2023-08-05 22:15:03.810 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:03.810 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:03.809(Timestamp), 1687827565764546560(Long)
2023-08-05 22:15:03.836 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m <==    Updates: 1
2023-08-05 22:15:03.836 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:03.836 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m16912448970687wq  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:03.836 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m16912448970687wq  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:03.837 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448970687wq  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:03.837 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448970687wq  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:03.942 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896698kx5  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:03.943 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896698kx5  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.943 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896698kx5  [0;39m 参数值: ConfirmOrder [Hash = 1463730073, id=1687829557756956672, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:03 CST 2023, tickets=null]
2023-08-05 22:15:03.943 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:03.943 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:03.943(Timestamp), 1687829557756956672(Long)
2023-08-05 22:15:03.968 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896698kx5  [0;39m <==    Updates: 1
2023-08-05 22:15:03.968 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896698kx5  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:03.968 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896698kx5  [0;39m transaction 192.168.0.102:8091:7278238012553193463 will be commit
2023-08-05 22:15:04.020 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896698kx5  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193463
2023-08-05 22:15:04.021 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896698kx5  [0;39m [192.168.0.102:8091:7278238012553193463] commit status: Committed
2023-08-05 22:15:04.036 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448969699ad  [0;39m <==    Updates: 3
2023-08-05 22:15:04.037 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m <==    Updates: 1
2023-08-05 22:15:04.037 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:04.037 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896764it9  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:04.037 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896764it9  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:04.038 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896764it9  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:04.038 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896764it9  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:04.046 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896698kx5  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:04.046 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896698kx5  [0;39m ------------- 结束 耗时：7347 ms -------------
2023-08-05 22:15:04.059 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:04.060 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: ConfirmOrder [Hash = 26967665, id=1687829576530661376, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:15:04, updateTime=2023-08-05 22:15:04, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:15:04.060 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897097rxr  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:15:04.060 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897097rxr  [0;39m ==> Parameters: 1687829576530661376(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:15:04.059(Timestamp), 2023-08-05 22:15:04.059(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:15:04.086 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244897097rxr  [0;39m <==    Updates: 1
2023-08-05 22:15:04.086 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:15:04.087 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:04.087 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2afccee3
2023-08-05 22:15:04.087 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897097rxr  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:15:04.088 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897097rxr  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:15:04.101 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244897097rxr  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:04.102 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, 4, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:04.103 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244897097rxr  [0;39m <==      Total: 1
2023-08-05 22:15:04.103 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:04.103 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244897097rxr  [0;39m 查出余票记录:DailyTrainTicket [Hash = 360848667, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=4, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:15:04.103 INFO  com.jktickets.service.ConfirmOrderService         :226  [32m1691244897097rxr  [0;39m 本次购票没有选座
2023-08-05 22:15:04.103 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:04.104 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: com.jktickets.domain.DailyTrainCarriageExample@627541d5
2023-08-05 22:15:04.104 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897097rxr  [0;39m ==>  Preparing: select id, `date`, train_code, `index`, seat_type, seat_count, `row_count`, col_count, create_time, update_time from daily_train_carriage WHERE ( `date` = ? and train_code = ? and seat_type = ? )
2023-08-05 22:15:04.105 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897097rxr  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(String)
2023-08-05 22:15:04.124 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244897097rxr  [0;39m <==    Columns: id, date, train_code, index, seat_type, seat_count, row_count, col_count, create_time, update_time
2023-08-05 22:15:04.124 TRACE c.j.m.DailyTrainCarriageMapper.selectByExample    :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827558193827840, 2023-08-05, 01, 2, 2, 25, 5, 5, 2023-08-05 22:07:02.849, 2023-08-05 22:07:02.849
2023-08-05 22:15:04.124 DEBUG c.j.m.DailyTrainCarriageMapper.selectByExample    :137  [32m1691244897097rxr  [0;39m <==      Total: 1
2023-08-05 22:15:04.124 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainCarriageMapper.selectByExample(DailyTrainCarriageExample))
2023-08-05 22:15:04.124 INFO  com.jktickets.service.ConfirmOrderService         :270  [32m1691244897097rxr  [0;39m 共查出1个符合条件的车厢
2023-08-05 22:15:04.125 INFO  com.jktickets.service.ConfirmOrderService         :275  [32m1691244897097rxr  [0;39m 从车厢2选座
2023-08-05 22:15:04.125 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:04.125 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: com.jktickets.domain.DailyTrainSeatExample@2cd76fde
2023-08-05 22:15:04.125 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897097rxr  [0;39m ==>  Preparing: select id, `date`, train_code, carriage_index, `row`, col, seat_type, carriage_seat_index, sell, create_time, update_time from daily_train_seat WHERE ( `date` = ? and train_code = ? and carriage_index = ? ) order by carriage_seat_index asc
2023-08-05 22:15:04.126 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897097rxr  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 2(Integer)
2023-08-05 22:15:04.140 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==    Columns: id, date, train_code, carriage_index, row, col, seat_type, carriage_seat_index, sell, create_time, update_time
2023-08-05 22:15:04.141 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827564627890176, 2023-08-05, 01, 2, 01, A, 2, 1, 01, 2023-08-05 22:07:04.383, 2023-08-05 22:14:17.711
2023-08-05 22:15:04.141 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827564791468032, 2023-08-05, 01, 2, 01, B, 2, 2, 01, 2023-08-05 22:07:04.423, 2023-08-05 22:14:56.594
2023-08-05 22:15:04.142 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827564967628800, 2023-08-05, 01, 2, 01, C, 2, 3, 01, 2023-08-05 22:07:04.465, 2023-08-05 22:14:57.449
2023-08-05 22:15:04.142 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565152178176, 2023-08-05, 01, 2, 01, D, 2, 4, 01, 2023-08-05 22:07:04.508, 2023-08-05 22:14:58.464
2023-08-05 22:15:04.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565298978816, 2023-08-05, 01, 2, 01, F, 2, 5, 01, 2023-08-05 22:07:04.543, 2023-08-05 22:15:00.268
2023-08-05 22:15:04.143 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565462556672, 2023-08-05, 01, 2, 02, A, 2, 6, 01, 2023-08-05 22:07:04.583, 2023-08-05 22:15:01.384
2023-08-05 22:15:04.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565621940224, 2023-08-05, 01, 2, 02, B, 2, 7, 01, 2023-08-05 22:07:04.620, 2023-08-05 22:15:02.545
2023-08-05 22:15:04.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565764546560, 2023-08-05, 01, 2, 02, C, 2, 8, 00, 2023-08-05 22:07:04.655, 2023-08-05 22:07:04.655
2023-08-05 22:15:04.144 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827565911347200, 2023-08-05, 01, 2, 02, D, 2, 9, 00, 2023-08-05 22:07:04.690, 2023-08-05 22:07:04.690
2023-08-05 22:15:04.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566079119360, 2023-08-05, 01, 2, 02, F, 2, 10, 00, 2023-08-05 22:07:04.730, 2023-08-05 22:07:04.730
2023-08-05 22:15:04.145 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566360137728, 2023-08-05, 01, 2, 03, A, 2, 11, 00, 2023-08-05 22:07:04.796, 2023-08-05 22:07:04.796
2023-08-05 22:15:04.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566523715584, 2023-08-05, 01, 2, 03, B, 2, 12, 00, 2023-08-05 22:07:04.836, 2023-08-05 22:07:04.836
2023-08-05 22:15:04.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566666321920, 2023-08-05, 01, 2, 03, C, 2, 13, 00, 2023-08-05 22:07:04.869, 2023-08-05 22:07:04.869
2023-08-05 22:15:04.146 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566829899776, 2023-08-05, 01, 2, 03, D, 2, 14, 00, 2023-08-05 22:07:04.909, 2023-08-05 22:07:04.909
2023-08-05 22:15:04.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827566968311808, 2023-08-05, 01, 2, 03, F, 2, 15, 00, 2023-08-05 22:07:04.942, 2023-08-05 22:07:04.942
2023-08-05 22:15:04.147 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567110918144, 2023-08-05, 01, 2, 04, A, 2, 16, 00, 2023-08-05 22:07:04.976, 2023-08-05 22:07:04.976
2023-08-05 22:15:04.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567257718784, 2023-08-05, 01, 2, 04, B, 2, 17, 00, 2023-08-05 22:07:05.011, 2023-08-05 22:07:05.011
2023-08-05 22:15:04.148 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567400325120, 2023-08-05, 01, 2, 04, C, 2, 18, 00, 2023-08-05 22:07:05.044, 2023-08-05 22:07:05.044
2023-08-05 22:15:04.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567547125760, 2023-08-05, 01, 2, 04, D, 2, 19, 00, 2023-08-05 22:07:05.079, 2023-08-05 22:07:05.079
2023-08-05 22:15:04.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567748452352, 2023-08-05, 01, 2, 04, F, 2, 20, 00, 2023-08-05 22:07:05.128, 2023-08-05 22:07:05.128
2023-08-05 22:15:04.149 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827567903641600, 2023-08-05, 01, 2, 05, A, 2, 21, 00, 2023-08-05 22:07:05.165, 2023-08-05 22:07:05.165
2023-08-05 22:15:04.150 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827568058830848, 2023-08-05, 01, 2, 05, B, 2, 22, 00, 2023-08-05 22:07:05.202, 2023-08-05 22:07:05.202
2023-08-05 22:15:04.151 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827568197242880, 2023-08-05, 01, 2, 05, C, 2, 23, 00, 2023-08-05 22:07:05.235, 2023-08-05 22:07:05.235
2023-08-05 22:15:04.151 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827568335654912, 2023-08-05, 01, 2, 05, D, 2, 24, 00, 2023-08-05 22:07:05.268, 2023-08-05 22:07:05.268
2023-08-05 22:15:04.152 TRACE c.j.mapper.DailyTrainSeatMapper.selectByExample   :143  [32m1691244897097rxr  [0;39m <==        Row: 1687827568482455552, 2023-08-05, 01, 2, 05, F, 2, 25, 00, 2023-08-05 22:07:05.303, 2023-08-05 22:07:05.303
2023-08-05 22:15:04.152 DEBUG c.j.mapper.DailyTrainSeatMapper.selectByExample   :137  [32m1691244897097rxr  [0;39m <==      Total: 25
2023-08-05 22:15:04.152 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainSeatMapper.selectByExample(DailyTrainSeatExample))
2023-08-05 22:15:04.152 INFO  com.jktickets.service.ConfirmOrderService         :283  [32m1691244897097rxr  [0;39m 车厢2的座位数:25
2023-08-05 22:15:04.152 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位1在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位2在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位3在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位4在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.153 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位5在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位6在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :407  [32m1691244897097rxr  [0;39m 座位7在本次车站区间1-2已售过票,不可选中该座位
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :310  [32m1691244897097rxr  [0;39m 无选座
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :412  [32m1691244897097rxr  [0;39m 座位8在本次车站区间1-2没有售过票,可选中该座位
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :431  [32m1691244897097rxr  [0;39m 座位8被选中，原售票信息:00,车站区间:1-2,即:01,最终售票信息:01
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :323  [32m1691244897097rxr  [0;39m 选中座位
2023-08-05 22:15:04.154 INFO  com.jktickets.service.ConfirmOrderService         :236  [32m1691244897097rxr  [0;39m 最终选座:[DailyTrainSeat [Hash = 1636516481, id=1687827565764546560, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, carriageIndex=2, row=02, col=C, seatType=2, carriageSeatIndex=8, sell=01, createTime=Sat Aug 05 22:07:04 CST 2023, updateTime=Sat Aug 05 22:07:04 CST 2023]]
2023-08-05 22:15:04.169 INFO  io.seata.tm.api.DefaultGlobalTransaction          :117  [32m1691244897097rxr  [0;39m Begin new global transaction [192.168.0.102:8091:7278238012553193552]
2023-08-05 22:15:04.169 INFO  com.jktickets.service.AfterConfirmOrderService    :74   [32m1691244897097rxr  [0;39m Seata全局事务ID:192.168.0.102:8091:7278238012553193552
2023-08-05 22:15:04.169 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:04.169 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: DailyTrainSeat [Hash = 1593969022, id=1687827565764546560, date=null, trainCode=null, carriageIndex=null, row=null, col=null, seatType=null, carriageSeatIndex=null, sell=01, createTime=null, updateTime=Sat Aug 05 22:15:04 CST 2023]
2023-08-05 22:15:04.170 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m ==>  Preparing: update daily_train_seat SET sell = ?, update_time = ? where id = ?
2023-08-05 22:15:04.170 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m ==> Parameters: 01(String), 2023-08-05 22:15:04.169(Timestamp), 1687827565764546560(Long)
2023-08-05 22:15:04.282 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448969699ad  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:04.282 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448969699ad  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.282 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448969699ad  [0;39m 参数值: ConfirmOrder [Hash = 815227712, id=1687829571048706048, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:04 CST 2023, tickets=null]
2023-08-05 22:15:04.282 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:04.283 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:04.282(Timestamp), 1687829571048706048(Long)
2023-08-05 22:15:04.312 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448969699ad  [0;39m <==    Updates: 1
2023-08-05 22:15:04.313 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448969699ad  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.313 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448969699ad  [0;39m transaction 192.168.0.102:8091:7278238012553193526 will be commit
2023-08-05 22:15:04.366 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448969699ad  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193526
2023-08-05 22:15:04.366 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448969699ad  [0;39m [192.168.0.102:8091:7278238012553193526] commit status: Committed
2023-08-05 22:15:04.379 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m <==    Updates: 1
2023-08-05 22:15:04.379 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:04.380 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896999h3j  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:04.380 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896999h3j  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:04.380 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896999h3j  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:04.380 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896999h3j  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:04.382 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896863ubc  [0;39m <==    Updates: 3
2023-08-05 22:15:04.400 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448969699ad  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:04.400 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448969699ad  [0;39m ------------- 结束 耗时：7429 ms -------------
2023-08-05 22:15:04.588 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896863ubc  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:04.588 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896863ubc  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.588 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896863ubc  [0;39m 参数值: ConfirmOrder [Hash = 1708715779, id=1687829566405611520, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:04 CST 2023, tickets=null]
2023-08-05 22:15:04.588 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:04.589 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:04.588(Timestamp), 1687829566405611520(Long)
2023-08-05 22:15:04.619 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896863ubc  [0;39m <==    Updates: 1
2023-08-05 22:15:04.620 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896863ubc  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.620 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896863ubc  [0;39m transaction 192.168.0.102:8091:7278238012553193502 will be commit
2023-08-05 22:15:04.673 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896863ubc  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193502
2023-08-05 22:15:04.674 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896863ubc  [0;39m [192.168.0.102:8091:7278238012553193502] commit status: Committed
2023-08-05 22:15:04.689 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m16912448970687wq  [0;39m <==    Updates: 3
2023-08-05 22:15:04.689 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m <==    Updates: 1
2023-08-05 22:15:04.689 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:04.689 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244896897r03  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:04.690 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244896897r03  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:04.690 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896897r03  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:04.690 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896897r03  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:04.703 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896863ubc  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:04.703 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896863ubc  [0;39m ------------- 结束 耗时：7837 ms -------------
2023-08-05 22:15:04.880 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m16912448970687wq  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:04.880 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912448970687wq  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.881 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912448970687wq  [0;39m 参数值: ConfirmOrder [Hash = 1886599456, id=1687829574966185984, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:04 CST 2023, tickets=null]
2023-08-05 22:15:04.881 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:04.881 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:04.88(Timestamp), 1687829574966185984(Long)
2023-08-05 22:15:04.907 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m16912448970687wq  [0;39m <==    Updates: 1
2023-08-05 22:15:04.907 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912448970687wq  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:04.908 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m16912448970687wq  [0;39m transaction 192.168.0.102:8091:7278238012553193548 will be commit
2023-08-05 22:15:04.965 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m16912448970687wq  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193548
2023-08-05 22:15:04.965 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m16912448970687wq  [0;39m [192.168.0.102:8091:7278238012553193548] commit status: Committed
2023-08-05 22:15:04.979 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896999h3j  [0;39m <==    Updates: 3
2023-08-05 22:15:04.979 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m <==    Updates: 1
2023-08-05 22:15:04.979 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:04.979 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244897097rxr  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:04.979 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244897097rxr  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:04.980 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897097rxr  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:04.980 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897097rxr  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:04.990 INFO  com.jktickets.aspect.LogAspect                    :94   [32m16912448970687wq  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:04.991 INFO  com.jktickets.aspect.LogAspect                    :95   [32m16912448970687wq  [0;39m ------------- 结束 耗时：7921 ms -------------
2023-08-05 22:15:05.211 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896999h3j  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:05.212 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896999h3j  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.212 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896999h3j  [0;39m 参数值: ConfirmOrder [Hash = 1936612527, id=1687829572348940288, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:05 CST 2023, tickets=null]
2023-08-05 22:15:05.212 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:05.212 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:05.212(Timestamp), 1687829572348940288(Long)
2023-08-05 22:15:05.236 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896999h3j  [0;39m <==    Updates: 1
2023-08-05 22:15:05.237 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896999h3j  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.237 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896999h3j  [0;39m transaction 192.168.0.102:8091:7278238012553193530 will be commit
2023-08-05 22:15:05.292 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896999h3j  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193530
2023-08-05 22:15:05.293 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896999h3j  [0;39m [192.168.0.102:8091:7278238012553193530] commit status: Committed
2023-08-05 22:15:05.306 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896369chx  [0;39m <==    Updates: 3
2023-08-05 22:15:05.306 DEBUG c.j.m.D.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m <==    Updates: 1
2023-08-05 22:15:05.307 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.DailyTrainSeatMapper.updateByPrimaryKeySelective(DailyTrainSeat))
2023-08-05 22:15:05.307 INFO  com.jktickets.service.AfterConfirmOrderService    :105  [32m1691244897038i8k  [0;39m 影响出发站区间:0-1
2023-08-05 22:15:05.307 INFO  com.jktickets.service.AfterConfirmOrderService    :117  [32m1691244897038i8k  [0;39m 影响到达站区间:0-2
2023-08-05 22:15:05.308 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897038i8k  [0;39m ==>  Preparing: update daily_train_ticket set edz = edz -1 where `date` = ? and train_code = ? and start_index >= ? and ? >=start_index and end_index >= ? and ? >= end_index
2023-08-05 22:15:05.308 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897038i8k  [0;39m ==> Parameters: 2023-08-05 00:00:00.0(Timestamp), 01(String), 0(Integer), 1(Integer), 0(Integer), 2(Integer)
2023-08-05 22:15:05.317 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896999h3j  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:05.317 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896999h3j  [0;39m ------------- 结束 耗时：8315 ms -------------
2023-08-05 22:15:05.538 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896369chx  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:05.538 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896369chx  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.538 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896369chx  [0;39m 参数值: ConfirmOrder [Hash = 1944383753, id=1687829544381321216, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:05 CST 2023, tickets=null]
2023-08-05 22:15:05.539 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:05.539 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:05.538(Timestamp), 1687829544381321216(Long)
2023-08-05 22:15:05.567 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896369chx  [0;39m <==    Updates: 1
2023-08-05 22:15:05.568 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896369chx  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.568 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896369chx  [0;39m transaction 192.168.0.102:8091:7278238012553193379 will be commit
2023-08-05 22:15:05.659 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896369chx  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193379
2023-08-05 22:15:05.660 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896369chx  [0;39m [192.168.0.102:8091:7278238012553193379] commit status: Committed
2023-08-05 22:15:05.676 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896635kqh  [0;39m <==    Updates: 3
2023-08-05 22:15:05.687 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896369chx  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:05.688 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896369chx  [0;39m ------------- 结束 耗时：9317 ms -------------
2023-08-05 22:15:05.914 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896635kqh  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:05.915 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896635kqh  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.915 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896635kqh  [0;39m 参数值: ConfirmOrder [Hash = 302179005, id=1687829554867081216, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:05 CST 2023, tickets=null]
2023-08-05 22:15:05.915 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:05.916 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:05.915(Timestamp), 1687829554867081216(Long)
2023-08-05 22:15:05.950 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896635kqh  [0;39m <==    Updates: 1
2023-08-05 22:15:05.950 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896635kqh  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:05.951 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896635kqh  [0;39m transaction 192.168.0.102:8091:7278238012553193438 will be commit
2023-08-05 22:15:06.007 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896635kqh  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193438
2023-08-05 22:15:06.007 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896635kqh  [0;39m [192.168.0.102:8091:7278238012553193438] commit status: Committed
2023-08-05 22:15:06.024 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896764it9  [0;39m <==    Updates: 3
2023-08-05 22:15:06.035 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896635kqh  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:06.036 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896635kqh  [0;39m ------------- 结束 耗时：9400 ms -------------
2023-08-05 22:15:06.264 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896764it9  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:06.265 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896764it9  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.266 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896764it9  [0;39m 参数值: ConfirmOrder [Hash = 1672670080, id=1687829560730718208, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:06 CST 2023, tickets=null]
2023-08-05 22:15:06.267 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:06.268 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:06.265(Timestamp), 1687829560730718208(Long)
2023-08-05 22:15:06.303 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896764it9  [0;39m <==    Updates: 1
2023-08-05 22:15:06.304 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896764it9  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.305 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896764it9  [0;39m transaction 192.168.0.102:8091:7278238012553193466 will be commit
2023-08-05 22:15:06.373 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896764it9  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193466
2023-08-05 22:15:06.374 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896764it9  [0;39m [192.168.0.102:8091:7278238012553193466] commit status: Committed
2023-08-05 22:15:06.390 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244896897r03  [0;39m <==    Updates: 3
2023-08-05 22:15:06.409 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896764it9  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:06.410 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896764it9  [0;39m ------------- 结束 耗时：9645 ms -------------
2023-08-05 22:15:06.631 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244896897r03  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:06.632 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244896897r03  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.632 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244896897r03  [0;39m 参数值: ConfirmOrder [Hash = 1961615451, id=1687829567844257792, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:06 CST 2023, tickets=null]
2023-08-05 22:15:06.633 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:06.634 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:06.631(Timestamp), 1687829567844257792(Long)
2023-08-05 22:15:06.659 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244896897r03  [0;39m <==    Updates: 1
2023-08-05 22:15:06.660 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244896897r03  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.660 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244896897r03  [0;39m transaction 192.168.0.102:8091:7278238012553193506 will be commit
2023-08-05 22:15:06.717 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244896897r03  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193506
2023-08-05 22:15:06.717 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244896897r03  [0;39m [192.168.0.102:8091:7278238012553193506] commit status: Committed
2023-08-05 22:15:06.731 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897097rxr  [0;39m <==    Updates: 3
2023-08-05 22:15:06.743 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244896897r03  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:06.743 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244896897r03  [0;39m ------------- 结束 耗时：9845 ms -------------
2023-08-05 22:15:06.940 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244897097rxr  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:06.940 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897097rxr  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.941 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897097rxr  [0;39m 参数值: ConfirmOrder [Hash = 1743152445, id=1687829576530661376, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:06 CST 2023, tickets=null]
2023-08-05 22:15:06.941 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:06.941 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:06.94(Timestamp), 1687829576530661376(Long)
2023-08-05 22:15:06.965 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897097rxr  [0;39m <==    Updates: 1
2023-08-05 22:15:06.965 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897097rxr  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:06.965 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244897097rxr  [0;39m transaction 192.168.0.102:8091:7278238012553193552 will be commit
2023-08-05 22:15:07.029 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244897097rxr  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193552
2023-08-05 22:15:07.030 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244897097rxr  [0;39m [192.168.0.102:8091:7278238012553193552] commit status: Committed
2023-08-05 22:15:07.043 DEBUG c.j.m.c.D.updateCountBySell                       :137  [32m1691244897038i8k  [0;39m <==    Updates: 3
2023-08-05 22:15:07.054 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244897097rxr  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:07.054 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244897097rxr  [0;39m ------------- 结束 耗时：9956 ms -------------
2023-08-05 22:15:07.238 INFO  com.jktickets.service.AfterConfirmOrderService    :144  [32m1691244897038i8k  [0;39m 调用member接口，返回CommonRes(success=true, code=0, message=, result=添加Ticket成功)
2023-08-05 22:15:07.239 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244897038i8k  [0;39m 执行SQL:  updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:07.239 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244897038i8k  [0;39m 参数值: ConfirmOrder [Hash = 2103531033, id=1687829573716283392, memberId=null, date=null, trainCode=null, start=null, end=null, dailyTrainTicketId=null, status=S, createTime=null, updateTime=Sat Aug 05 22:15:07 CST 2023, tickets=null]
2023-08-05 22:15:07.239 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m ==>  Preparing: update confirm_order SET `status` = ?, update_time = ? where id = ?
2023-08-05 22:15:07.239 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m ==> Parameters: S(String), 2023-08-05 22:15:07.239(Timestamp), 1687829573716283392(Long)
2023-08-05 22:15:07.263 DEBUG c.j.m.C.updateByPrimaryKeySelective               :137  [32m1691244897038i8k  [0;39m <==    Updates: 1
2023-08-05 22:15:07.264 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244897038i8k  [0;39m SQL执行完成: updateByPrimaryKeySelective | execution(int com.jktickets.mapper.ConfirmOrderMapper.updateByPrimaryKeySelective(ConfirmOrder))
2023-08-05 22:15:07.264 INFO  io.seata.tm.api.DefaultGlobalTransaction          :133  [32m1691244897038i8k  [0;39m transaction 192.168.0.102:8091:7278238012553193534 will be commit
2023-08-05 22:15:07.322 INFO  io.seata.tm.api.DefaultGlobalTransaction          :209  [32m1691244897038i8k  [0;39m transaction end, xid = 192.168.0.102:8091:7278238012553193534
2023-08-05 22:15:07.322 INFO  io.seata.tm.api.DefaultGlobalTransaction          :155  [32m1691244897038i8k  [0;39m [192.168.0.102:8091:7278238012553193534] commit status: Committed
2023-08-05 22:15:07.348 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244897038i8k  [0;39m 返回结果: {"code":0,"message":"","success":true}
2023-08-05 22:15:07.348 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244897038i8k  [0;39m ------------- 结束 耗时：10307 ms -------------
2023-08-05 22:15:37.352 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244937352zl7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:15:37.352 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244937352ez1  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:15:37.352 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244937352zl7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.353 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244937352zl7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.353 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244937352ez1  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.353 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244937352ez1  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.353 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244937352zl7  [0;39m ------------- 开始 -------------
2023-08-05 22:15:37.354 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244937352zl7  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:15:37.354 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244937352zl7  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:15:37.354 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244937352zl7  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:15:37.354 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244937352zl7  [0;39m 请求参数: []
2023-08-05 22:15:37.355 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244937352zl7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:15:37.355 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244937352zl7  [0;39m 参数值: com.jktickets.domain.StationExample@440578a6
2023-08-05 22:15:37.363 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244937352ez1  [0;39m ------------- 开始 -------------
2023-08-05 22:15:37.363 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244937352ez1  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:15:37.364 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244937352ez1  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:15:37.364 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244937352ez1  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:15:37.364 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244937352ez1  [0;39m 请求参数: [{"date":1691164800000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:15:37.371 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937352zl7  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:15:37.372 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937352zl7  [0;39m ==> Parameters: 
2023-08-05 22:15:37.376 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244937352ez1  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:37.379 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244937352ez1  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2b02a338
2023-08-05 22:15:37.387 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937352zl7  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:15:37.388 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937352zl7  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:15:37.388 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937352zl7  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:15:37.389 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937352zl7  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:15:37.390 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937352zl7  [0;39m <==      Total: 3
2023-08-05 22:15:37.390 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244937352zl7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:15:37.391 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244937352zl7  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:15:37.392 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244937352zl7  [0;39m ------------- 结束 耗时：39 ms -------------
2023-08-05 22:15:37.398 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244937352ez1  [0;39m ==>  Preparing: SELECT count(0) FROM daily_train_ticket WHERE (`date` = ? AND `start` = ? AND `end` = ?)
2023-08-05 22:15:37.399 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244937352ez1  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String)
2023-08-05 22:15:37.402 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244937402aif  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:15:37.403 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244937402aif  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.403 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244937402aif  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:15:37.403 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244937402aif  [0;39m ------------- 开始 -------------
2023-08-05 22:15:37.404 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244937402aif  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:15:37.404 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244937402aif  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:15:37.404 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244937402aif  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:15:37.404 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244937402aif  [0;39m 请求参数: []
2023-08-05 22:15:37.405 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244937402aif  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:15:37.405 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244937402aif  [0;39m 参数值: com.jktickets.domain.StationExample@39f4c7d9
2023-08-05 22:15:37.406 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937402aif  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:15:37.406 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937402aif  [0;39m ==> Parameters: 
2023-08-05 22:15:37.415 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244937352ez1  [0;39m <==    Columns: count(0)
2023-08-05 22:15:37.415 TRACE c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:143  [32m1691244937352ez1  [0;39m <==        Row: 1
2023-08-05 22:15:37.415 DEBUG c.j.m.DailyTrainTicketMapper.selectByExample_COUNT:137  [32m1691244937352ez1  [0;39m <==      Total: 1
2023-08-05 22:15:37.416 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244937352ez1  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and `start` = ? and `end` = ? ) order by id desc LIMIT ?
2023-08-05 22:15:37.416 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244937352ez1  [0;39m ==> Parameters: 2023-08-05(Date), 温州(String), 杭州(String), 10(Integer)
2023-08-05 22:15:37.423 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937402aif  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:15:37.424 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937402aif  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:15:37.425 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937402aif  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:15:37.425 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244937402aif  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:15:37.426 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244937402aif  [0;39m <==      Total: 3
2023-08-05 22:15:37.426 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244937402aif  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:15:37.427 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244937402aif  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:15:37.427 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244937402aif  [0;39m ------------- 结束 耗时：24 ms -------------
2023-08-05 22:15:37.433 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244937352ez1  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:15:37.434 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244937352ez1  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:15:37.435 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244937352ez1  [0;39m <==      Total: 1
2023-08-05 22:15:37.435 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244937352ez1  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:15:37.436 INFO  com.jktickets.service.DailyTrainTicketService     :133  [32m1691244937352ez1  [0;39m 总行数：1
2023-08-05 22:15:37.436 INFO  com.jktickets.service.DailyTrainTicketService     :134  [32m1691244937352ez1  [0;39m 总页数：1
2023-08-05 22:15:37.461 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244937352ez1  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691244425455,"date":1691164800000,"edz":-6,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":-1,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:15:37.462 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244937352ez1  [0;39m ------------- 结束 耗时：99 ms -------------
2023-08-05 22:16:01.081 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961080le0  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.081 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961080le0  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.081 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961080le0  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.083 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961080le0  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.083 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961080le0  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.083 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961080le0  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.083 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961080le0  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.084 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961080le0  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.112 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961112ty7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.113 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961112ty7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.113 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961112ty7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.114 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961112ty7  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.114 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961112ty7  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.114 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961112ty7  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.115 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961112ty7  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.115 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961112ty7  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.118 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961080le0  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.118 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961080le0  [0;39m 参数值: ConfirmOrder [Hash = 131262213, id=1687829815853453312, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.119 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961080le0  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.119 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961080le0  [0;39m ==> Parameters: 1687829815853453312(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.117(Timestamp), 2023-08-05 22:16:01.117(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.145 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449611452zl  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.145 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449611452zl  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.145 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449611452zl  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.146 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449611452zl  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.146 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449611452zl  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.146 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449611452zl  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.146 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449611452zl  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.147 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449611452zl  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.148 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961112ty7  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.149 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961112ty7  [0;39m 参数值: ConfirmOrder [Hash = 13818192, id=1687829815979282432, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.149 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961112ty7  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.149 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961112ty7  [0;39m ==> Parameters: 1687829815979282432(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.148(Timestamp), 2023-08-05 22:16:01.148(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.155 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961080le0  [0;39m <==    Updates: 1
2023-08-05 22:16:01.155 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961080le0  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.156 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961080le0  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.156 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961080le0  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4af13036
2023-08-05 22:16:01.156 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961080le0  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.157 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961080le0  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.173 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449611452zl  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.173 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961080le0  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.173 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449611452zl  [0;39m 参数值: ConfirmOrder [Hash = 1468775639, id=1687829816084140032, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.174 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449611452zl  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.174 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961080le0  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.174 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449611452zl  [0;39m ==> Parameters: 1687829816084140032(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.173(Timestamp), 2023-08-05 22:16:01.173(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.174 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961080le0  [0;39m <==      Total: 1
2023-08-05 22:16:01.175 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961080le0  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.175 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961080le0  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1882059947, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.179 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961112ty7  [0;39m <==    Updates: 1
2023-08-05 22:16:01.179 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124496117915d  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.179 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961112ty7  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.180 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961112ty7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.180 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124496117915d  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.180 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961112ty7  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@a0d1e0f
2023-08-05 22:16:01.180 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124496117915d  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.181 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961112ty7  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.181 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124496117915d  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.181 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961112ty7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.181 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124496117915d  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.182 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124496117915d  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.182 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124496117915d  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.183 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124496117915d  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.213 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961213i2z  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.214 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449611452zl  [0;39m <==    Updates: 1
2023-08-05 22:16:01.214 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961213i2z  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.215 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961213i2z  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.215 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449611452zl  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.215 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449611452zl  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.215 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449611452zl  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@28b81ca2
2023-08-05 22:16:01.216 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961213i2z  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.216 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449611452zl  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.216 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961213i2z  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.216 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449611452zl  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.216 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961213i2z  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.217 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961213i2z  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.217 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961213i2z  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.224 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961080le0  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.225 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961080le0  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.244 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124496117915d  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.244 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124496117915d  [0;39m 参数值: ConfirmOrder [Hash = 935106176, id=1687829816377741312, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.244 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496117915d  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.245 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496117915d  [0;39m ==> Parameters: 1687829816377741312(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.243(Timestamp), 2023-08-05 22:16:01.243(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.245 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449611452zl  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.246 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449611452zl  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.246 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449611452zl  [0;39m <==      Total: 1
2023-08-05 22:16:01.247 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449611452zl  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.247 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449611452zl  [0;39m 查出余票记录:DailyTrainTicket [Hash = 99275872, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.248 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961248u9n  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.248 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961248u9n  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.249 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961248u9n  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.250 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961248u9n  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.250 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961248u9n  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.250 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961248u9n  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.250 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961248u9n  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.250 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961248u9n  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.256 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961213i2z  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.257 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961213i2z  [0;39m 参数值: ConfirmOrder [Hash = 2033504346, id=1687829816432267264, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.257 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961213i2z  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.258 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961213i2z  [0;39m ==> Parameters: 1687829816432267264(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.256(Timestamp), 2023-08-05 22:16:01.256(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.258 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961112ty7  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.258 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961112ty7  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.259 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961112ty7  [0;39m <==      Total: 1
2023-08-05 22:16:01.259 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961112ty7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.259 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961112ty7  [0;39m 查出余票记录:DailyTrainTicket [Hash = 841758455, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.266 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961248u9n  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.266 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961248u9n  [0;39m 参数值: ConfirmOrder [Hash = 1086261735, id=1687829816474210304, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.266 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961248u9n  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.267 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961248u9n  [0;39m ==> Parameters: 1687829816474210304(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.266(Timestamp), 2023-08-05 22:16:01.266(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.270 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496117915d  [0;39m <==    Updates: 1
2023-08-05 22:16:01.270 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124496117915d  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.271 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124496117915d  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.271 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124496117915d  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1a1fedb4
2023-08-05 22:16:01.271 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449611452zl  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.272 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496117915d  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.272 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449611452zl  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.272 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496117915d  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.279 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961279io6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.279 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961279io6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.280 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961279io6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.280 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961279io6  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.281 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961279io6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.281 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961279io6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.281 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961279io6  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.281 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961279io6  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.284 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961213i2z  [0;39m <==    Updates: 1
2023-08-05 22:16:01.285 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961213i2z  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.285 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961213i2z  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.285 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961213i2z  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@78f3775e
2023-08-05 22:16:01.285 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124496117915d  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.286 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961213i2z  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.286 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124496117915d  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.287 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961213i2z  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.287 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496117915d  [0;39m <==      Total: 1
2023-08-05 22:16:01.287 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124496117915d  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.287 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124496117915d  [0;39m 查出余票记录:DailyTrainTicket [Hash = 339207193, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.298 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961248u9n  [0;39m <==    Updates: 1
2023-08-05 22:16:01.299 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961279io6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.299 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961112ty7  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.299 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961248u9n  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.299 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961279io6  [0;39m 参数值: ConfirmOrder [Hash = 724861448, id=1687829816612622336, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.299 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961248u9n  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.299 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961279io6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.299 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961248u9n  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4ca1f3d2
2023-08-05 22:16:01.300 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961112ty7  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.300 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961279io6  [0;39m ==> Parameters: 1687829816612622336(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.298(Timestamp), 2023-08-05 22:16:01.298(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.300 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961248u9n  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.301 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961213i2z  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.301 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961248u9n  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.302 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961213i2z  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.303 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961213i2z  [0;39m <==      Total: 1
2023-08-05 22:16:01.303 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961213i2z  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.303 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961213i2z  [0;39m 查出余票记录:DailyTrainTicket [Hash = 506141046, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.313 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961313zv0  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.314 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961313zv0  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.314 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961313zv0  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.314 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m169124496117915d  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.315 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m169124496117915d  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.315 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961313zv0  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.316 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961313zv0  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.316 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961313zv0  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.317 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961313zv0  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.317 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961313zv0  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.318 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961248u9n  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.319 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961248u9n  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.320 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961248u9n  [0;39m <==      Total: 1
2023-08-05 22:16:01.320 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961248u9n  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.320 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961248u9n  [0;39m 查出余票记录:DailyTrainTicket [Hash = 163330567, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.326 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961279io6  [0;39m <==    Updates: 1
2023-08-05 22:16:01.326 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961279io6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.326 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961279io6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.327 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961279io6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1927460
2023-08-05 22:16:01.327 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961279io6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.327 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961279io6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.334 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961213i2z  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.335 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961213i2z  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.346 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449613467cf  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.346 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449613467cf  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.346 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449613467cf  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.347 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449613467cf  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.348 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449613467cf  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.348 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449613467cf  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.348 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961279io6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.348 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449613467cf  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.348 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449613467cf  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.349 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961279io6  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.350 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961279io6  [0;39m <==      Total: 1
2023-08-05 22:16:01.350 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961279io6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.350 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961279io6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 324469262, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.351 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961313zv0  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.352 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961313zv0  [0;39m 参数值: ConfirmOrder [Hash = 1637006544, id=1687829816830726144, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.352 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961313zv0  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.352 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961313zv0  [0;39m ==> Parameters: 1687829816830726144(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.351(Timestamp), 2023-08-05 22:16:01.351(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.355 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961248u9n  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.355 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961248u9n  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.363 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449613467cf  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.364 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449613467cf  [0;39m 参数值: ConfirmOrder [Hash = 858498554, id=1687829816881057792, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.364 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449613467cf  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.364 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449613467cf  [0;39m ==> Parameters: 1687829816881057792(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.363(Timestamp), 2023-08-05 22:16:01.363(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.376 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961279io6  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.377 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961279io6  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.378 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961378poq  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.378 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961378poq  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.379 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961378poq  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.379 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961378poq  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.380 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961378poq  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.380 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961378poq  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.380 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961378poq  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.380 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961378poq  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.384 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961313zv0  [0;39m <==    Updates: 1
2023-08-05 22:16:01.385 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961313zv0  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.385 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961313zv0  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.385 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961313zv0  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@78160377
2023-08-05 22:16:01.386 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961313zv0  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.386 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961313zv0  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.395 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449613467cf  [0;39m <==    Updates: 1
2023-08-05 22:16:01.396 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449613467cf  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.396 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449613467cf  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.396 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449613467cf  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@46ecade2
2023-08-05 22:16:01.397 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449613467cf  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.397 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449613467cf  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.402 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961313zv0  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.403 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961313zv0  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.404 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961378poq  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.404 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961313zv0  [0;39m <==      Total: 1
2023-08-05 22:16:01.404 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961378poq  [0;39m 参数值: ConfirmOrder [Hash = 1140815801, id=1687829817053024256, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.404 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961313zv0  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.404 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961378poq  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.405 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961313zv0  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1796155566, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.405 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961378poq  [0;39m ==> Parameters: 1687829817053024256(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.404(Timestamp), 2023-08-05 22:16:01.404(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.411 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961411v97  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.411 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961411v97  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.411 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961411v97  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.411 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961411v97  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.411 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961411v97  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.411 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961411v97  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.413 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961411v97  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.413 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961411v97  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.414 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449613467cf  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.415 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449613467cf  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.416 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449613467cf  [0;39m <==      Total: 1
2023-08-05 22:16:01.416 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449613467cf  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.416 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449613467cf  [0;39m 查出余票记录:DailyTrainTicket [Hash = 290597360, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.429 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961378poq  [0;39m <==    Updates: 1
2023-08-05 22:16:01.429 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961378poq  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.429 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961378poq  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.429 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961378poq  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@11dcaa30
2023-08-05 22:16:01.429 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961378poq  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.430 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961378poq  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.435 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961313zv0  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.435 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961411v97  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.435 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961411v97  [0;39m 参数值: ConfirmOrder [Hash = 1268593802, id=1687829817183047680, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.436 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961313zv0  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.436 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961411v97  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.436 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961411v97  [0;39m ==> Parameters: 1687829817183047680(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.435(Timestamp), 2023-08-05 22:16:01.435(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.443 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449614439qo  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.443 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449614439qo  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.443 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449614439qo  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.444 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449614439qo  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.444 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449614439qo  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.445 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449614439qo  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.445 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449614439qo  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.445 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449614439qo  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.450 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961378poq  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.451 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449613467cf  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.452 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449613467cf  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.452 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961378poq  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.452 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961378poq  [0;39m <==      Total: 1
2023-08-05 22:16:01.453 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961378poq  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.453 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961378poq  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1869284307, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.457 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449614439qo  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.457 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449614439qo  [0;39m 参数值: ConfirmOrder [Hash = 1438046499, id=1687829817275322368, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.458 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614439qo  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.458 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614439qo  [0;39m ==> Parameters: 1687829817275322368(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.457(Timestamp), 2023-08-05 22:16:01.457(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.463 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961411v97  [0;39m <==    Updates: 1
2023-08-05 22:16:01.463 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961411v97  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.463 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961411v97  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.464 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961411v97  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@37043aeb
2023-08-05 22:16:01.465 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961411v97  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.465 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961411v97  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.476 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449614762v7  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.476 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449614762v7  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.476 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449614762v7  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.477 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449614762v7  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.477 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449614762v7  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.477 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449614762v7  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.477 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449614762v7  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.477 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449614762v7  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.478 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961411v97  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.480 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961378poq  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.480 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961411v97  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.480 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961378poq  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.480 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961411v97  [0;39m <==      Total: 1
2023-08-05 22:16:01.481 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961411v97  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.482 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961411v97  [0;39m 查出余票记录:DailyTrainTicket [Hash = 693111190, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.484 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614439qo  [0;39m <==    Updates: 1
2023-08-05 22:16:01.485 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449614439qo  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.485 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449614439qo  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.485 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449614439qo  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@1da48ae
2023-08-05 22:16:01.486 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614439qo  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.486 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614439qo  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.500 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449614762v7  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.500 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449614439qo  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.501 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449614762v7  [0;39m 参数值: ConfirmOrder [Hash = 2028689072, id=1687829817455677440, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.501 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614762v7  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.501 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449614439qo  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.502 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614762v7  [0;39m ==> Parameters: 1687829817455677440(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.5(Timestamp), 2023-08-05 22:16:01.5(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.502 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614439qo  [0;39m <==      Total: 1
2023-08-05 22:16:01.502 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449614439qo  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.503 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449614439qo  [0;39m 查出余票记录:DailyTrainTicket [Hash = 580918975, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.509 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449615092n4  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.510 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449615092n4  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.510 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449615092n4  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.511 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449615092n4  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.511 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449615092n4  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.511 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449615092n4  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.511 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449615092n4  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.512 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449615092n4  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.512 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961411v97  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.513 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961411v97  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.525 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449614762v7  [0;39m <==    Updates: 1
2023-08-05 22:16:01.526 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449614762v7  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.526 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449614762v7  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.526 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449614762v7  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@46240f87
2023-08-05 22:16:01.527 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614762v7  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.527 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449615092n4  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.527 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449615092n4  [0;39m 参数值: ConfirmOrder [Hash = 593787337, id=1687829817568923648, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.527 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449614439qo  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.527 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614762v7  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.527 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449615092n4  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.528 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449614439qo  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.528 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449615092n4  [0;39m ==> Parameters: 1687829817568923648(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.527(Timestamp), 2023-08-05 22:16:01.527(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.541 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449614762v7  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.542 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449614762v7  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.542 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961542lcu  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.542 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449614762v7  [0;39m <==      Total: 1
2023-08-05 22:16:01.543 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961542lcu  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.543 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449614762v7  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.543 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961542lcu  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.543 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449614762v7  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2138630859, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.544 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961542lcu  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.544 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961542lcu  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.544 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961542lcu  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.545 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961542lcu  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.545 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961542lcu  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.558 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961542lcu  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.559 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961542lcu  [0;39m 参数值: ConfirmOrder [Hash = 586773249, id=1687829817698947072, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.560 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961542lcu  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.560 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961542lcu  [0;39m ==> Parameters: 1687829817698947072(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.558(Timestamp), 2023-08-05 22:16:01.558(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.565 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449615092n4  [0;39m <==    Updates: 1
2023-08-05 22:16:01.565 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449615092n4  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.565 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449615092n4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.565 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449615092n4  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7d00703b
2023-08-05 22:16:01.566 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449615092n4  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.566 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449615092n4  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.575 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961575yt6  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.575 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961575yt6  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.575 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961575yt6  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.576 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961575yt6  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.576 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961575yt6  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.576 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961575yt6  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.576 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961575yt6  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.576 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961575yt6  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.577 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449614762v7  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.578 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449614762v7  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.608 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449616081uz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.609 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449616081uz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.609 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449616081uz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.609 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449616081uz  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.610 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449616081uz  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.610 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449616081uz  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.610 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449616081uz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.610 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449616081uz  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.615 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449615092n4  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.616 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449615092n4  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.616 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449615092n4  [0;39m <==      Total: 1
2023-08-05 22:16:01.616 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449615092n4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.616 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449615092n4  [0;39m 查出余票记录:DailyTrainTicket [Hash = 145267970, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.625 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961575yt6  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.625 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961542lcu  [0;39m <==    Updates: 1
2023-08-05 22:16:01.626 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961575yt6  [0;39m 参数值: ConfirmOrder [Hash = 1461613299, id=1687829817979965440, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.626 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961542lcu  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.626 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961542lcu  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.626 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961575yt6  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.626 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961542lcu  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@7ae46bd8
2023-08-05 22:16:01.627 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961575yt6  [0;39m ==> Parameters: 1687829817979965440(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.625(Timestamp), 2023-08-05 22:16:01.625(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.627 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961542lcu  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.627 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961542lcu  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.636 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449616081uz  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.637 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449616081uz  [0;39m 参数值: ConfirmOrder [Hash = 1355510226, id=1687829818026102784, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.637 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616081uz  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.638 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616081uz  [0;39m ==> Parameters: 1687829818026102784(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.636(Timestamp), 2023-08-05 22:16:01.636(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.641 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449616419fz  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.641 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961542lcu  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.642 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449616419fz  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.642 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449616419fz  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.642 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961542lcu  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.642 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961542lcu  [0;39m <==      Total: 1
2023-08-05 22:16:01.643 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961542lcu  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.643 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961542lcu  [0;39m 查出余票记录:DailyTrainTicket [Hash = 116058694, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.643 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449616419fz  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.643 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449616419fz  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.643 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449616419fz  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.644 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449616419fz  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.644 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449616419fz  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.647 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449615092n4  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.648 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449615092n4  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.652 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961575yt6  [0;39m <==    Updates: 1
2023-08-05 22:16:01.653 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961575yt6  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.653 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961575yt6  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.653 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961575yt6  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2ea6c7a8
2023-08-05 22:16:01.654 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961575yt6  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.654 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961575yt6  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.661 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449616419fz  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.661 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449616419fz  [0;39m 参数值: ConfirmOrder [Hash = 274617784, id=1687829818130960384, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.662 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616419fz  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.662 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616419fz  [0;39m ==> Parameters: 1687829818130960384(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.661(Timestamp), 2023-08-05 22:16:01.661(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.663 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616081uz  [0;39m <==    Updates: 1
2023-08-05 22:16:01.663 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449616081uz  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.663 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449616081uz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.663 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449616081uz  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@38ce8747
2023-08-05 22:16:01.664 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616081uz  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.665 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616081uz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.669 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961575yt6  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.669 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961542lcu  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.669 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961575yt6  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.670 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961542lcu  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.670 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961575yt6  [0;39m <==      Total: 1
2023-08-05 22:16:01.671 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961575yt6  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.671 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961575yt6  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1873479361, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.676 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m169124496167606g  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.677 INFO  com.jktickets.utils.JwtUtil                       :64   [32m169124496167606g  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.677 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m169124496167606g  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.678 INFO  com.jktickets.aspect.LogAspect                    :57   [32m169124496167606g  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.678 INFO  com.jktickets.aspect.LogAspect                    :58   [32m169124496167606g  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.678 INFO  com.jktickets.aspect.LogAspect                    :59   [32m169124496167606g  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.678 INFO  com.jktickets.aspect.LogAspect                    :60   [32m169124496167606g  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.678 INFO  com.jktickets.aspect.LogAspect                    :82   [32m169124496167606g  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.679 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449616081uz  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.679 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449616081uz  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.680 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616081uz  [0;39m <==      Total: 1
2023-08-05 22:16:01.680 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449616081uz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.680 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449616081uz  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1414112507, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.693 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449616419fz  [0;39m <==    Updates: 1
2023-08-05 22:16:01.694 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449616419fz  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.694 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449616419fz  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.694 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449616419fz  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@3a24fea2
2023-08-05 22:16:01.695 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616419fz  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.695 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616419fz  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.696 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124496167606g  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.696 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961575yt6  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.696 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124496167606g  [0;39m 参数值: ConfirmOrder [Hash = 604994299, id=1687829818277761024, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.697 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961575yt6  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.697 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496167606g  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.698 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496167606g  [0;39m ==> Parameters: 1687829818277761024(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.696(Timestamp), 2023-08-05 22:16:01.696(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.709 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961709rpx  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.710 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961709rpx  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.710 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961709rpx  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.710 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449616081uz  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.711 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449616081uz  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.711 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961709rpx  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.711 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961709rpx  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.712 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449616419fz  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.711 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961709rpx  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.713 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961709rpx  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.714 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961709rpx  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.714 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449616419fz  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.714 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449616419fz  [0;39m <==      Total: 1
2023-08-05 22:16:01.715 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449616419fz  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.715 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449616419fz  [0;39m 查出余票记录:DailyTrainTicket [Hash = 432482496, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.726 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961709rpx  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.727 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961709rpx  [0;39m 参数值: ConfirmOrder [Hash = 2146168807, id=1687829818403590144, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.727 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961709rpx  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.728 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961709rpx  [0;39m ==> Parameters: 1687829818403590144(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.726(Timestamp), 2023-08-05 22:16:01.726(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.729 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m169124496167606g  [0;39m <==    Updates: 1
2023-08-05 22:16:01.729 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124496167606g  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.729 INFO  com.jktickets.aspect.LogAspect                    :106  [32m169124496167606g  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.729 INFO  com.jktickets.aspect.LogAspect                    :111  [32m169124496167606g  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@21b8f3b3
2023-08-05 22:16:01.730 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496167606g  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:01.730 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496167606g  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:01.741 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961741pqw  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.742 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961741pqw  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.742 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961741pqw  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.743 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961741pqw  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.743 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961741pqw  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.744 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961741pqw  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.744 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961741pqw  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.744 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961741pqw  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.746 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124496167606g  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:01.746 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449616419fz  [0;39m 业务异常:余票不足
2023-08-05 22:16:01.748 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449616419fz  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:01.747 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m169124496167606g  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:01.748 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m169124496167606g  [0;39m <==      Total: 1
2023-08-05 22:16:01.749 INFO  com.jktickets.aspect.LogAspect                    :120  [32m169124496167606g  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:01.749 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m169124496167606g  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1858961710, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:01.773 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961773enc  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.773 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961773enc  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.774 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961773enc  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.774 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961773enc  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.775 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961773enc  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.775 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961773enc  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.775 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961773enc  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.775 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961773enc  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.804 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961804ct4  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.804 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961804ct4  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.804 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961804ct4  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.805 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961804ct4  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.805 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961804ct4  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.805 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961804ct4  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.805 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961804ct4  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.806 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961804ct4  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.839 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961839jq8  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.839 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961839jq8  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.839 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961839jq8  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.840 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961839jq8  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.840 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961839jq8  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.840 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961839jq8  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.841 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961839jq8  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.841 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961839jq8  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.871 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449618713ot  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.871 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961741pqw  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.871 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449618713ot  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.872 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449618713ot  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.872 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961741pqw  [0;39m 参数值: ConfirmOrder [Hash = 732253085, id=1687829819011764224, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.872 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961741pqw  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.872 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449618713ot  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.872 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961741pqw  [0;39m ==> Parameters: 1687829819011764224(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.871(Timestamp), 2023-08-05 22:16:01.871(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.873 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449618713ot  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.873 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449618713ot  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.873 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449618713ot  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.873 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449618713ot  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.890 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961839jq8  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961839jq8  [0;39m 参数值: ConfirmOrder [Hash = 1458587487, id=1687829819091456000, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961804ct4  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449618713ot  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.891 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961839jq8  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961773enc  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961804ct4  [0;39m 参数值: ConfirmOrder [Hash = 1865794600, id=1687829819095650304, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449618713ot  [0;39m 参数值: ConfirmOrder [Hash = 1536775290, id=1687829819095650305, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.891 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961773enc  [0;39m 参数值: ConfirmOrder [Hash = 1216564237, id=1687829819095650306, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:01, updateTime=2023-08-05 22:16:01, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:01.892 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961839jq8  [0;39m ==> Parameters: 1687829819091456000(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.89(Timestamp), 2023-08-05 22:16:01.89(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.892 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961804ct4  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.892 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449618713ot  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.892 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961773enc  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:01.892 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961804ct4  [0;39m ==> Parameters: 1687829819095650304(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.891(Timestamp), 2023-08-05 22:16:01.891(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.893 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449618713ot  [0;39m ==> Parameters: 1687829819095650305(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.891(Timestamp), 2023-08-05 22:16:01.891(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.893 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961773enc  [0;39m ==> Parameters: 1687829819095650306(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:01.891(Timestamp), 2023-08-05 22:16:01.891(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:01.905 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449619050xr  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.905 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449619050xr  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.905 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449619050xr  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.906 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449619050xr  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.906 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449619050xr  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.906 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449619050xr  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.907 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449619050xr  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.907 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449619050xr  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.937 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961937gky  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.937 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961937gky  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.937 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961937gky  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.938 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961937gky  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.938 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961937gky  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.938 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961937gky  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.938 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961937gky  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.939 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961937gky  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:01.972 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244961972xuj  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:01.972 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244961972xuj  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.972 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244961972xuj  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:01.973 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244961972xuj  [0;39m ------------- 开始 -------------
2023-08-05 22:16:01.973 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244961972xuj  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:01.973 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244961972xuj  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:01.973 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244961972xuj  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:01.974 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244961972xuj  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:02.017 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961741pqw  [0;39m <==    Updates: 1
2023-08-05 22:16:02.017 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961741pqw  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.017 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961741pqw  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.017 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961741pqw  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@41116106
2023-08-05 22:16:02.018 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449619050xr  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.018 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449619050xr  [0;39m 参数值: ConfirmOrder [Hash = 824283683, id=1687829819628326912, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:02, updateTime=2023-08-05 22:16:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:02.018 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961741pqw  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.018 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449619050xr  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:02.018 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961741pqw  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.019 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449619050xr  [0;39m ==> Parameters: 1687829819628326912(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:02.017(Timestamp), 2023-08-05 22:16:02.017(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:02.021 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961937gky  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.021 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961709rpx  [0;39m <==    Updates: 1
2023-08-05 22:16:02.021 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961937gky  [0;39m 参数值: ConfirmOrder [Hash = 734390896, id=1687829819640909824, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:02, updateTime=2023-08-05 22:16:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:02.021 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961709rpx  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.021 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961937gky  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:02.021 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961709rpx  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.021 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961709rpx  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@60f4813d
2023-08-05 22:16:02.021 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961937gky  [0;39m ==> Parameters: 1687829819640909824(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:02.02(Timestamp), 2023-08-05 22:16:02.02(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:02.022 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961709rpx  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.022 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961709rpx  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.032 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449618713ot  [0;39m <==    Updates: 1
2023-08-05 22:16:02.032 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961839jq8  [0;39m <==    Updates: 1
2023-08-05 22:16:02.032 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449618713ot  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.032 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961839jq8  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.032 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961804ct4  [0;39m <==    Updates: 1
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961839jq8  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961804ct4  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449618713ot  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961839jq8  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@435c7d1b
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961804ct4  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.033 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449618713ot  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@600938a
2023-08-05 22:16:02.033 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961741pqw  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.034 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961804ct4  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@6605335b
2023-08-05 22:16:02.034 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961741pqw  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.034 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961839jq8  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.034 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449618713ot  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.034 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961804ct4  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.035 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961741pqw  [0;39m <==      Total: 1
2023-08-05 22:16:02.035 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961839jq8  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.035 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449618713ot  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.035 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961804ct4  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.036 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961741pqw  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.036 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961741pqw  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1033507012, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.041 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244962041nwy  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:02.041 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m16912449620417cb  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:02.041 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244962041nwy  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:02.041 INFO  com.jktickets.utils.JwtUtil                       :64   [32m16912449620417cb  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:02.042 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244962041nwy  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:02.042 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m16912449620417cb  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244962041nwy  [0;39m ------------- 开始 -------------
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :57   [32m16912449620417cb  [0;39m ------------- 开始 -------------
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244962041nwy  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :58   [32m16912449620417cb  [0;39m 请求地址: http://192.168.0.102:8002/business/confirmOrder/doConfirm POST
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244962041nwy  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :59   [32m16912449620417cb  [0;39m 类名方法: com.jktickets.controller.ConfirmOrderController.doConfirm
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244962041nwy  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :60   [32m16912449620417cb  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :82   [32m16912449620417cb  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:02.043 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244962041nwy  [0;39m 请求参数: [{"dailyTrainTicketId":1687827570155982848,"date":1691164800000,"end":"杭州","start":"温州","tickets":[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}],"trainCode":"01"}]
2023-08-05 22:16:02.147 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961773enc  [0;39m <==    Updates: 1
2023-08-05 22:16:02.147 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961972xuj  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.147 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961709rpx  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.148 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961773enc  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.148 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961972xuj  [0;39m 参数值: ConfirmOrder [Hash = 473276402, id=1687829820169392128, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:02, updateTime=2023-08-05 22:16:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:02.148 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961773enc  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.149 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961972xuj  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:02.150 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961773enc  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@69d01e5d
2023-08-05 22:16:02.150 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961709rpx  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.151 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961972xuj  [0;39m ==> Parameters: 1687829820169392128(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:02.147(Timestamp), 2023-08-05 22:16:02.147(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:02.152 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961709rpx  [0;39m <==      Total: 1
2023-08-05 22:16:02.152 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961773enc  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.153 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961709rpx  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.153 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961709rpx  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2000698818, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.153 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961773enc  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.156 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449619050xr  [0;39m <==    Updates: 1
2023-08-05 22:16:02.157 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449619050xr  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.157 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961839jq8  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.157 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449619050xr  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.158 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449619050xr  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@664290d
2023-08-05 22:16:02.159 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961839jq8  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.160 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449619050xr  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.161 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961839jq8  [0;39m <==      Total: 1
2023-08-05 22:16:02.161 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449619050xr  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.162 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961839jq8  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.164 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961839jq8  [0;39m 查出余票记录:DailyTrainTicket [Hash = 2048563830, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.164 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449618713ot  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.166 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449618713ot  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.167 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449618713ot  [0;39m <==      Total: 1
2023-08-05 22:16:02.168 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961937gky  [0;39m <==    Updates: 1
2023-08-05 22:16:02.168 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961804ct4  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.169 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961937gky  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.169 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449618713ot  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.170 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961937gky  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.170 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449618713ot  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1751983149, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.170 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961804ct4  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.171 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961937gky  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@43214f80
2023-08-05 22:16:02.172 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961804ct4  [0;39m <==      Total: 1
2023-08-05 22:16:02.172 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961937gky  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.173 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961804ct4  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.173 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961937gky  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.174 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961804ct4  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1020606701, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.174 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m169124496167606g  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.176 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m169124496167606g  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.179 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961773enc  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.183 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961773enc  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.185 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961773enc  [0;39m <==      Total: 1
2023-08-05 22:16:02.186 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961773enc  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.187 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961773enc  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1603755927, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.289 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449619050xr  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.289 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961741pqw  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.289 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244961972xuj  [0;39m <==    Updates: 1
2023-08-05 22:16:02.289 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961709rpx  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.290 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961972xuj  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.290 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449619050xr  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.290 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961741pqw  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.290 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244961972xuj  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.291 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244961972xuj  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@700088f
2023-08-05 22:16:02.291 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449619050xr  [0;39m <==      Total: 1
2023-08-05 22:16:02.291 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961709rpx  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.292 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449619050xr  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.292 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449619050xr  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1535878961, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.292 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961972xuj  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.293 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961972xuj  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.308 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961839jq8  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.308 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449620417cb  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.308 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449620417cb  [0;39m 参数值: ConfirmOrder [Hash = 674255598, id=1687829820844675072, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:02, updateTime=2023-08-05 22:16:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:02.309 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961839jq8  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.309 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449620417cb  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:02.310 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449620417cb  [0;39m ==> Parameters: 1687829820844675072(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:02.308(Timestamp), 2023-08-05 22:16:02.308(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:02.311 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244962041nwy  [0;39m 执行SQL:  insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.311 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244962041nwy  [0;39m 参数值: ConfirmOrder [Hash = 31216508, id=1687829820857257984, memberId=1680932902797447168, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, end=杭州, dailyTrainTicketId=1687827570155982848, status=I, createTime=2023-08-05 22:16:02, updateTime=2023-08-05 22:16:02, tickets=[{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}]]
2023-08-05 22:16:02.312 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244962041nwy  [0;39m ==>  Preparing: insert into confirm_order (id, member_id, `date`, train_code, `start`, `end`, daily_train_ticket_id, `status`, create_time, update_time, tickets) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-08-05 22:16:02.312 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244962041nwy  [0;39m ==> Parameters: 1687829820857257984(Long), 1680932902797447168(Long), 2023-08-05(Date), 01(String), 温州(String), 杭州(String), 1687827570155982848(Long), I(String), 2023-08-05 22:16:02.311(Timestamp), 2023-08-05 22:16:02.311(Timestamp), [{"passengerId":1681265704667582464,"passengerIdCard":"1","passengerName":"测试","passengerType":"1","seatTypeCode":"2"}](String)
2023-08-05 22:16:02.443 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449619050xr  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.444 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449619050xr  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.445 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449618713ot  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.445 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961804ct4  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.445 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961937gky  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.446 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961804ct4  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.446 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449618713ot  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.447 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961773enc  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.449 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961773enc  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.448 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961937gky  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.450 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961937gky  [0;39m <==      Total: 1
2023-08-05 22:16:02.451 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961972xuj  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.453 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961937gky  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.453 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244961972xuj  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.454 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961937gky  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1363212422, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.454 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244961972xuj  [0;39m <==      Total: 1
2023-08-05 22:16:02.454 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244961972xuj  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.455 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244961972xuj  [0;39m 查出余票记录:DailyTrainTicket [Hash = 867985741, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.458 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m16912449620417cb  [0;39m <==    Updates: 1
2023-08-05 22:16:02.459 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449620417cb  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.459 INFO  com.jktickets.aspect.LogAspect                    :106  [32m16912449620417cb  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.459 INFO  com.jktickets.aspect.LogAspect                    :111  [32m16912449620417cb  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@2d6032ca
2023-08-05 22:16:02.460 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449620417cb  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.460 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449620417cb  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.468 DEBUG com.jktickets.mapper.ConfirmOrderMapper.insert    :137  [32m1691244962041nwy  [0;39m <==    Updates: 1
2023-08-05 22:16:02.469 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244962041nwy  [0;39m SQL执行完成: insert | execution(int com.jktickets.mapper.ConfirmOrderMapper.insert(ConfirmOrder))
2023-08-05 22:16:02.469 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244962041nwy  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.469 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244962041nwy  [0;39m 参数值: com.jktickets.domain.DailyTrainTicketExample@4ab8eddf
2023-08-05 22:16:02.470 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244962041nwy  [0;39m ==>  Preparing: select id, `date`, train_code, `start`, start_pinyin, start_time, start_index, `end`, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time from daily_train_ticket WHERE ( `date` = ? and train_code = ? and `start` = ? and `end` = ? )
2023-08-05 22:16:02.470 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244962041nwy  [0;39m ==> Parameters: 2023-08-05(Date), 01(String), 温州(String), 杭州(String)
2023-08-05 22:16:02.477 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449620417cb  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.478 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m16912449620417cb  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.479 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m16912449620417cb  [0;39m <==      Total: 1
2023-08-05 22:16:02.479 INFO  com.jktickets.aspect.LogAspect                    :120  [32m16912449620417cb  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.479 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m16912449620417cb  [0;39m 查出余票记录:DailyTrainTicket [Hash = 1887792481, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.481 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961937gky  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.482 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961937gky  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.488 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244962041nwy  [0;39m <==    Columns: id, date, train_code, start, start_pinyin, start_time, start_index, end, end_pinyin, end_time, end_index, ydz, ydz_price, edz, edz_price, rw, rw_price, yw, yw_price, create_time, update_time
2023-08-05 22:16:02.489 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244961972xuj  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.489 TRACE c.j.mapper.DailyTrainTicketMapper.selectByExample :143  [32m1691244962041nwy  [0;39m <==        Row: 1687827570155982848, 2023-08-05, 01, 温州, wenzhou, 22:15:03, 1, 杭州, hangzhou, 15:00:00, 2, -1, 5.28, -6, 3.96, -1, 7.92, -1, 6.60, 2023-08-05 22:07:05.455, 2023-08-05 22:07:05.455
2023-08-05 22:16:02.489 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244961972xuj  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.490 DEBUG c.j.mapper.DailyTrainTicketMapper.selectByExample :137  [32m1691244962041nwy  [0;39m <==      Total: 1
2023-08-05 22:16:02.490 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244962041nwy  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.DailyTrainTicketMapper.selectByExample(DailyTrainTicketExample))
2023-08-05 22:16:02.490 INFO  com.jktickets.service.ConfirmOrderService         :163  [32m1691244962041nwy  [0;39m 查出余票记录:DailyTrainTicket [Hash = 326299871, id=1687827570155982848, date=Sat Aug 05 00:00:00 CST 2023, trainCode=01, start=温州, startPinyin=wenzhou, startTime=Thu Jan 01 22:15:03 CST 1970, startIndex=1, end=杭州, endPinyin=hangzhou, endTime=Thu Jan 01 15:00:00 CST 1970, endIndex=2, ydz=-1, ydzPrice=5.28, edz=-6, edzPrice=3.96, rw=-1, rwPrice=7.92, yw=-1, ywPrice=6.60, createTime=Sat Aug 05 22:07:05 CST 2023, updateTime=Sat Aug 05 22:07:05 CST 2023]
2023-08-05 22:16:02.617 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m16912449620417cb  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.618 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m16912449620417cb  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:02.746 ERROR c.jktickets.exception.ControllerExceptionHandler  :62   [32m1691244962041nwy  [0;39m 业务异常:余票不足
2023-08-05 22:16:02.747 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :207  [32m1691244962041nwy  [0;39m Resolved [BusinessException(businessExceptionEnum=BusinessExceptionEnum{desc='余票不足'})]
2023-08-05 22:16:25.815 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244985815cwp  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:25.816 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244985815cwp  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.816 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244985815cwp  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.816 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244985815cwp  [0;39m ------------- 开始 -------------
2023-08-05 22:16:25.817 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244985815cwp  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:16:25.817 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244985815cwp  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:16:25.819 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244985818zyp  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:25.818 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244985815cwp  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:25.819 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244985818zyp  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.819 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244985815cwp  [0;39m 请求参数: []
2023-08-05 22:16:25.820 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244985818zyp  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.820 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244985815cwp  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:16:25.820 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244985815cwp  [0;39m 参数值: com.jktickets.domain.StationExample@629b76c3
2023-08-05 22:16:25.821 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244985818zyp  [0;39m ------------- 开始 -------------
2023-08-05 22:16:25.822 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244985818zyp  [0;39m 请求地址: http://192.168.0.102:8002/business/dailyTrainTicket/queryList GET
2023-08-05 22:16:25.822 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244985818zyp  [0;39m 类名方法: com.jktickets.controller.DailyTrainTicketController.queryDailyTrainTicketList
2023-08-05 22:16:25.822 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244985818zyp  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:25.823 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244985818zyp  [0;39m 请求参数: [{"date":1691164800000,"end":"杭州","page":1,"size":10,"start":"温州"}]
2023-08-05 22:16:25.839 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244985818zyp  [0;39m 返回结果: {"code":0,"message":"","result":{"list":[{"createTime":1691244425455,"date":1691164800000,"edz":-6,"edzPrice":3.96,"end":"杭州","endIndex":2,"endPinyin":"hangzhou","endTime":25200000,"id":1687827570155982848,"rw":-1,"rwPrice":7.92,"start":"温州","startIndex":1,"startPinyin":"wenzhou","startTime":51303000,"trainCode":"01","updateTime":1691244425455,"ydz":-1,"ydzPrice":5.28,"yw":-1,"ywPrice":6.60}],"total":1},"success":true}
2023-08-05 22:16:25.839 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244985818zyp  [0;39m ------------- 结束 耗时：18 ms -------------
2023-08-05 22:16:25.841 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985815cwp  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:16:25.841 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985815cwp  [0;39m ==> Parameters: 
2023-08-05 22:16:25.854 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985815cwp  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:16:25.855 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985815cwp  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:16:25.856 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985815cwp  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:16:25.856 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985815cwp  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:16:25.857 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985815cwp  [0;39m <==      Total: 3
2023-08-05 22:16:25.857 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244985815cwp  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:16:25.858 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244985815cwp  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:16:25.858 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244985815cwp  [0;39m ------------- 结束 耗时：42 ms -------------
2023-08-05 22:16:25.869 INFO  com.jktickets.interceptor.MemberInterceptor       :32   [32m1691244985869w02  [0;39m 获取会员登录token：eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE2OTExOTc3OTgsIm1vYmlsZSI6IjEzMDAwMDAwMDAwIiwiaWQiOjE2ODA5MzI5MDI3OTc0NDcxNjgsImV4cCI6MTY5MTI4NDE5OCwiaWF0IjoxNjkxMTk3Nzk4fQ.5EUiFeFjXOxg-QEInrLq26D2_7859KlkRI34-sZ9NDk
2023-08-05 22:16:25.869 INFO  com.jktickets.utils.JwtUtil                       :64   [32m1691244985869w02  [0;39m 根据token获取原始内容：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.870 INFO  com.jktickets.interceptor.MemberInterceptor       :35   [32m1691244985869w02  [0;39m 当前登录会员：{"mobile":"13000000000","id":1680932902797447168}
2023-08-05 22:16:25.870 INFO  com.jktickets.aspect.LogAspect                    :57   [32m1691244985869w02  [0;39m ------------- 开始 -------------
2023-08-05 22:16:25.870 INFO  com.jktickets.aspect.LogAspect                    :58   [32m1691244985869w02  [0;39m 请求地址: http://192.168.0.102:8002/business/station/queryAll GET
2023-08-05 22:16:25.871 INFO  com.jktickets.aspect.LogAspect                    :59   [32m1691244985869w02  [0;39m 类名方法: com.jktickets.controller.StationController.queryAllStationList
2023-08-05 22:16:25.871 INFO  com.jktickets.aspect.LogAspect                    :60   [32m1691244985869w02  [0;39m 远程地址: 192.168.0.102
2023-08-05 22:16:25.871 INFO  com.jktickets.aspect.LogAspect                    :82   [32m1691244985869w02  [0;39m 请求参数: []
2023-08-05 22:16:25.871 INFO  com.jktickets.aspect.LogAspect                    :106  [32m1691244985869w02  [0;39m 执行SQL:  selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:16:25.871 INFO  com.jktickets.aspect.LogAspect                    :111  [32m1691244985869w02  [0;39m 参数值: com.jktickets.domain.StationExample@26db6282
2023-08-05 22:16:25.885 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985869w02  [0;39m ==>  Preparing: select id, `name`, name_pinyin, name_py, create_time, update_time from station order by name_pinyin asc
2023-08-05 22:16:25.886 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985869w02  [0;39m ==> Parameters: 
2023-08-05 22:16:25.898 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985869w02  [0;39m <==    Columns: id, name, name_pinyin, name_py, create_time, update_time
2023-08-05 22:16:25.899 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985869w02  [0;39m <==        Row: 1680219843401486336, 杭州, hangzhou, hz, 2023-07-15 22:16:42.268, 2023-07-15 22:16:42.268
2023-08-05 22:16:25.900 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985869w02  [0;39m <==        Row: 1680205919650189312, 上海, shanghai, sh, 2023-07-15 21:21:22.591, 2023-07-15 21:21:22.591
2023-08-05 22:16:25.901 TRACE c.jktickets.mapper.StationMapper.selectByExample  :143  [32m1691244985869w02  [0;39m <==        Row: 1680205862385356800, 温州, wenzhou, wz, 2023-07-15 21:21:08.871, 2023-07-15 21:21:08.871
2023-08-05 22:16:25.902 DEBUG c.jktickets.mapper.StationMapper.selectByExample  :137  [32m1691244985869w02  [0;39m <==      Total: 3
2023-08-05 22:16:25.902 INFO  com.jktickets.aspect.LogAspect                    :120  [32m1691244985869w02  [0;39m SQL执行完成: selectByExample | execution(List com.jktickets.mapper.StationMapper.selectByExample(StationExample))
2023-08-05 22:16:25.903 INFO  com.jktickets.aspect.LogAspect                    :94   [32m1691244985869w02  [0;39m 返回结果: {"code":0,"message":"","result":[{"createTime":1689430602268,"id":1680219843401486336,"name":"杭州","namePinyin":"hangzhou","namePy":"hz","updateTime":1689430602268},{"createTime":1689427282591,"id":1680205919650189312,"name":"上海","namePinyin":"shanghai","namePy":"sh","updateTime":1689427282591},{"createTime":1689427268871,"id":1680205862385356800,"name":"温州","namePinyin":"wenzhou","namePy":"wz","updateTime":1689427268871}],"success":true}
2023-08-05 22:16:25.904 INFO  com.jktickets.aspect.LogAspect                    :95   [32m1691244985869w02  [0;39m ------------- 结束 耗时：34 ms -------------
2023-08-05 22:27:11.338 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m [1691244397134_127.0.0.1_59975]Request stream error, switch server,error={}
com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:487)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-08-05 22:27:11.337 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m [1691244394977_127.0.0.1_59973]Request stream error, switch server,error={}
com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:487)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-08-05 22:27:11.337 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m [1691244406198_127.0.0.1_60003]Request stream error, switch server,error={}
com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:487)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-08-05 22:27:11.338 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m [1691244397679_127.0.0.1_59976]Request stream error, switch server,error={}
com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:487)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2023-08-05 22:27:11.344 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2023-08-05 22:27:11.345 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.356 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Server healthy check fail, currentConnection = 1691244394977_127.0.0.1_59973
2023-08-05 22:27:11.356 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2023-08-05 22:27:11.356 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.357 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Server healthy check fail, currentConnection = 1691244397134_127.0.0.1_59975
2023-08-05 22:27:11.357 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.357 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2023-08-05 22:27:11.357 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.361 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Server healthy check fail, currentConnection = 1691244397679_127.0.0.1_59976
2023-08-05 22:27:11.362 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2023-08-05 22:27:11.362 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.363 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.363 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.367 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.463 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.464 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.464 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.468 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.468 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.468 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.469 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 1 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.469 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.469 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 1 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.469 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 1 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.472 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.473 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 1 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.670 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.671 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.672 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.675 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.676 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 2 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.676 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.676 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.678 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 2 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.678 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 2 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.679 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.683 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.683 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 2 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.978 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.981 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.981 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.981 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.982 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 3 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.984 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:11.984 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.984 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.986 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 3 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.986 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 3 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:11.987 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:11.988 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 3 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.382 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.385 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.386 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 4 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.388 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.388 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.389 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.391 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.391 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.393 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 4 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.392 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.393 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 4 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.393 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 4 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.887 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.893 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.894 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.894 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.894 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:12.894 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 5 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.900 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.900 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.900 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:12.902 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 5 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.902 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 5 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:12.903 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 5 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:13.495 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:13.499 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:13.499 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 6 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:13.503 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:13.503 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:13.503 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:13.506 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:13.506 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:13.507 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:13.507 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 6 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:13.507 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 6 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:13.508 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 6 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:14.200 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:14.203 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:14.204 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 7 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:14.209 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:14.209 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:14.209 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:14.213 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:14.213 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:14.213 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 7 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:14.213 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:14.214 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 7 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:14.214 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 7 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.005 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.012 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.013 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 8 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.015 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.015 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.015 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.022 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.022 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.024 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 8 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.023 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.024 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 8 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.024 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 8 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.915 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.918 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.918 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 9 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.925 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.926 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.927 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:15.928 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.929 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 9 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.929 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.930 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 9 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:15.930 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:15.931 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 9 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:16.919 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:16.922 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:16.923 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 10 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:16.929 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:16.930 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:16.931 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:16.932 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:16.932 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:16.933 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 10 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:16.933 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 10 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:16.934 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:16.934 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 10 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:18.025 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:18.031 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:18.033 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 11 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:18.035 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:18.035 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:18.035 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:18.040 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:18.040 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:18.040 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:18.041 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 11 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:18.041 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 11 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:18.041 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 11 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:19.236 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:19.241 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:19.242 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 12 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:19.243 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:19.244 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:19.244 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:19.248 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:19.248 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:19.249 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 12 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:19.249 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 12 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:19.249 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:19.250 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 12 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:20.543 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:20.546 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:20.546 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 13 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:20.550 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:20.551 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:20.552 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:20.554 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:20.554 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:20.555 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 13 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:20.555 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 13 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:20.555 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:20.556 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 13 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:21.948 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:21.952 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:21.953 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 14 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:21.956 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:21.957 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:21.958 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:21.959 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:21.960 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 14 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:21.961 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:21.962 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 14 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:21.962 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:21.963 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 14 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:23.454 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:23.458 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:23.458 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [b5cf0f5c-b7da-44e4-b86c-23edfa022876_config-0] Fail to connect server, after trying 15 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:23.461 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:23.464 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:23.465 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :182  [32m                  [0;39m grpc client connection server:127.0.0.1 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"OPENSSL","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2023-08-05 22:27:23.464 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:23.465 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [5ac38244-7216-45ec-aa83-9148d622e592] Fail to connect server, after trying 15 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:23.467 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:23.468 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d76e89f4-f891-4c8a-b224-cd5e641f0967_config-0] Fail to connect server, after trying 15 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:23.468 ERROR c.a.nacos.common.remote.client.grpc.GrpcClient    :102  [32m                  [0;39m Server check fail, please check server 127.0.0.1 ,port 9848 is available , error ={}
java.util.concurrent.ExecutionException: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:566)
	at com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:445)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.serverCheck(GrpcClient.java:218)
	at com.alibaba.nacos.common.remote.client.grpc.GrpcClient.connectToServer(GrpcClient.java:329)
	at com.alibaba.nacos.common.remote.client.RpcClient.reconnect(RpcClient.java:502)
	at com.alibaba.nacos.common.remote.client.RpcClient.lambda$start$2(RpcClient.java:343)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.alibaba.nacos.shaded.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
	at com.alibaba.nacos.shaded.io.grpc.Status.asRuntimeException(Status.java:539)
	at com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls$UnaryStreamToFuture.onClose(ClientCalls.java:544)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:471)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:435)
	at com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:468)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:563)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:744)
	at com.alibaba.nacos.shaded.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:723)
	at com.alibaba.nacos.shaded.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	... 3 common frames omitted
Caused by: com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:9848
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-08-05 22:27:23.469 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Fail to connect server, after trying 15 times, last try server is {serverIp = '127.0.0.1', server main port = 8848}, error = unknown
2023-08-05 22:27:24.376 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :102  [32m                  [0;39m [HttpClientBeanHolder] Start destroying common HttpClient
2023-08-05 22:27:24.376 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :136  [32m                  [0;39m [NotifyCenter] Start destroying Publisher
2023-08-05 22:27:24.377 WARN  com.alibaba.nacos.common.notify.NotifyCenter      :153  [32m                  [0;39m [NotifyCenter] Destruction of the end
2023-08-05 22:27:24.377 WARN  c.alibaba.nacos.common.http.HttpClientBeanHolder  :111  [32m                  [0;39m [HttpClientBeanHolder] Destruction of the end
2023-08-05 22:27:24.470 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :95   [32m                  [0;39m De-registering from Nacos Server now...
2023-08-05 22:27:24.471 INFO  com.alibaba.nacos.client.naming                   :217  [32m                  [0;39m [DEREGISTER-SERVICE] train deregistering service business-service with instance: Instance{instanceId='null', ip='192.168.0.102', port=8002, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2023-08-05 22:27:24.572 ERROR com.alibaba.nacos.common.remote.client            :102  [32m                  [0;39m Send request fail, request = InstanceRequest{headers={app=unknown}, requestId='null'}, retryTimes = 0, errorMessage = Client not connected, current status:UNHEALTHY
2023-08-05 22:27:24.673 ERROR com.alibaba.nacos.common.remote.client            :102  [32m                  [0;39m Send request fail, request = InstanceRequest{headers={app=unknown}, requestId='null'}, retryTimes = 1, errorMessage = Client not connected, current status:UNHEALTHY
2023-08-05 22:27:24.775 ERROR com.alibaba.nacos.common.remote.client            :102  [32m                  [0;39m Send request fail, request = InstanceRequest{headers={app=unknown}, requestId='null'}, retryTimes = 2, errorMessage = Client not connected, current status:UNHEALTHY
2023-08-05 22:27:24.793 ERROR c.a.cloud.nacos.registry.NacosServiceRegistry     :111  [32m                  [0;39m ERR_NACOS_DEREGISTER, de-register failed...NacosRegistration{nacosDiscoveryProperties=NacosDiscoveryProperties{serverAddr='127.0.0.1:8848', username='', password='', endpoint='', namespace='train', watchDelay=30000, logName='', service='business-service', weight=1.0, clusterName='DEFAULT', group='DEFAULT_GROUP', namingLoadCacheAtStart='false', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}, registerEnabled=true, ip='192.168.0.102', networkInterface='', port=8002, secure=false, accessKey='', secretKey='', heartBeatInterval=null, heartBeatTimeout=null, ipDeleteTimeout=null, instanceEnabled=true, ephemeral=true, failureToleranceEnabled=false}, ipDeleteTimeout=null, failFast=true}},
com.alibaba.nacos.api.exception.NacosException: Client not connected, current status:UNHEALTHY
	at com.alibaba.nacos.common.remote.client.RpcClient.request(RpcClient.java:643)
	at com.alibaba.nacos.common.remote.client.RpcClient.request(RpcClient.java:623)
	at com.alibaba.nacos.client.naming.remote.gprc.NamingGrpcClientProxy.requestToServer(NamingGrpcClientProxy.java:357)
	at com.alibaba.nacos.client.naming.remote.gprc.NamingGrpcClientProxy.doDeregisterService(NamingGrpcClientProxy.java:234)
	at com.alibaba.nacos.client.naming.remote.gprc.NamingGrpcClientProxy.deregisterService(NamingGrpcClientProxy.java:220)
	at com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate.deregisterService(NamingClientProxyDelegate.java:125)
	at com.alibaba.nacos.client.naming.NacosNamingService.deregisterInstance(NacosNamingService.java:192)
	at com.alibaba.nacos.client.naming.NacosNamingService.deregisterInstance(NacosNamingService.java:182)
	at com.alibaba.cloud.nacos.registry.NacosServiceRegistry.deregister(NacosServiceRegistry.java:107)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.deregister(AbstractAutoServiceRegistration.java:281)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.stop(AbstractAutoServiceRegistration.java:299)
	at org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.destroy(AbstractAutoServiceRegistration.java:233)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:424)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:382)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:212)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:191)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1170)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1082)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1051)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:173)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:983)
2023-08-05 22:27:24.793 INFO  c.a.cloud.nacos.registry.NacosServiceRegistry     :115  [32m                  [0;39m De-registration finished.
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :256  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :136  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :138  [32m                  [0;39m com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :258  [32m                  [0;39m com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :204  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2023-08-05 22:27:24.794 INFO  com.alibaba.nacos.client.naming                   :143  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2023-08-05 22:27:24.795 INFO  com.alibaba.nacos.client.naming                   :145  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2023-08-05 22:27:24.795 INFO  com.alibaba.nacos.client.naming                   :194  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2023-08-05 22:27:24.795 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:27:24.795 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:27:24.795 INFO  com.alibaba.nacos.client.naming                   :199  [32m                  [0;39m com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2023-08-05 22:27:24.795 INFO  com.alibaba.nacos.client.naming                   :484  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2023-08-05 22:27:24.795 WARN  com.alibaba.nacos.client.naming                   :74   [32m                  [0;39m [NamingHttpClientManager] Start destroying NacosRestTemplate
2023-08-05 22:27:24.795 WARN  com.alibaba.nacos.client.naming                   :81   [32m                  [0;39m [NamingHttpClientManager] Destruction of the end
2023-08-05 22:27:24.795 INFO  com.alibaba.nacos.client.naming                   :486  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2023-08-05 22:27:24.796 INFO  com.alibaba.nacos.common.remote.client            :429  [32m                  [0;39m Shutdown rpc client, set status to shutdown
2023-08-05 22:27:24.796 INFO  com.alibaba.nacos.common.remote.client            :431  [32m                  [0;39m Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@e767c5[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2023-08-05 22:27:24.796 INFO  com.alibaba.nacos.common.remote.client            :584  [32m                  [0;39m Close current connection 1691244406198_127.0.0.1_60003
2023-08-05 22:27:24.796 INFO  com.alibaba.nacos.common.remote.client            :63   [32m                  [0;39m [d29de593-1a3a-40fa-bb4a-f0b1b485aee3] Client is shutdown, stop reconnect to server
2023-08-05 22:27:24.796 INFO  c.a.nacos.common.remote.client.grpc.GrpcClient    :159  [32m                  [0;39m Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@73589fd5[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 316]
2023-08-05 22:27:24.797 INFO  com.alibaba.nacos.client.naming                   :318  [32m                  [0;39m Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@c329340[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 412]
2023-08-05 22:27:24.797 INFO  c.a.n.client.auth.ram.identify.CredentialWatcher  :106  [32m                  [0;39m [null] CredentialWatcher is stopped
2023-08-05 22:27:24.798 INFO  c.a.n.client.auth.ram.identify.CredentialService  :100  [32m                  [0;39m [null] CredentialService is freed
2023-08-05 22:27:24.799 INFO  com.alibaba.nacos.client.naming                   :211  [32m                  [0;39m com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2023-08-05 22:27:24.948 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m                  [0;39m HikariPool-1 - Shutdown initiated...
2023-08-05 22:27:24.967 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m                  [0;39m HikariPool-1 - Shutdown completed.
2023-08-05 22:27:24.968 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.969 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.969 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.969 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.970 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:27:24.970 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x32fbc52d, L:/192.168.0.102:59978 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:27:24.971 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:438  [32m                  [0;39m channel inactive: [id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.971 INFO  io.seata.core.rpc.netty.NettyClientChannelManager :130  [32m                  [0;39m return to pool, rm channel:[id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.972 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :133  [32m                  [0;39m channel valid false,channel:[id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.972 INFO  io.seata.core.rpc.netty.NettyPoolableFactory      :120  [32m                  [0;39m will destroy channel:[id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]
2023-08-05 22:27:24.972 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]) will closed
2023-08-05 22:27:24.972 INFO  i.seata.core.rpc.netty.AbstractNettyRemotingClient:488  [32m                  [0;39m ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3be7a907, L:/192.168.0.102:59983 ! R:/192.168.0.102:8091]) will closed
